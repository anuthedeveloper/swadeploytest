{"version":3,"file":"main-z2L349mS.js","sources":["../../_site/scripts/CreateLabel.js","../../_site/scripts/CameraTransitions.js","../../_site/scripts/StyleBuilder.js","../../node_modules/screenfull/index.js","../../node_modules/@nevware21/ts-utils/dist/es5/mod/ts-utils.js","../../node_modules/@microsoft/dynamicproto-js/dist-es5/DynamicProto.js","../../node_modules/@microsoft/applicationinsights-shims/dist-es5/Constants.js","../../node_modules/@microsoft/applicationinsights-shims/dist-es5/TsLibShims.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/EnumHelperFuncs.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AggregationError.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/__DynamicConstants.js","../../node_modules/@nevware21/ts-async/dist/es5/mod/ts-async.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/InternalConstants.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/HelperFuncs.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/EnvUtils.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/RandomHelper.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DataCacheHelper.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/ConfigDefaults.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicSupport.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicProperty.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicState.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicConfig.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AsyncUtils.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/Constants.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/ConfigDefaultHelpers.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DbgExtensionUtils.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DiagnosticLogger.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/CookieMgr.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/NotificationManager.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/PerfManager.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/CoreUtils.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/W3cTraceParent.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/TelemetryHelpers.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/ProcessTelemetryContext.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/BaseTelemetryPlugin.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/UnloadHandlerContainer.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/UnloadHookContainer.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/TelemetryInitializerPlugin.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AppInsightsCore.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/ResponseHelpers.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/SenderPostManager.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/EventHelpers.js","../../node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/InstrumentHooks.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Constants.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/RequestResponseHeaders.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/__DynamicConstants.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/DataSanitizer.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/UrlHelperFuncs.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Util.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Enums.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/StorageHelperFuncs.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/ThrottleMgr.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/Envelope.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Event.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Exception.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/DataPoint.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Metric.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/HelperFuncs.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/PageView.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/RemoteDependencyData.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Trace.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/PageViewPerformance.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/Data.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/Contracts/ContextTagKeys.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/TelemetryItemCreator.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/PartAExtensions.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/DomHelperFuncs.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/Offline.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/applicationinsights-common.js","../../node_modules/@microsoft/applicationinsights-analytics-js/dist-es5/__DynamicConstants.js","../../node_modules/@microsoft/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Telemetry/PageViewManager.js","../../node_modules/@microsoft/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","../../node_modules/@microsoft/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/AnalyticsPlugin.js","../../node_modules/@microsoft/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Telemetry/PageVisitTimeManager.js","../../node_modules/@microsoft/applicationinsights-analytics-js/dist-es5/JavaScriptSDK/Timing.js","../../node_modules/@microsoft/applicationinsights-cfgsync-js/dist-es5/__DynamicConstants.js","../../node_modules/@microsoft/applicationinsights-cfgsync-js/dist-es5/CfgSyncHelperFuncs.js","../../node_modules/@microsoft/applicationinsights-cfgsync-js/dist-es5/CfgSyncPlugin.js","../../node_modules/@microsoft/applicationinsights-channel-js/dist-es5/InternalConstants.js","../../node_modules/@microsoft/applicationinsights-channel-js/dist-es5/__DynamicConstants.js","../../node_modules/@microsoft/applicationinsights-channel-js/dist-es5/EnvelopeCreator.js","../../node_modules/@microsoft/applicationinsights-channel-js/dist-es5/SendBuffer.js","../../node_modules/@microsoft/applicationinsights-channel-js/dist-es5/Sender.js","../../node_modules/@microsoft/applicationinsights-channel-js/dist-es5/Serializer.js","../../node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","../../node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","../../node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/Sample.js","../../node_modules/@microsoft/applicationinsights-dependencies-js/dist-es5/InternalConstants.js","../../node_modules/@microsoft/applicationinsights-dependencies-js/dist-es5/__DynamicConstants.js","../../node_modules/@microsoft/applicationinsights-dependencies-js/dist-es5/ajaxRecord.js","../../node_modules/@microsoft/applicationinsights-dependencies-js/dist-es5/ajax.js","../../node_modules/@microsoft/applicationinsights-properties-js/dist-es5/Context/Application.js","../../node_modules/@microsoft/applicationinsights-properties-js/dist-es5/Context/Device.js","../../node_modules/@microsoft/applicationinsights-properties-js/dist-es5/Context/Internal.js","../../node_modules/@microsoft/applicationinsights-properties-js/dist-es5/Context/Location.js","../../node_modules/@microsoft/applicationinsights-properties-js/dist-es5/__DynamicConstants.js","../../node_modules/@microsoft/applicationinsights-properties-js/dist-es5/Context/Session.js","../../node_modules/@microsoft/applicationinsights-properties-js/dist-es5/Context/TelemetryTrace.js","../../node_modules/@microsoft/applicationinsights-properties-js/dist-es5/Context/User.js","../../node_modules/@microsoft/applicationinsights-properties-js/dist-es5/TelemetryContext.js","../../node_modules/@microsoft/applicationinsights-properties-js/dist-es5/PropertiesPlugin.js","../../node_modules/@microsoft/applicationinsights-web/dist-es5/AISku.js","../../node_modules/@microsoft/applicationinsights-web/dist-es5/InternalConstants.js","../../node_modules/@microsoft/applicationinsights-web/dist-es5/__DynamicConstants.js","../../node_modules/@microsoft/applicationinsights-common/dist-es5/ConnectionStringParser.js","../../_site/scripts/EventTracker.js","../../_site/scripts/ModelViewer.js","../../_site/scripts/main.js"],"sourcesContent":["import { SphereGeometry, Mesh, PlaneGeometry, Texture, ShaderMaterial, Vector3, FileLoader } from 'three';\nimport LabelColliderMaterialVertexShader from '/shaders/LabelColliderMaterial.vert';\nimport LabelColliderMaterialFragmentShader from '/shaders/LabelColliderMaterial.frag';\nimport LabelMaterialVertexShader from '/shaders/LabelMaterial.vert';\nimport LabelMaterialFragmentShader from '/shaders/LabelMaterial.frag';\nimport LabelBorderMaterialVertexShader from '/shaders/LabelBorderMaterial.vert';\nimport LabelBorderMaterialFragmentShader from '/shaders/LabelBorderMaterial.frag';\n\nexport async function createLabel(point, labelNumber, title, description, uid, camera, scene, labelPoints) {\n    const labelMaterial = await createLabelColliderMaterial(camera);\n    const labelGeometry = new SphereGeometry(0.24, 32);\n    const labelPoint = new Mesh(labelGeometry, labelMaterial);\n    labelPoint.position.copy(point);\n    labelPoint.userData = { number: labelNumber, title, description, uid };\n\n    const texture = createLabelTexture(labelNumber);\n    const textMesh = new Mesh(\n        new PlaneGeometry(0.45, 0.45), await createTextMaterial(texture, camera)\n    );\n    const borderCircle = new Mesh(\n        new PlaneGeometry(0.55, 0.55), (await createBorderMaterial(camera))\n    );\n    textMesh.position.copy(point);\n    borderCircle.position.copy(point);\n    textMesh.userData = { number: labelNumber };\n    textMesh.position.set(0, 0, 0);\n    textMesh.scale.set(0.1, 0.1, 0.1);\n    borderCircle.scale.set(0.1, 0.1, 0.1);\n    borderCircle.position.set(0, 0, 0);\n    labelPoint.add(textMesh);\n    labelPoint.add(borderCircle);\n    scene.add(labelPoint);\n    labelPoints.push(labelPoint);\n    labelPoint.scale.set(0.1, 0.1, 0.1);\n}\n\nfunction createLabelTexture(number) {\n    const canvas = document.createElement('canvas');\n    const size = 64;\n    canvas.width = size;\n    canvas.height = size;\n    const context = canvas.getContext('2d');\n\n    context.fillStyle = 'black';\n    context.font = 'bold 60px Arial';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.fillText(number, size / 2, size / 2);\n\n    const texture = new Texture(canvas);\n    texture.needsUpdate = true;\n    return texture;\n}\n\nasync function createLabelColliderMaterial(camera) {\n    return new ShaderMaterial({\n        vertexShader: LabelColliderMaterialVertexShader,\n        fragmentShader: LabelColliderMaterialFragmentShader\n    });\n}\n\nasync function createTextMaterial(texture, camera) {\n    const cameraRight = new Vector3(1, 0, 0).applyMatrix4(camera.matrixWorld);\n    const cameraUp = new Vector3(0, 1, 0).applyMatrix4(camera.matrixWorld);\n    const cameraForward = new Vector3(0, 0, 1).applyMatrix4(camera.matrixWorld);\n    return new ShaderMaterial({\n        vertexShader: LabelMaterialVertexShader,\n        fragmentShader: LabelMaterialFragmentShader,\n        uniforms: {\n            time: { value: 0 },\n            selected: { value: false },\n            myTexture: { value: texture },\n            uCameraPosition: { value: camera.position },\n            uCameraDirection: { value: camera.position },\n            uCameraRight: { value: cameraRight },\n            uCameraUp: { value: cameraUp },\n            uCameraForward: { value: cameraForward },\n            screenHeight: { value: window.innerHeight}\n        },\n        transparent: true\n    });\n}\n\nasync function createBorderMaterial(camera) {\n    const cameraRight = new Vector3(1, 0, 0).applyMatrix4(camera.matrixWorld);\n    const cameraUp = new Vector3(0, 1, 0).applyMatrix4(camera.matrixWorld);\n    const cameraForward = new Vector3(0, 0, 1).applyMatrix4(camera.matrixWorld);\n\n    return new ShaderMaterial({\n        vertexShader: LabelBorderMaterialVertexShader,\n        fragmentShader: LabelBorderMaterialFragmentShader,\n        uniforms: {\n            time: { value: 0 },\n            selected: { value: false },\n            uCameraPosition: { value: camera.position },\n            uCameraDirection: { value: camera.position },\n            uCameraRight: { value: cameraRight },\n            uCameraUp: { value: cameraUp },\n            uCameraForward: { value: cameraForward },\n            screenHeight: { value: window.innerHeight}\n        },\n        transparent: true\n    });\n\n}\n","import { Tween, Easing, getAll } from '@tweenjs/tween.js'\nimport { camera, controls, center } from './main';\n\nexport function animateCameraMove(targetPosition) {\n    const initialPosition = camera.position.clone();\n    const initialTarget = controls.target.clone();\n    const initialDistance = camera.position.distanceTo(controls.target);\n\n    const defaultDistance = 1.5;\n    const duration = 1500;\n\n    const zoomOutDistance = initialDistance * 0.85 + defaultDistance * 0.15;\n    const zoomInDistance = Math.min(initialDistance, defaultDistance);\n\n    const direction = initialPosition.clone().sub(initialTarget).normalize();\n    const zoomOutPosition = initialTarget.clone().add(direction.clone().multiplyScalar(zoomOutDistance));\n    const zoomInPosition = targetPosition.clone().add(direction.clone().multiplyScalar(zoomInDistance));\n\n    stopAllTweens();\n    function createZoomTween(position, target, duration) {\n        return new Tween(position)\n            .to({ x: target.x, y: target.y, z: target.z }, duration)\n            .easing(Easing.Quadratic.InOut)\n            .onUpdate(() => {\n                controls.update();\n            });\n    }\n\n    if (initialDistance < defaultDistance) {\n        const zoomOutTween = createZoomTween(camera.position, zoomOutPosition, duration / 2);\n        zoomOutTween.onComplete(() => {\n            const zoomInTween = createZoomTween(camera.position, zoomInPosition, duration / 2);\n            zoomInTween.onComplete(() => {\n                controls.enabled = true;\n            });\n            zoomInTween.start();\n        });\n        zoomOutTween.start();\n    } else {\n        const zoomTween = createZoomTween(camera.position, zoomInPosition, duration);\n        zoomTween.start();\n        zoomTween.onComplete(() => {\n            controls.enabled = true;\n        });\n    }\n\n    const panTween = createZoomTween(controls.target, targetPosition, duration);\n    panTween.start();\n\n    controls.enabled = false;\n}\n\nfunction stopAllTweens() {\n    const allTweens = getAll();\n    allTweens.forEach(tween => tween.stop());\n}\n\nexport function resetCamera() {\n    stopAllTweens();\n    const duration = 1000;\n\n    controls.enabled = false;\n    const panTween = new Tween(controls.target)\n        .to({\n            x: center.x,\n            y: center.y,\n            z: center.z\n        }, duration)\n        .easing(Easing.Quadratic.InOut)\n        .onUpdate(() => {\n            controls.update();\n        });\n\n    var distance = (camera.position.clone().sub(center));\n    var cameraZoomReset = distance.normalize().add(center).multiplyScalar(1.5);\n    const zoomInTween = new Tween(camera.position)\n        .to({\n            x: cameraZoomReset.x,\n            y: cameraZoomReset.y,\n            z: cameraZoomReset.z\n        }, duration)\n        .easing(Easing.Quadratic.InOut)\n        .onUpdate(() => {\n            controls.update();\n        })\n        .onComplete(() => {\n            controls.enabled = true;\n        });\n\n    panTween.start();\n    zoomInTween.start();\n}\n","export function append() {\n    const parameters = parseQueryString();\n\n    if (Object.keys(parameters).length === 0) {\n        return;\n    }\n\n    const lightBackground = parameters['light-background'];\n    const darkBackground = parameters['dark-background'];\n    let css = '';\n\n    if (lightBackground) {\n        css += `\n            body {\n                background-color: #${lightBackground};\n            }\n        `;\n    }\n\n    if (darkBackground) {\n        css += `\n            @media (prefers-color-scheme: dark) {\n                body {\n                    background-color: #${darkBackground};\n                }\n            }\n        `;\n    }\n\n    var head = document.getElementsByTagName('head')[0];\n    var style = document.createElement('style');\n    style.setAttribute('type', 'text/css');\n\n    if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        style.appendChild(document.createTextNode(css));\n    }\n    head.appendChild(style);\n}\n\nfunction parseQueryString() {\n    const query = window.location.search.substring(1);\n    const vars = query.split('&');\n    const parameters = {};\n\n    for (var i = 0; i < vars.length; i++) {\n        const pair = vars[i].split('=');\n        const key = decodeURIComponent(pair[0]);\n        const value = decodeURIComponent(pair[1]);\n        parameters[key] = value;\n    }\n\n    return parameters;\n}\n","/* eslint-disable promise/prefer-await-to-then */\n\nconst methodMap = [\n\t[\n\t\t'requestFullscreen',\n\t\t'exitFullscreen',\n\t\t'fullscreenElement',\n\t\t'fullscreenEnabled',\n\t\t'fullscreenchange',\n\t\t'fullscreenerror',\n\t],\n\t// New WebKit\n\t[\n\t\t'webkitRequestFullscreen',\n\t\t'webkitExitFullscreen',\n\t\t'webkitFullscreenElement',\n\t\t'webkitFullscreenEnabled',\n\t\t'webkitfullscreenchange',\n\t\t'webkitfullscreenerror',\n\n\t],\n\t// Old WebKit\n\t[\n\t\t'webkitRequestFullScreen',\n\t\t'webkitCancelFullScreen',\n\t\t'webkitCurrentFullScreenElement',\n\t\t'webkitCancelFullScreen',\n\t\t'webkitfullscreenchange',\n\t\t'webkitfullscreenerror',\n\n\t],\n\t[\n\t\t'mozRequestFullScreen',\n\t\t'mozCancelFullScreen',\n\t\t'mozFullScreenElement',\n\t\t'mozFullScreenEnabled',\n\t\t'mozfullscreenchange',\n\t\t'mozfullscreenerror',\n\t],\n\t[\n\t\t'msRequestFullscreen',\n\t\t'msExitFullscreen',\n\t\t'msFullscreenElement',\n\t\t'msFullscreenEnabled',\n\t\t'MSFullscreenChange',\n\t\t'MSFullscreenError',\n\t],\n];\n\nconst nativeAPI = (() => {\n\tif (typeof document === 'undefined') {\n\t\treturn false;\n\t}\n\n\tconst unprefixedMethods = methodMap[0];\n\tconst returnValue = {};\n\n\tfor (const methodList of methodMap) {\n\t\tconst exitFullscreenMethod = methodList?.[1];\n\t\tif (exitFullscreenMethod in document) {\n\t\t\tfor (const [index, method] of methodList.entries()) {\n\t\t\t\treturnValue[unprefixedMethods[index]] = method;\n\t\t\t}\n\n\t\t\treturn returnValue;\n\t\t}\n\t}\n\n\treturn false;\n})();\n\nconst eventNameMap = {\n\tchange: nativeAPI.fullscreenchange,\n\terror: nativeAPI.fullscreenerror,\n};\n\n// eslint-disable-next-line import/no-mutable-exports\nlet screenfull = {\n\t// eslint-disable-next-line default-param-last\n\trequest(element = document.documentElement, options) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst onFullScreenEntered = () => {\n\t\t\t\tscreenfull.off('change', onFullScreenEntered);\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\tscreenfull.on('change', onFullScreenEntered);\n\n\t\t\tconst returnPromise = element[nativeAPI.requestFullscreen](options);\n\n\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\treturnPromise.then(onFullScreenEntered).catch(reject);\n\t\t\t}\n\t\t});\n\t},\n\texit() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!screenfull.isFullscreen) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst onFullScreenExit = () => {\n\t\t\t\tscreenfull.off('change', onFullScreenExit);\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\tscreenfull.on('change', onFullScreenExit);\n\n\t\t\tconst returnPromise = document[nativeAPI.exitFullscreen]();\n\n\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\treturnPromise.then(onFullScreenExit).catch(reject);\n\t\t\t}\n\t\t});\n\t},\n\ttoggle(element, options) {\n\t\treturn screenfull.isFullscreen ? screenfull.exit() : screenfull.request(element, options);\n\t},\n\tonchange(callback) {\n\t\tscreenfull.on('change', callback);\n\t},\n\tonerror(callback) {\n\t\tscreenfull.on('error', callback);\n\t},\n\ton(event, callback) {\n\t\tconst eventName = eventNameMap[event];\n\t\tif (eventName) {\n\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t}\n\t},\n\toff(event, callback) {\n\t\tconst eventName = eventNameMap[event];\n\t\tif (eventName) {\n\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t}\n\t},\n\traw: nativeAPI,\n};\n\nObject.defineProperties(screenfull, {\n\tisFullscreen: {\n\t\tget: () => Boolean(document[nativeAPI.fullscreenElement]),\n\t},\n\telement: {\n\t\tenumerable: true,\n\t\tget: () => document[nativeAPI.fullscreenElement] ?? undefined,\n\t},\n\tisEnabled: {\n\t\tenumerable: true,\n\t\t// Coerce to boolean in case of old WebKit.\n\t\tget: () => Boolean(document[nativeAPI.fullscreenEnabled]),\n\t},\n});\n\nif (!nativeAPI) {\n\tscreenfull = {isEnabled: false};\n}\n\nexport default screenfull;\n","/*! https://github.com/nevware21/ts-utils v0.11.2 */\n/*\n * Copyright (c) NevWare21 and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureRef(value, name) {\n    return value[name];\n}\n\nvar UNDEF_VALUE = undefined;\nvar NULL_VALUE = null;\nvar EMPTY = \"\";\nvar FUNCTION = \"function\";\nvar OBJECT = \"object\";\nvar PROTOTYPE = \"prototype\";\nvar __PROTO__ = \"__proto__\";\nvar UNDEFINED = \"undefined\";\nvar CONSTRUCTOR = \"constructor\";\nvar SYMBOL = \"Symbol\";\nvar POLYFILL_TAG = \"_polyfill\";\nvar LENGTH = \"length\";\nvar NAME = \"name\";\nvar CALL = \"call\";\nvar TO_STRING = \"toString\";\nvar ObjClass = ( /*#__PURE__*/_pureAssign(Object));\nvar ObjProto = ( /*#__PURE__*/_pureRef(ObjClass, PROTOTYPE));\nvar StrCls = ( /*#__PURE__*/_pureAssign(String));\nvar StrProto = ( /*#__PURE__*/_pureRef(StrCls, PROTOTYPE));\nvar MathCls = ( /*#__PURE__*/_pureAssign(Math));\nvar ArrCls = ( /*#__PURE__*/_pureAssign(Array));\nvar ArrProto = ( /*#__PURE__*/_pureRef(ArrCls, PROTOTYPE));\nvar ArrSlice = ( /*#__PURE__*/_pureRef(ArrProto, \"slice\"));\n\nfunction safe(func, argArray) {\n    try {\n        return {\n            v: func.apply(this, argArray)\n        };\n    }\n    catch (e) {\n        return { e: e };\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGet(cb, defValue) {\n    var result = safe(cb);\n    return result.e ? defValue : result.v;\n}\n\nvar _primitiveTypes;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIs(theType) {\n    return function (value) {\n        return typeof value === theType;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createObjIs(theName) {\n    var theType = \"[object \" + theName + \"]\";\n    return function (value) {\n        return !!(value && objToString(value) === theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objToString(value) {\n    return ObjProto[TO_STRING].call(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTypeof(value, theType) {\n    return typeof value === theType;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isUndefined(value) {\n    return typeof value === UNDEFINED || value === UNDEFINED;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictUndefined(arg) {\n    return !isDefined(arg);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNullOrUndefined(value) {\n    return value === NULL_VALUE || isUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictNullOrUndefined(value) {\n    return value === NULL_VALUE || !isDefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isDefined(arg) {\n    return !!arg || arg !== UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitive(value) {\n    return value === NULL_VALUE || isPrimitiveType(typeof value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitiveType(theType) {\n    !_primitiveTypes && (_primitiveTypes = [\"string\", \"number\", \"boolean\", UNDEFINED, \"symbol\", \"bigint\"]);\n    return theType !== OBJECT && _primitiveTypes.indexOf(theType) !== -1;\n}\nvar isString = ( /*#__PURE__*/_createIs(\"string\"));\nvar isFunction = ( /*#__PURE__*/_createIs(FUNCTION));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isObject(value) {\n    if (!value && isNullOrUndefined(value)) {\n        return false;\n    }\n    return !!value && typeof value === OBJECT;\n}\nvar isArray = ( /* #__PURE__*/_pureRef(ArrCls, \"isArray\"));\nvar isDate = ( /*#__PURE__*/_createObjIs(\"Date\"));\nvar isNumber = ( /*#__PURE__*/_createIs(\"number\"));\nvar isBoolean = ( /*#__PURE__*/_createIs(\"boolean\"));\nvar isRegExp = ( /*#__PURE__*/_createObjIs(\"RegExp\"));\nvar isFile = ( /*#__PURE__*/_createObjIs(\"File\"));\nvar isFormData = ( /*#__PURE__*/_createObjIs(\"FormData\"));\nvar isBlob = ( /*#__PURE__*/_createObjIs(\"Blob\"));\nvar isArrayBuffer = ( /*#__PURE__*/_createObjIs(\"ArrayBuffer\"));\nvar isError = ( /*#__PURE__*/_createObjIs(\"Error\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromiseLike(value) {\n    return !!(value && value.then && isFunction(value.then));\n}\nvar isThenable = isPromiseLike;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromise(value) {\n    return !!(value && value.then && value.catch && isFunction(value.then) && isFunction(value.catch));\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNotTruthy(value) {\n    return !value || !isTruthy(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTruthy(value) {\n    return !(!value || safeGet(function () { return !(value && (0 + value)); }, !value));\n}\n\nvar objGetOwnPropertyDescriptor = ( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptor\"));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction objHasOwnProperty(obj, prop) {\n    return !!obj && ObjProto.hasOwnProperty[CALL](obj, prop);\n}\n\nvar objHasOwn = ( /*#__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"hasOwn\")), polyObjHasOwn));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjHasOwn(obj, prop) {\n    return objHasOwnProperty(obj, prop) || !!objGetOwnPropertyDescriptor(obj, prop);\n}\n\nfunction objForEachKey(theObject, callbackfn, thisArg) {\n    if (theObject && isObject(theObject)) {\n        for (var prop in theObject) {\n            if (objHasOwn(theObject, prop)) {\n                if (callbackfn[CALL](thisArg || theObject, prop, theObject[prop]) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createKeyValueMap(values, keyType, valueType, completeFn) {\n    var theMap = {};\n    objForEachKey(values, function (key, value) {\n        theMap[key] = keyType ? value : key;\n        theMap[value] = valueType ? value : key;\n    });\n    return completeFn(theMap);\n}\n\nvar asString = ( /* #__PURE__ */_pureAssign(StrCls));\n\nvar ERROR_TYPE = \"[object Error]\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction dumpObj(object, format) {\n    var propertyValueDump = EMPTY;\n    var objType = ObjProto[TO_STRING][CALL](object);\n    if (objType === ERROR_TYPE) {\n        object = { stack: asString(object.stack), message: asString(object.message), name: asString(object.name) };\n    }\n    try {\n        propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? ((typeof format === \"number\") ? format : 4) : UNDEF_VALUE);\n        propertyValueDump = (propertyValueDump && propertyValueDump.replace(/\"(\\w+)\"\\s*:\\s{0,1}/g, \"$1: \")) || asString(object);\n    }\n    catch (e) {\n        propertyValueDump = \" - \" + dumpObj(e, format);\n    }\n    return objType + \": \" + propertyValueDump;\n}\n\nfunction throwError(message) {\n    throw new Error(message);\n}\nfunction throwTypeError(message) {\n    throw new TypeError(message);\n}\nfunction throwRangeError(message) {\n    throw new RangeError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjKeys(obj) {\n    if (!isObject(obj) || obj === NULL_VALUE) {\n        throwTypeError(\"non-object \" + dumpObj(obj));\n    }\n    var result = [];\n    for (var prop in obj) {\n        if (objHasOwn(obj, prop)) {\n            result.push(prop);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjEntries(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push([key, value]);\n    });\n    return result;\n}\n\nvar _objFreeze = ( /* #__PURE__ */_pureRef(ObjClass, \"freeze\"));\nfunction _doNothing(value) {\n    return value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getProto(value) {\n    return value[__PROTO__] || NULL_VALUE;\n}\nvar objAssign = ( /*#__PURE__*/_pureRef(ObjClass, \"assign\"));\nvar objKeys = ( /*#__PURE__*/_pureRef(ObjClass, \"keys\"));\nfunction objDeepFreeze(value) {\n    if (_objFreeze) {\n        objForEachKey(value, function (key, value) {\n            if (isArray(value) || isObject(value)) {\n                _objFreeze(value);\n            }\n        });\n    }\n    return objFreeze(value);\n}\nvar objFreeze = ( /* #__PURE__*/_pureAssign(_objFreeze, _doNothing));\nvar objSeal = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"seal\")), _doNothing));\nvar objGetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"getPrototypeOf\")), _getProto));\nvar objEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"entries\")), polyObjEntries));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnum(values) {\n    return _createKeyValueMap(values, 1 , 0 , objDeepFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumKeyMap(values) {\n    return _createKeyValueMap(values, 0 , 0 , objDeepFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumValueMap(values) {\n    return _createKeyValueMap(values, 1 , 1 , objDeepFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createSimpleMap(values) {\n    var mapClass = {};\n    objForEachKey(values, function (key, value) {\n        mapClass[key] = value[1];\n        mapClass[value[0]] = value[1];\n    });\n    return objDeepFreeze(mapClass);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createTypeMap(values) {\n    return createSimpleMap(values);\n}\n\nvar _wellKnownSymbolMap = /*#__PURE__*/ createEnumKeyMap({\n    asyncIterator: 0 ,\n    hasInstance: 1 ,\n    isConcatSpreadable: 2 ,\n    iterator: 3 ,\n    match: 4 ,\n    matchAll: 5 ,\n    replace: 6 ,\n    search: 7 ,\n    species: 8 ,\n    split: 9 ,\n    toPrimitive: 10 ,\n    toStringTag: 11 ,\n    unscopables: 12\n});\n\nvar GLOBAL_CONFIG_KEY = \"__tsUtils$gblCfg\";\nvar _globalCfg;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalValue() {\n    var result;\n    if (typeof globalThis !== UNDEFINED) {\n        result = globalThis;\n    }\n    if (!result && typeof self !== UNDEFINED) {\n        result = self;\n    }\n    if (!result && typeof window !== UNDEFINED) {\n        result = window;\n    }\n    if (!result && typeof global !== UNDEFINED) {\n        result = global;\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalConfig() {\n    if (!_globalCfg) {\n        var gbl = safe(_getGlobalValue).v || {};\n        _globalCfg = gbl[GLOBAL_CONFIG_KEY] = gbl[GLOBAL_CONFIG_KEY] || {};\n    }\n    return _globalCfg;\n}\n\nvar _unwrapFunction = ( _unwrapFunctionWithPoly);\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapFunctionWithPoly(funcName, clsProto, polyFunc) {\n    var clsFn = clsProto && clsProto[funcName];\n    return function (thisArg) {\n        var theFunc = (thisArg && thisArg[funcName]) || clsFn;\n        if (theFunc || polyFunc) {\n            var theArgs = arguments;\n            return (theFunc || polyFunc).apply(thisArg, theFunc ? ArrSlice[CALL](theArgs, 1) : theArgs);\n        }\n        throwTypeError(\"\\\"\" + asString(funcName) + \"\\\" not defined for \" + dumpObj(thisArg));\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapProp(propName) {\n    return function (thisArg) {\n        return thisArg[propName];\n    };\n}\n\nvar mathMin = ( /*#__PURE__*/_pureRef(MathCls, \"min\"));\nvar mathMax = ( /*#__PURE__*/_pureRef(MathCls, \"max\"));\n\nvar strSlice = ( /*#__PURE__*/_unwrapFunction(\"slice\", StrProto));\n\nvar strSubstring = ( /*#__PURE__*/_unwrapFunction(\"substring\", StrProto));\nvar strSubstr = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"substr\", StrProto, polyStrSubstr));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSubstr(value, start, length) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"Invalid \" + dumpObj(value));\n    }\n    if (length < 0) {\n        return EMPTY;\n    }\n    start = start || 0;\n    if (start < 0) {\n        start = mathMax(start + value[LENGTH], 0);\n    }\n    if (isUndefined(length)) {\n        return strSlice(value, start);\n    }\n    return strSlice(value, start, start + length);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLeft(value, count) {\n    return strSubstring(value, 0, count);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strRight(value, count) {\n    return count <= 0 ? EMPTY : (value[LENGTH] > count ? strSlice(value, -count) : value);\n}\n\nvar UNIQUE_REGISTRY_ID = \"_urid\";\nvar _polySymbols;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _globalSymbolRegistry() {\n    if (!_polySymbols) {\n        var gblCfg = _getGlobalConfig();\n        _polySymbols = gblCfg.gblSym = gblCfg.gblSym || { k: {}, s: {} };\n    }\n    return _polySymbols;\n}\nvar _wellKnownSymbolCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyNewSymbol(description) {\n    var theSymbol = {\n        description: asString(description),\n        toString: function () { return SYMBOL + \"(\" + description + \")\"; }\n    };\n    theSymbol[POLYFILL_TAG] = true;\n    return theSymbol;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolFor(key) {\n    var registry = _globalSymbolRegistry();\n    if (!objHasOwn(registry.k, key)) {\n        var newSymbol_1 = polyNewSymbol(key);\n        var regId_1 = objKeys(registry.s).length;\n        newSymbol_1[UNIQUE_REGISTRY_ID] = function () { return regId_1 + \"_\" + newSymbol_1[TO_STRING](); };\n        registry.k[key] = newSymbol_1;\n        registry.s[newSymbol_1[UNIQUE_REGISTRY_ID]()] = asString(key);\n    }\n    return registry.k[key];\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolKeyFor(sym) {\n    if (!sym || !sym[TO_STRING] || strSubstring(sym[TO_STRING](), 0, 6) != SYMBOL) {\n        throwTypeError(sym + \" is not a symbol\");\n    }\n    var regId = sym[POLYFILL_TAG] && sym[UNIQUE_REGISTRY_ID] && sym[UNIQUE_REGISTRY_ID]();\n    return regId ? _globalSymbolRegistry().s[regId] : undefined;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyGetKnownSymbol(name) {\n    !_wellKnownSymbolCache && (_wellKnownSymbolCache = {});\n    var result;\n    var knownName = _wellKnownSymbolMap[name];\n    if (knownName) {\n        result = _wellKnownSymbolCache[knownName] = _wellKnownSymbolCache[knownName] || polyNewSymbol(SYMBOL + \".\" + knownName);\n    }\n    return result;\n}\n\nvar propMap = {\n    e: \"enumerable\",\n    c: \"configurable\",\n    v: \"value\",\n    w: \"writable\",\n    g: \"get\",\n    s: \"set\"\n};\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createProp(value) {\n    var prop = {};\n    prop[propMap[\"c\"]] = true;\n    prop[propMap[\"e\"]] = true;\n    if (value.l) {\n        prop.get = function () { return value.l.v; };\n        var desc = objGetOwnPropertyDescriptor(value.l, \"v\");\n        if (desc && desc.set) {\n            prop.set = function (newValue) {\n                value.l.v = newValue;\n            };\n        }\n    }\n    objForEachKey(value, function (key, value) {\n        prop[propMap[key]] = isUndefined(value) ? prop[propMap[key]] : value;\n    });\n    return prop;\n}\nvar objDefineProp = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperty\"));\nvar objDefineProperties = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperties\"));\nfunction objDefineGet(target, key, value, configurable, enumerable) {\n    var _a;\n    return objDefineProp(target, key, _createProp((_a = {\n            e: enumerable,\n            c: configurable\n        },\n        _a[isFunction(value) ? \"g\" : \"v\"] = value,\n        _a)));\n}\nfunction objDefineAccessors(target, prop, getProp, setProp, configurable, enumerable) {\n    var desc = {\n        e: enumerable,\n        c: configurable\n    };\n    if (getProp) {\n        desc.g = getProp;\n    }\n    if (setProp) {\n        desc.s = setProp;\n    }\n    return objDefineProp(target, prop, _createProp(desc));\n}\nfunction objDefine(target, key, propDesc) {\n    return objDefineProp(target, key, _createProp(propDesc));\n}\nfunction objDefineProps(target, propDescMap) {\n    var props = {};\n    objForEachKey(propDescMap, function (key, value) {\n        props[key] = _createProp(value);\n    });\n    return objDefineProperties(target, props);\n}\n\nvar _globalLazyTestHooks;\nfunction _initTestHooks() {\n    _globalLazyTestHooks = _getGlobalConfig();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                objDefineProp(lazyValue, \"v\", {\n                    value: result\n                });\n            }\n            lazyValue.b = _globalLazyTestHooks.lzy;\n            return result;\n        }\n    });\n    return lazyValue;\n}\nfunction setBypassLazyCache(newValue) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _globalLazyTestHooks.lzy = newValue;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCachedValue(value) {\n    return objDefineProp({\n        toJSON: function () { return value; }\n    }, \"v\", { value: value });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createDeferredCachedValue(cb) {\n    var theValue = {\n        toJSON: function () { return theValue.v; }\n    };\n    return objDefineProp(theValue, \"v\", {\n        get: function () {\n            var result = cb();\n            cb = NULL_VALUE;\n            objDefineProp(theValue, \"v\", { value: result });\n            return result;\n        },\n        configurable: true\n    });\n}\n\nvar WINDOW = \"window\";\nvar _cachedGlobal;\nfunction _getGlobalInstFn(getFn, theArgs) {\n    var cachedValue;\n    return function () {\n        !_globalLazyTestHooks && _initTestHooks();\n        (!cachedValue || _globalLazyTestHooks.lzy) && (cachedValue = createCachedValue(safe(getFn, theArgs).v));\n        return cachedValue.v;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction lazySafeGetInst(name) {\n    return getLazy(function () { return safe((getInst), [name]).v || UNDEF_VALUE; });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getGlobal(useCached) {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_cachedGlobal || useCached === false || _globalLazyTestHooks.lzy) && (_cachedGlobal = createCachedValue(safe(_getGlobalValue).v || NULL_VALUE));\n    return _cachedGlobal.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getInst(name, useCached) {\n    var gbl = (!_cachedGlobal || useCached === false) ? getGlobal(useCached) : _cachedGlobal.v;\n    if (gbl && gbl[name]) {\n        return gbl[name];\n    }\n    if (name === WINDOW) {\n        return getWindow();\n    }\n    return NULL_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasDocument() {\n    return !!( /*#__PURE__*/getDocument());\n}\nvar getDocument = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"document\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasWindow() {\n    return !!( /*#__PURE__*/getWindow());\n}\nvar getWindow = ( /*#__PURE__*/_getGlobalInstFn(getInst, [WINDOW]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasNavigator() {\n    return !!( /*#__PURE__*/getNavigator());\n}\nvar getNavigator = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"navigator\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasHistory() {\n    return !!( /*#__PURE__*/getHistory());\n}\nvar getHistory = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"history\"]));\nvar isNode = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return (process && (process.versions || {}).node); }).v);\n}));\nvar isWebWorker = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return self && self instanceof WorkerGlobalScope; }).v);\n}));\n\nvar _symbol;\nvar _symbolFor;\nvar _symbolKeyFor;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _initSymbol() {\n    _symbol = ( /*#__PURE__*/createCachedValue(safe((getInst), [SYMBOL]).v));\n    return _symbol;\n}\nfunction _getSymbolKey(key) {\n    var gblSym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return (gblSym.v ? gblSym.v[key] : UNDEF_VALUE);\n}\nvar isSymbol = ( /*#__PURE__*/_createIs(\"symbol\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasSymbol() {\n    return !!( /*#__PURE__*/getSymbol());\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getSymbol() {\n    !_globalLazyTestHooks && _initTestHooks();\n    return ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol()).v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getKnownSymbol(name, noPoly) {\n    var knownName = _wellKnownSymbolMap[name];\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v[knownName || name] : (!noPoly ? polyGetKnownSymbol(name) : UNDEF_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction newSymbol(description, noPoly) {\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v(description) : (!noPoly ? polyNewSymbol(description) : NULL_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolFor(key) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolFor = ((!_globalLazyTestHooks.lzy ? _symbolFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"for\"]).v)));\n    return (_symbolFor.v || polySymbolFor)(key);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolKeyFor(sym) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolKeyFor = ((!_globalLazyTestHooks.lzy ? _symbolKeyFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"keyFor\"]).v)));\n    return (_symbolKeyFor.v || polySymbolKeyFor)(sym);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterator(value) {\n    return !!value && isFunction(value.next);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterable(value) {\n    return !isStrictNullOrUndefined(value) && isFunction(value[getKnownSymbol(3 )]);\n}\n\nvar _iterSymbol$1;\nfunction iterForOf(iter, callbackfn, thisArg) {\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterSymbol$1 && (_iterSymbol$1 = createCachedValue(getKnownSymbol(3 )));\n            iter = iter[_iterSymbol$1.v] ? iter[_iterSymbol$1.v]() : null;\n        }\n        if (isIterator(iter)) {\n            var err = UNDEF_VALUE;\n            var iterResult = UNDEF_VALUE;\n            try {\n                var count = 0;\n                while (!(iterResult = iter.next()).done) {\n                    if (callbackfn[CALL](thisArg || iter, iterResult.value, count, iter) === -1) {\n                        break;\n                    }\n                    count++;\n                }\n            }\n            catch (failed) {\n                err = { e: failed };\n                if (iter.throw) {\n                    iterResult = NULL_VALUE;\n                    iter.throw(err);\n                }\n            }\n            finally {\n                try {\n                    if (iterResult && !iterResult.done) {\n                        iter.return && iter.return(iterResult);\n                    }\n                }\n                finally {\n                    if (err) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw err.e;\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction fnApply(fn, thisArg, argArray) {\n    return fn.apply(thisArg, argArray);\n}\nfunction fnCall(fn, thisArg) {\n    return fn.apply(thisArg, ArrSlice[CALL](arguments, 2));\n}\nfunction fnBind(fn, thisArg) {\n    return fn.bind.apply(fn, ArrSlice[CALL](arguments, 1));\n}\n\nfunction arrAppend(target, elms) {\n    if (!isUndefined(elms) && target) {\n        if (isArray(elms)) {\n            fnApply(target.push, target, elms);\n        }\n        else if (isIterator(elms) || isIterable(elms)) {\n            iterForOf(elms, function (elm) {\n                target.push(elm);\n            });\n        }\n        else {\n            target.push(elms);\n        }\n    }\n    return target;\n}\n\nvar arrEvery = /*#__PURE__*/ _unwrapFunction(\"every\", ArrProto);\nvar arrFilter = /*#__PURE__*/ _unwrapFunction(\"filter\", ArrProto);\n\nfunction arrForEach(theArray, callbackfn, thisArg) {\n    if (theArray) {\n        var len = theArray[LENGTH] >>> 0;\n        for (var idx = 0; idx < len; idx++) {\n            if (idx in theArray) {\n                if (callbackfn[CALL](thisArg || theArray, theArray[idx], idx, theArray) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar arrIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", ArrProto));\nvar arrLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", ArrProto));\n\nvar arrMap = ( /*#__PURE__*/_unwrapFunction(\"map\", ArrProto));\n\nfunction arrSlice(theArray, start, end) {\n    return ((theArray && theArray[\"slice\"]) || ArrSlice).apply(theArray, ArrSlice[CALL](arguments, 1));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyIsArray(value) {\n    if (isNullOrUndefined(value)) {\n        return false;\n    }\n    return objToString(value) === \"[object Array]\";\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyArrIncludes(theArray, searchElement, fromIndex) {\n    return arrIndexOf(theArray, searchElement, fromIndex) !== -1;\n}\nfunction polyArrFind(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    arrForEach(theArray, function (value, index) {\n        if (callbackFn[CALL](thisArg | theArray, value, index, theArray)) {\n            result = index;\n            return -1;\n        }\n    });\n    return result;\n}\nfunction polyArrFindLast(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindLastIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindLastIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    var len = theArray[LENGTH] >>> 0;\n    for (var idx = len - 1; idx >= 0; idx--) {\n        if (idx in theArray && callbackFn[CALL](thisArg | theArray, theArray[idx], idx, theArray)) {\n            result = idx;\n            break;\n        }\n    }\n    return result;\n}\nfunction polyArrFrom(theValue, mapFn, thisArg) {\n    if (isArray(theValue)) {\n        var result_1 = arrSlice(theValue);\n        return mapFn ? arrMap(result_1, mapFn, thisArg) : result_1;\n    }\n    var result = [];\n    iterForOf(theValue, function (value, cnt) {\n        return result.push(mapFn ? mapFn[CALL](thisArg, value, cnt) : value);\n    });\n    return result;\n}\n\nvar arrFind = /*#__PURE__*/ _unwrapFunctionWithPoly(\"find\", ArrProto, polyArrFind);\nvar arrFindIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findIndex\", ArrProto, polyArrFindIndex);\nvar arrFindLast = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLast\", ArrProto, polyArrFindLast);\nvar arrFindLastIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLastIndex\", ArrProto, polyArrFindLastIndex);\n\nvar arrFrom = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ArrCls, \"from\")), polyArrFrom));\n\nvar arrIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", ArrProto, polyArrIncludes));\nvar arrContains = arrIncludes;\n\nvar arrReduce = ( /*#__PURE__*/_unwrapFunction(\"reduce\", ArrProto));\n\nvar arrSome = ( /*#__PURE__*/_unwrapFunction(\"some\", ArrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFnDeferredProxy(hostFn, funcName) {\n    return function () {\n        var theArgs = ArrSlice[CALL](arguments);\n        var theHost = hostFn();\n        return fnApply(theHost[funcName], theHost, theArgs);\n    };\n}\nfunction createProxyFuncs(target, host, funcDefs) {\n    if (target && host && isArray(funcDefs)) {\n        var isDeferred_1 = isFunction(host);\n        arrForEach(funcDefs, function (funcDef) {\n            var targetName = (funcDef.as || funcDef.n);\n            if (funcDef.rp === false && target[targetName]) {\n                return;\n            }\n            target[targetName] = isDeferred_1 ?\n                createFnDeferredProxy(host, funcDef.n) :\n                fnBind(host[funcDef.n], host);\n        });\n    }\n    return target;\n}\n\nvar _iterSymbol;\n/*#__NO_SIDE_EFFECTS__*/\nfunction readArgs(theArgs, start, end) {\n    if (!objHasOwn(theArgs, LENGTH)) {\n        !_iterSymbol && (_iterSymbol = createCachedValue(hasSymbol() && getKnownSymbol(3 )));\n        var iterFn = _iterSymbol.v && theArgs[_iterSymbol.v];\n        if (iterFn) {\n            var values_1 = [];\n            var from_1 = (start === UNDEF_VALUE || start < 0) ? 0 : start;\n            var to_1 = end < 0 || start < 0 ? UNDEF_VALUE : end;\n            iterForOf(iterFn[CALL](theArgs), function (value, cnt) {\n                if (to_1 !== UNDEF_VALUE && cnt >= to_1) {\n                    return -1;\n                }\n                if (cnt >= from_1) {\n                    values_1.push(value);\n                }\n            });\n            if ((start === UNDEF_VALUE || start >= 0) && (end === UNDEF_VALUE || end >= 0)) {\n                return values_1;\n            }\n            theArgs = values_1;\n        }\n    }\n    return arrSlice(theArgs, start, end);\n}\n\nvar objCreate = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"create\")), polyObjCreate));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjCreate(obj) {\n    if (!obj) {\n        return {};\n    }\n    var type = typeof obj;\n    if (type !== OBJECT && type !== FUNCTION) {\n        throwTypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\n    }\n    function tempFunc() { }\n    tempFunc[PROTOTYPE] = obj;\n    return new tempFunc();\n}\n\nvar _isProtoArray;\nfunction objSetPrototypeOf(obj, proto) {\n    var fn = ObjClass[\"setPrototypeOf\"] ||\n        function (d, b) {\n            var _a;\n            !_isProtoArray && (_isProtoArray = createCachedValue((_a = {}, _a[__PROTO__] = [], _a) instanceof Array));\n            _isProtoArray.v ? d[__PROTO__] = b : objForEachKey(b, function (key, value) { return d[key] = value; });\n        };\n    return fn(obj, proto);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createCustomError(name, d, b) {\n    safe(objDefine, [d, NAME, { v: name, c: true, e: false }]);\n    d = objSetPrototypeOf(d, b);\n    function __() {\n        this[CONSTRUCTOR] = d;\n        safe(objDefine, [this, NAME, { v: name, c: true, e: false }]);\n    }\n    d[PROTOTYPE] = b === NULL_VALUE ? objCreate(b) : (__[PROTOTYPE] = b[PROTOTYPE], new __());\n    return d;\n}\nfunction _setName(baseClass, name) {\n    name && (baseClass[NAME] = name);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCustomError(name, constructCb, errorBase) {\n    var theBaseClass = errorBase || Error;\n    var orgName = theBaseClass[PROTOTYPE][NAME];\n    var captureFn = Error.captureStackTrace;\n    return _createCustomError(name, function () {\n        var _this = this;\n        var theArgs = arguments;\n        try {\n            safe(_setName, [theBaseClass, name]);\n            var _self = fnApply(theBaseClass, _this, ArrSlice[CALL](theArgs)) || _this;\n            if (_self !== _this) {\n                var orgProto = objGetPrototypeOf(_this);\n                if (orgProto !== objGetPrototypeOf(_self)) {\n                    objSetPrototypeOf(_self, orgProto);\n                }\n            }\n            captureFn && captureFn(_self, _this[CONSTRUCTOR]);\n            constructCb && constructCb(_self, theArgs);\n            return _self;\n        }\n        finally {\n            safe(_setName, [theBaseClass, orgName]);\n        }\n    }, theBaseClass);\n}\nvar _unsupportedError;\nfunction throwUnsupported(message) {\n    if (!_unsupportedError) {\n        _unsupportedError = createCustomError(\"UnsupportedError\");\n    }\n    throw new _unsupportedError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction utcNow() {\n    return (Date.now || polyUtcNow)();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyUtcNow() {\n    return new Date().getTime();\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTrimFn(exp) {\n    return function _doTrim(value) {\n        if (isNullOrUndefined(value)) {\n            throwTypeError(\"strTrim called [\" + dumpObj(value) + \"]\");\n        }\n        if (value && value.replace) {\n            value = value.replace(exp, EMPTY);\n        }\n        return value;\n    };\n}\nvar polyStrTrim = ( /*#__PURE__*/_createTrimFn(/^\\s+|(?=\\s)\\s+$/g));\nvar polyStrTrimStart = ( /*#__PURE__*/_createTrimFn(/^\\s+/g));\nvar polyStrTrimEnd = ( /*#__PURE__*/_createTrimFn(/(?=\\s)\\s+$/g));\n\nvar strTrim = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trim\", StrProto, polyStrTrim));\nvar strTrimStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimStart\", StrProto, polyStrTrimStart));\nvar strTrimLeft = ( /*#__PURE__*/_pureAssign(strTrimStart));\nvar strTrimEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimEnd\", StrProto, polyStrTrimEnd));\nvar strTrimRight = ( /*#__PURE__*/_pureAssign(strTrimEnd));\n\nvar strUpper = ( /*#__PURE__*/_unwrapFunction(\"toUpperCase\", StrProto));\nvar strLower = ( /*#__PURE__*/_unwrapFunction(\"toLowerCase\", StrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _convertCase(value, newPrefix, upperWord) {\n    return strTrim(asString(value)).replace(/((_|\\W)+(\\w){0,1}|([a-z])([A-Z]))/g, function (_match, _g1, _g2, wordStart, upperPrefix, upperLetter) {\n        var convertMatch = wordStart || upperLetter || EMPTY;\n        if (upperWord) {\n            convertMatch = strUpper(convertMatch);\n        }\n        return (upperPrefix || EMPTY) + newPrefix + convertMatch;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLetterCase(value) {\n    return asString(value).replace(/(_|\\b)\\w/g, strUpper);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strCamelCase(value, upperFirst) {\n    var result = _convertCase(value, \"\", true);\n    return result.replace(/^\\w/, upperFirst ? strUpper : strLower);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strKebabCase(value, scream) {\n    var result = _convertCase(value, \"-\");\n    return (scream ? strUpper : strLower)(result);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strSnakeCase(value, scream) {\n    var result = _convertCase(value, \"_\");\n    return (scream ? strUpper : strLower)(result);\n}\n\nvar mathFloor = ( /*#__PURE__*/_pureRef(MathCls, \"floor\"));\nvar mathCeil = ( /*#__PURE__*/_pureRef(MathCls, \"ceil\"));\n\nvar mathTrunc = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(MathCls, \"trunc\")), polyMathTrunc));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyMathTrunc(value) {\n    var theValue = +value;\n    return (theValue > 0 ? mathFloor : mathCeil)(theValue);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction mathToInt(value, throwInfinity) {\n    var result = +value;\n    if (result == Infinity && throwInfinity) {\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\n    }\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\n}\n\nvar strRepeat = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"repeat\", StrProto, polyStrRepeat));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrRepeat(value, count) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"can't convert [\" + dumpObj(value) + \"]\");\n    }\n    count = mathToInt(count, true);\n    if (count < 0) {\n        throwRangeError(\"invalid count must be >= 0 && < Infinity\");\n    }\n    var pad = isString(value) ? value : asString(value);\n    var result = EMPTY;\n    for (; count > 0; (count >>>= 1) && (pad += pad)) {\n        if (count & 1) {\n            result += pad;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _padValue(value, targetLength, padString) {\n    var result = EMPTY;\n    targetLength = mathToInt(targetLength, true);\n    targetLength >>= 0;\n    var len = value[LENGTH];\n    if (len < targetLength) {\n        result = isNullOrUndefined(padString) ? \" \" : asString(padString);\n        targetLength = targetLength - len;\n        if (targetLength > result[LENGTH]) {\n            result = strRepeat(result, mathCeil(targetLength / result[LENGTH]));\n        }\n        if (result[LENGTH] > targetLength) {\n            result = strSubstring(result, 0, targetLength);\n        }\n    }\n    return result;\n}\nvar strPadStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padStart\", StrProto, polyStrPadStart));\nvar strPadEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padEnd\", StrProto, polyStrPadEnd));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadStart(value, targetLength, padString) {\n    return _padValue(value, targetLength, padString) + value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadEnd(value, targetLength, padString) {\n    return value + _padValue(value, targetLength, padString);\n}\n\nvar DBL_QUOTE = \"\\\"\";\nvar INVALID_JS_NAME = /([^\\w\\d_$])/g;\nvar _htmlEntityCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction normalizeJsName(jsName, camelCase) {\n    var result = asString(jsName).replace(INVALID_JS_NAME, \"_\");\n    return !isUndefined(camelCase) ? strCamelCase(result, !camelCase) : result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsJson(value, format) {\n    var result;\n    if (isString(value)) {\n        result = DBL_QUOTE + value.replace(/[^\\w .,\\-!@#$%\\^&*\\(\\)_+={}\\[\\]:;|<>?]/g, function (match) {\n            if (match === DBL_QUOTE || match === \"\\\\\") {\n                return \"\\\\\" + match;\n            }\n            var hex = match.charCodeAt(0)[TO_STRING](16);\n            return \"\\\\u\" + strPadStart(strUpper(hex), 4, \"0\");\n        }) + DBL_QUOTE;\n    }\n    else {\n        try {\n            result = JSON.stringify(value, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\n        }\n        catch (e) {\n            result = DBL_QUOTE + dumpObj(e) + DBL_QUOTE;\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsHtml(value) {\n    !_htmlEntityCache && (_htmlEntityCache = {\n        \"&\": \"amp\",\n        \"<\": \"lt\",\n        \">\": \"gt\",\n        \"\\\"\": \"quot\",\n        \"'\": \"#39\"\n    });\n    return asString(value).replace(/[&<>\"']/g, function (match) { return \"&\" + _htmlEntityCache[match] + \";\"; });\n}\n\nvar _fnToString;\nvar _objCtrFnString;\nvar _gblWindow;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPlainObject(value) {\n    if (!value || typeof value !== OBJECT) {\n        return false;\n    }\n    if (!_gblWindow) {\n        _gblWindow = hasWindow() ? getWindow() : true;\n    }\n    var result = false;\n    if (value !== _gblWindow) {\n        if (!_objCtrFnString) {\n            _fnToString = Function[PROTOTYPE][TO_STRING];\n            _objCtrFnString = _fnToString[CALL](ObjClass);\n        }\n        try {\n            var proto = objGetPrototypeOf(value);\n            result = !proto;\n            if (!result) {\n                if (objHasOwnProperty(proto, CONSTRUCTOR)) {\n                    proto = proto[CONSTRUCTOR];\n                }\n                result = proto && typeof proto === FUNCTION && _fnToString[CALL](proto) === _objCtrFnString;\n            }\n        }\n        catch (ex) {\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _defaultDeepCopyHandler(details) {\n    details.value && plainObjDeepCopyHandler(details);\n    return true;\n}\nvar defaultDeepCopyHandlers = [\n    arrayDeepCopyHandler,\n    plainObjDeepCopyHandler,\n    functionDeepCopyHandler,\n    dateDeepCopyHandler\n];\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getSetVisited(visitMap, source, newPath, cb) {\n    var theEntry;\n    arrForEach(visitMap, function (entry) {\n        if (entry.k === source) {\n            theEntry = entry;\n            return -1;\n        }\n    });\n    if (!theEntry) {\n        theEntry = { k: source, v: source };\n        visitMap.push(theEntry);\n        cb(theEntry);\n    }\n    return theEntry.v;\n}\nfunction _deepCopy(visitMap, value, ctx, key) {\n    var userHandler = ctx.handler;\n    var newPath = ctx.path ? (key ? ctx.path.concat(key) : ctx.path) : [];\n    var newCtx = {\n        handler: ctx.handler,\n        src: ctx.src,\n        path: newPath\n    };\n    var theType = typeof value;\n    var isPlain = false;\n    var isPrim = false;\n    if (value && theType === OBJECT) {\n        isPlain = isPlainObject(value);\n    }\n    else {\n        isPrim = value === NULL_VALUE || isPrimitiveType(theType);\n    }\n    var details = {\n        type: theType,\n        isPrim: isPrim,\n        isPlain: isPlain,\n        value: value,\n        result: value,\n        path: newPath,\n        origin: ctx.src,\n        copy: function (source, newKey) {\n            return _deepCopy(visitMap, source, newKey ? newCtx : ctx, newKey);\n        },\n        copyTo: function (target, source) {\n            return _copyProps(visitMap, target, source, newCtx);\n        }\n    };\n    if (!details.isPrim) {\n        return _getSetVisited(visitMap, value, newPath, function (newEntry) {\n            objDefine(details, \"result\", {\n                g: function () {\n                    return newEntry.v;\n                },\n                s: function (newValue) {\n                    newEntry.v = newValue;\n                }\n            });\n            var idx = 0;\n            var handler = userHandler;\n            while (!(handler || (idx < defaultDeepCopyHandlers.length ? defaultDeepCopyHandlers[idx++] : _defaultDeepCopyHandler))[CALL](ctx, details)) {\n                handler = NULL_VALUE;\n            }\n        });\n    }\n    if (userHandler && userHandler[CALL](ctx, details)) {\n        return details.result;\n    }\n    return value;\n}\nfunction _copyProps(visitMap, target, source, ctx) {\n    if (!isNullOrUndefined(source)) {\n        for (var key in source) {\n            target[key] = _deepCopy(visitMap, source[key], ctx, key);\n        }\n    }\n    return target;\n}\nfunction objCopyProps(target, source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source,\n        path: []\n    };\n    return _copyProps([], target, source, ctx);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objDeepCopy(source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source\n    };\n    return _deepCopy([], source, ctx);\n}\nfunction arrayDeepCopyHandler(details) {\n    var value = details.value;\n    if (isArray(value)) {\n        var target = details.result = [];\n        target.length = value.length;\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\nfunction dateDeepCopyHandler(details) {\n    var value = details.value;\n    if (isDate(value)) {\n        details.result = new Date(value.getTime());\n        return true;\n    }\n    return false;\n}\nfunction functionDeepCopyHandler(details) {\n    if (details.type === FUNCTION) {\n        return true;\n    }\n    return false;\n}\nfunction plainObjDeepCopyHandler(details) {\n    var value = details.value;\n    if (value && details.isPlain) {\n        var target = details.result = {};\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\n\nfunction _doExtend(target, theArgs) {\n    arrForEach(theArgs, function (theArg) {\n        objCopyProps(target, theArg);\n    });\n    return target;\n}\nfunction deepExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(objDeepCopy(target) || {}, ArrSlice[CALL](arguments));\n}\nfunction objExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(target || {}, ArrSlice[CALL](arguments));\n}\n\nvar getLength = ( /*#__PURE__*/_unwrapProp(LENGTH));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getIntValue(value, defValue) {\n    if (!isNullOrUndefined(value)) {\n        if (isNumber(value)) {\n            return value;\n        }\n        var theValue = parseInt(value, 10);\n        return isNaN(theValue) ? defValue : theValue;\n    }\n    return defValue;\n}\n\nvar _perf;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasPerformance() {\n    return !!getPerformance();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getPerformance() {\n    !_globalLazyTestHooks && _initTestHooks();\n    (!_perf || _globalLazyTestHooks.lzy) && (_perf = createCachedValue(safe((getInst), [\"performance\"]).v));\n    return _perf.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction perfNow() {\n    var perf = getPerformance();\n    if (perf && perf.now) {\n        return perf.now();\n    }\n    return utcNow();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction elapsedTime(startTime) {\n    return perfNow() - startTime;\n}\n\nvar MATCH_ANY = \"(.*)\";\nvar MATCH_SINGLE = \"(.)\";\nfunction _createRegExp(value, escapeRgx, replaceFn, ignoreCase, fullMatch) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp((fullMatch ? \"^\" : EMPTY) + replaceFn(value.replace(escapeRgx, \"\\\\$1\")) + (fullMatch ? \"$\" : EMPTY), ignoreCase ? \"i\" : \"\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createWildcardRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.\\?{}()\\[\\]\\\\/\\\"\\'])/g, function (value) {\n        return value.replace(/\\*/g, MATCH_ANY);\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFilenameRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\\\\\\\|\\\\\\/|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            return g1 == \"*\" ? MATCH_ANY : MATCH_SINGLE;\n        });\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction makeGlobRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\*\\*\\\\[\\\\\\/]|\\\\\\\\|\\\\\\/|\\*\\*|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"**\\\\/\" || g1 == \"**\\\\\\\\\") {\n                return \"(.*[\\\\\\\\\\\\/])*\";\n            }\n            if (g1 === \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            if (g1 === \"**\") {\n                return MATCH_ANY;\n            }\n            return g1 === \"*\" ? \"([^\\\\\\\\\\\\/]*)\" : \"([^\\\\\\\\\\\\/]{1})\";\n        });\n    }, !!ignoreCase, fullMatch);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetLazy(cb, defValue) {\n    return getLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _checkLength(value, props) {\n    var result;\n    arrForEach(props, function (prop) {\n        if (prop in value) {\n            var propValue = value[prop];\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\n            return -1;\n        }\n    });\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _hasValue(value, depth) {\n    var result = value === false || value === 0;\n    if (!result && !isNullOrUndefined(value)) {\n        if (isArray(value)) {\n            result = value[LENGTH] > 0;\n        }\n        else if (isDate(value)) {\n            result = !isNaN(value.getTime());\n        }\n        else if (isBoolean(value)) {\n            return true;\n        }\n        else if (isObject(value)) {\n            try {\n                var chkValue = _checkLength(value, [LENGTH, \"byteLength\", \"size\", \"count\"]);\n                if (isBoolean(chkValue)) {\n                    return chkValue;\n                }\n                if (isFunction(value.valueOf) && depth < 5) {\n                    return _hasValue(value.valueOf(), ++depth);\n                }\n            }\n            catch (e) {\n            }\n            return !!objKeys(value)[LENGTH];\n        }\n        else {\n            result = isTruthy(value);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasValue(value) {\n    return _hasValue(value, 0);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterable(ctx) {\n    return makeIterable({}, ctx);\n}\nfunction makeIterable(target, ctx) {\n    var itSymbol = getKnownSymbol(3 );\n    function _createIterator() {\n        return createIterator(ctx);\n    }\n    target[itSymbol] = _createIterator;\n    return target;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterator(ctx) {\n    var isDone = false;\n    function _value() {\n        return ctx.v;\n    }\n    function _next() {\n        isDone = isDone || (ctx.n ? ctx.n(arguments) : true);\n        var result = {\n            done: isDone\n        };\n        if (!isDone) {\n            objDefine(result, \"value\", { g: _value });\n        }\n        return result;\n    }\n    function _return(value) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.r && ctx.r(value)\n        };\n    }\n    function _throw(e) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.t && ctx.t(e)\n        };\n    }\n    var theIterator = {\n        next: _next\n    };\n    if (ctx.r) {\n        theIterator.return = _return;\n    }\n    if (ctx.t) {\n        theIterator.throw = _throw;\n    }\n    return theIterator;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createArrayIterator(values) {\n    var idx = -1;\n    var theValues = values ? values.slice() : [];\n    var len = theValues[LENGTH];\n    function _value() {\n        if (idx >= 0 && idx < len) {\n            return theValues[idx];\n        }\n    }\n    function _getNext() {\n        idx++;\n        return idx >= len;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createRangeIterator(start, end, step) {\n    var nextValue = start;\n    var theValue = UNDEF_VALUE;\n    if (isNullOrUndefined(end)) {\n        end = start;\n    }\n    var theStep = step || ((start <= end) ? 1 : -1);\n    function _value() {\n        return theValue;\n    }\n    function _getNext() {\n        var isDone = false;\n        if (theStep > 0) {\n            isDone = nextValue > end;\n        }\n        else {\n            isDone = nextValue < end;\n        }\n        if (!isDone) {\n            theValue = nextValue;\n            nextValue += theStep;\n        }\n        return isDone;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSymSplit(value, splitter, limit) {\n    var splitFn = splitter && splitter[getKnownSymbol(9 )];\n    return splitFn ? splitFn(value, limit) : [value];\n}\n\nvar strSplit = ( /*#__PURE__*/_unwrapFunction(\"split\", StrProto));\nvar strSymSplit = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"split\", StrProto, !hasSymbol() ? polyStrSymSplit : null));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByKey(target, path, defValue) {\n    if (!path || !target) {\n        return defValue;\n    }\n    var parts = strSplit(path, \".\");\n    var cnt = parts.length;\n    for (var lp = 0; lp < cnt && !isNullOrUndefined(target); lp++) {\n        target = target[parts[lp]];\n    }\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByIter(target, iter, defValue) {\n    if (!iter || !target) {\n        return defValue;\n    }\n    iterForOf(iter, function (value) {\n        if (isNullOrUndefined(target)) {\n            return -1;\n        }\n        target = target[value];\n    });\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\nfunction setValueByKey(target, path, value) {\n    if (target && path) {\n        var parts = strSplit(path, \".\");\n        var lastKey = parts.pop();\n        arrForEach(parts, function (key) {\n            if (isNullOrUndefined(target[key])) {\n                target[key] = {};\n            }\n            target = target[key];\n        });\n        target[lastKey] = value;\n    }\n}\nfunction setValueByIter(target, iter, value) {\n    if (target && iter) {\n        var lastKey_1;\n        iterForOf(iter, function (key) {\n            if (lastKey_1) {\n                if (isNullOrUndefined(target[lastKey_1])) {\n                    target[lastKey_1] = {};\n                }\n                target = target[lastKey_1];\n            }\n            lastKey_1 = key;\n        });\n        target[lastKey_1] = value;\n    }\n}\n\nvar strEndsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"endsWith\", StrProto, polyStrEndsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrEndsWith(value, searchString, length) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var end = !isUndefined(length) && length < value[LENGTH] ? length : value[LENGTH];\n    return strSubstring(value, end - searchValue[LENGTH], end) === searchValue;\n}\n\nvar strIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", StrProto));\nvar strLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", StrProto));\n\nvar strIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", StrProto, polyStrIncludes));\nvar strContains = ( /*#__PURE__*/_pureAssign(strIncludes));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrIncludes(value, searchString, position) {\n    if (isRegExp(searchString)) {\n        throwTypeError(\"'searchString' must not be a regular expression\" + dumpObj(searchString));\n    }\n    return strIndexOf(value, asString(searchString), position) !== -1;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrWhiteSpace(value) {\n    if (isString(value)) {\n        return value.replace(/[\\s\\t\\r\\n\\f]+/g, EMPTY) === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrEmpty(value) {\n    if (isString(value)) {\n        return value === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n\nvar strStartsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"startsWith\", StrProto, polyStrStartsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrStartsWith(value, searchString, position) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var pos = position > 0 ? position : 0;\n    return strSubstring(value, pos, pos + searchValue[LENGTH]) === searchValue;\n}\n\nvar REF = \"ref\";\nvar UNREF = \"unref\";\nvar HAS_REF = \"hasRef\";\nvar ENABLED = \"enabled\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTimerHandler(startTimer, refreshFn, cancelFn) {\n    var ref = true;\n    var timerId = startTimer ? refreshFn(NULL_VALUE) : NULL_VALUE;\n    var theTimerHandler;\n    function _unref() {\n        ref = false;\n        timerId && timerId[UNREF] && timerId[UNREF]();\n        return theTimerHandler;\n    }\n    function _cancel() {\n        timerId && cancelFn(timerId);\n        timerId = NULL_VALUE;\n    }\n    function _refresh() {\n        timerId = refreshFn(timerId);\n        if (!ref) {\n            _unref();\n        }\n        return theTimerHandler;\n    }\n    function _setEnabled(value) {\n        !value && timerId && _cancel();\n        value && !timerId && _refresh();\n    }\n    theTimerHandler = {\n        cancel: _cancel,\n        refresh: _refresh\n    };\n    theTimerHandler[HAS_REF] = function () {\n        if (timerId && timerId[HAS_REF]) {\n            return timerId[HAS_REF]();\n        }\n        return ref;\n    };\n    theTimerHandler[REF] = function () {\n        ref = true;\n        timerId && timerId[REF] && timerId[REF]();\n        return theTimerHandler;\n    };\n    theTimerHandler[UNREF] = _unref;\n    theTimerHandler = objDefineProp(theTimerHandler, ENABLED, {\n        get: function () { return !!timerId; },\n        set: _setEnabled\n    });\n    return {\n        h: theTimerHandler,\n        dn: function () {\n            timerId = NULL_VALUE;\n        }\n    };\n}\n\nfunction _createTimeoutWith(startTimer, overrideFn, theArgs) {\n    var isArr = isArray(overrideFn);\n    var len = isArr ? overrideFn.length : 0;\n    var setFn = (len > 0 ? overrideFn[0] : (!isArr ? overrideFn : UNDEF_VALUE)) || setTimeout;\n    var clearFn = (len > 1 ? overrideFn[1] : UNDEF_VALUE) || clearTimeout;\n    var timerFn = theArgs[0];\n    theArgs[0] = function () {\n        handler.dn();\n        fnApply(timerFn, UNDEF_VALUE, ArrSlice[CALL](arguments));\n    };\n    var handler = _createTimerHandler(startTimer, function (timerId) {\n        if (timerId) {\n            if (timerId.refresh) {\n                timerId.refresh();\n                return timerId;\n            }\n            fnApply(clearFn, UNDEF_VALUE, [timerId]);\n        }\n        return fnApply(setFn, UNDEF_VALUE, theArgs);\n    }, function (timerId) {\n        fnApply(clearFn, UNDEF_VALUE, [timerId]);\n    });\n    return handler.h;\n}\nfunction scheduleTimeout(callback, timeout) {\n    return _createTimeoutWith(true, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction scheduleTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(true, overrideFn, ArrSlice[CALL](arguments, 1));\n}\nfunction createTimeout(callback, timeout) {\n    return _createTimeoutWith(false, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction createTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(false, overrideFn, ArrSlice[CALL](arguments, 1));\n}\n\nvar _defaultIdleTimeout = 100;\nvar _maxExecutionTime = 50;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasIdleCallback() {\n    return !!( /*#__PURE__*/getIdleCallback());\n}\nvar getIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"requestIdleCallback\"]));\nvar getCancelIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"cancelIdleCallback\"]));\nfunction setDefaultIdleTimeout(timeout) {\n    _defaultIdleTimeout = timeout;\n}\nfunction setDefaultMaxExecutionTime(maxTime) {\n    _maxExecutionTime = maxTime;\n}\nfunction scheduleIdleCallback(callback, options) {\n    function _createDeadline(timedOut) {\n        var startTime = perfNow();\n        return {\n            didTimeout: timedOut,\n            timeRemaining: function () {\n                return _maxExecutionTime - elapsedTime(startTime);\n            }\n        };\n    }\n    if (hasIdleCallback()) {\n        var handler_1 = _createTimerHandler(true, function (idleId) {\n            idleId && getCancelIdleCallback()(idleId);\n            return getIdleCallback()(function (deadline) {\n                handler_1.dn();\n                callback(deadline || _createDeadline(false));\n            }, options);\n        }, function (idleId) {\n            getCancelIdleCallback()(idleId);\n        });\n        return handler_1.h;\n    }\n    var timeout = (options || {}).timeout;\n    if (isUndefined(timeout)) {\n        timeout = _defaultIdleTimeout;\n    }\n    return scheduleTimeout(function () {\n        callback(_createDeadline(true));\n    }, timeout);\n}\n\nfunction scheduleInterval(callback, timeout) {\n    var theArguments = ArrSlice[CALL](arguments);\n    var handler = _createTimerHandler(true, function (intervalId) {\n        intervalId && clearInterval(intervalId);\n        return fnApply(setInterval, UNDEF_VALUE, theArguments);\n    }, function (intervalId) {\n        fnApply(clearInterval, UNDEF_VALUE, [intervalId]);\n    });\n    return handler.h;\n}\n\nexport { arrAppend, arrContains, arrEvery, arrFilter, arrFind, arrFindIndex, arrFindLast, arrFindLastIndex, arrForEach, arrFrom, arrIncludes, arrIndexOf, arrLastIndexOf, arrMap, arrReduce, arrSlice, arrSome, arrayDeepCopyHandler, asString, createArrayIterator, createCachedValue, createCustomError, createDeferredCachedValue, createEnum, createEnumKeyMap, createEnumValueMap, createFilenameRegex, createFnDeferredProxy, createIterable, createIterator, createProxyFuncs, createRangeIterator, createSimpleMap, createTimeout, createTimeoutWith, createTypeMap, createWildcardRegex, dateDeepCopyHandler, deepExtend, dumpObj, elapsedTime, encodeAsHtml, encodeAsJson, fnApply, fnBind, fnCall, functionDeepCopyHandler, getCancelIdleCallback, getDocument, getGlobal, getHistory, getIdleCallback, getInst, getIntValue, getKnownSymbol, getLazy, getLength, getNavigator, getPerformance, getSymbol, getValueByIter, getValueByKey, getWindow, hasDocument, hasHistory, hasIdleCallback, hasNavigator, hasPerformance, hasSymbol, hasValue, hasWindow, isArray, isArrayBuffer, isBlob, isBoolean, isDate, isDefined, isError, isFile, isFormData, isFunction, isIterable, isIterator, isNode, isNotTruthy, isNullOrUndefined, isNumber, isObject, isPlainObject, isPrimitive, isPrimitiveType, isPromise, isPromiseLike, isRegExp, isStrictNullOrUndefined, isStrictUndefined, isString, isSymbol, isThenable, isTruthy, isTypeof, isUndefined, isWebWorker, iterForOf, lazySafeGetInst, makeGlobRegex, makeIterable, mathCeil, mathFloor, mathMax, mathMin, mathToInt, mathTrunc, newSymbol, normalizeJsName, objAssign, objCopyProps, objCreate, objDeepCopy, objDeepFreeze, objDefine, objDefineAccessors, objDefineGet, objDefineProp, objDefineProperties, objDefineProps, objEntries, objExtend, objForEachKey, objFreeze, objGetOwnPropertyDescriptor, objGetPrototypeOf, objHasOwn, objHasOwnProperty, objKeys, objSeal, objSetPrototypeOf, objToString, perfNow, plainObjDeepCopyHandler, polyArrFind, polyArrFindIndex, polyArrFindLast, polyArrFindLastIndex, polyArrFrom, polyArrIncludes, polyGetKnownSymbol, polyIsArray, polyNewSymbol, polyObjEntries, polyObjHasOwn, polyObjKeys, polyStrIncludes, polyStrSubstr, polyStrSymSplit, polyStrTrim, polyStrTrimEnd, polyStrTrimStart, polySymbolFor, polySymbolKeyFor, polyUtcNow, readArgs, safe, safeGet, safeGetLazy, scheduleIdleCallback, scheduleInterval, scheduleTimeout, scheduleTimeoutWith, setBypassLazyCache, setDefaultIdleTimeout, setDefaultMaxExecutionTime, setValueByIter, setValueByKey, strCamelCase, strContains, strEndsWith, strIncludes, strIndexOf, strIsNullOrEmpty, strIsNullOrWhiteSpace, strKebabCase, strLastIndexOf, strLeft, strLetterCase, strLower, strPadEnd, strPadStart, strRepeat, strRight, strSlice, strSnakeCase, strSplit, strStartsWith, strSubstr, strSubstring, strSymSplit, strTrim, strTrimEnd, strTrimLeft, strTrimRight, strTrimStart, strUpper, symbolFor, symbolKeyFor, throwError, throwRangeError, throwTypeError, throwUnsupported, utcNow };\n//# sourceMappingURL=ts-utils.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\nimport { getGlobal, objCreate, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!objHasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && objHasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || objHasOwnProperty(target, funcName)) && funcName !== str__Proto && funcName !== Prototype);\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throwTypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = objCreate(null);\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = objCreate(null);\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && objHasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || objCreate(null);\r\n        instFunc = (instFuncTable[proto[DynClassName]] || objCreate(null))[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !objHasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || objCreate(null);\r\n        if (!_isObjectOrArrayPrototype(instFuncTable)) {\r\n            var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || objCreate(null)); // fetch and assign if as it may not exist yet\r\n            // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n            }\r\n            if (!_isObjectOrArrayPrototype(instFuncs_1)) {\r\n                _forEachProp(target, function (name) {\r\n                    // Only add overridden functions\r\n                    if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                        instFuncs_1[name] = target[name];\r\n                        delete target[name];\r\n                        // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                        if (!objHasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                            proto[name] = _createDynamicPrototype(proto, name);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (objHasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!objHasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (objHasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getGlobal, objAssign, objCreate, objDefineProp, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { ObjClass, ObjProto, strDefault, strShimFunction, strShimPrototype } from \"./Constants\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES5 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nvar strHasOwnProperty = \"hasOwnProperty\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = objAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreate(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (objHasOwnProperty(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && objDefineProp(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !objHasOwnProperty(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!objDefineProp) {\r\n        objDefineProp(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (objDefineProp) {\r\n        objDefineProp(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!objDefineProp) {\r\n        objDefineProp(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnum, createTypeMap } from \"@nevware21/ts-utils\";\r\n/**\r\n * Create an enum style object which has both the key => value and value => key mappings\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createEnumStyle = createEnum;\r\n/**\r\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] => mapValue and X[0] => mapValue.\r\n * Generic values\r\n * - E = the const enum type (typeof eRequestHeaders);\r\n * - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The\r\n * resulting \"Value\" of each entry identifies the valid values withing the assignments.\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createValueMap = createTypeMap;\r\n//# sourceMappingURL=EnumHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, createCustomError, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nvar aggregationErrorType;\r\n/**\r\n * Throws an Aggregation Error which includes all of the errors that led to this error occurring\r\n * @param message - The message describing the aggregation error (the sourceError details are added to this)\r\n * @param sourceErrors - An array of the errors that caused this situation\r\n */\r\nexport function throwAggregationError(message, sourceErrors) {\r\n    if (!aggregationErrorType) {\r\n        aggregationErrorType = createCustomError(\"AggregationError\", function (self, args) {\r\n            if (args[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                // Save the provided errors\r\n                self.errors = args[1];\r\n            }\r\n        });\r\n    }\r\n    var theMessage = message || \"One or more errors occurred.\";\r\n    arrForEach(sourceErrors, function (srcError, idx) {\r\n        theMessage += \"\\n\".concat(idx, \" > \").concat(dumpObj(srcError));\r\n    });\r\n    throw new aggregationErrorType(theMessage, sourceErrors || []);\r\n}\r\n//# sourceMappingURL=AggregationError.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 11\r\nexport var _DYN_BLK_VAL = \"blkVal\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 51\r\nexport var _DYN_RD_ONLY = \"rdOnly\"; // Count: 4\r\nexport var _DYN_NOTIFY = \"notify\"; // Count: 4\r\nexport var _DYN_WARN_TO_CONSOLE = \"warnToConsole\"; // Count: 4\r\nexport var _DYN_THROW_INTERNAL = \"throwInternal\"; // Count: 5\r\nexport var _DYN_SET_DF = \"setDf\"; // Count: 6\r\nexport var _DYN_WATCH = \"watch\"; // Count: 8\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 21\r\nexport var _DYN_APPLY = \"apply\"; // Count: 7\r\nexport var _DYN_PUSH = \"push\"; // Count: 32\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 8\r\nexport var _DYN_HDLR = \"hdlr\"; // Count: 6\r\nexport var _DYN_CANCEL = \"cancel\"; // Count: 6\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_REMOVE_NOTIFICATION_0 = \"removeNotificationListener\"; // Count: 4\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 4\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 5\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 6\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 2\r\nexport var _DYN_NAME = \"name\"; // Count: 12\r\nexport var _DYN_TIME = \"time\"; // Count: 6\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 15\r\nexport var _DYN_GET_PROCESS_TEL_CONT2 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_ENABLED = \"enabled\"; // Count: 6\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_UNLOAD = \"unload\"; // Count: 9\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 5\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_LOGGING_LEVEL_CONSOL4 = \"loggingLevelConsole\"; // Count: 2\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 7\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 9\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_IS_ASYNC = \"isAsync\"; // Count: 6\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 10\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 5\r\nexport var _DYN_UPDATE = \"update\"; // Count: 6\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 12\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_PROTOCOL = \"protocol\"; // Count: 3\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 7\r\nexport var _DYN_NODE_TYPE = \"nodeType\"; // Count: 3\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 9\r\nexport var _DYN_LOG_INTERNAL_MESSAGE = \"logInternalMessage\"; // Count: 2\r\nexport var _DYN_TYPE = \"type\"; // Count: 14\r\nexport var _DYN_HANDLER = \"handler\"; // Count: 5\r\nexport var _DYN_STATUS = \"status\"; // Count: 5\r\nexport var _DYN_GET_RESPONSE_HEADER = \"getResponseHeader\"; // Count: 2\r\nexport var _DYN_GET_ALL_RESPONSE_HEA5 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_COMPLETE = \"complete\"; // Count: 3\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_SEND_POST = \"sendPOST\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 5\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 6\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 2\r\nexport var _DYN_TRACE_ID = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID = \"spanId\"; // Count: 5\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 6\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*!\n * NevWare21 - ts-async, 0.5.1\n * https://github.com/nevware21/ts-async\n * Copyright (c) NevWare21 and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\nimport { isPromiseLike, objDefineProperties, getDocument, createCachedValue, safe, getInst, dumpObj, arrSlice, objDefineProp, hasSymbol, getKnownSymbol, isFunction, throwTypeError, iterForOf, scheduleTimeout, isNode, getWindow, getGlobal, objDefine, objToString, isUndefined, isArray, arrForEach, isIterable, createCustomError, isNumber, scheduleIdleCallback, utcNow, getLength, isIterator, fnCall, arrIndexOf } from '@nevware21/ts-utils';\n\nvar STR_PROMISE = \"Promise\";\nvar DONE = \"done\";\nvar VALUE = \"value\";\nvar RETURN = \"return\";\nvar REJECTED = \"rejected\";\n\nfunction doAwaitResponse(value, cb) {\n    return doAwait(value, function (value) {\n        return cb ? cb({\n            status: \"fulfilled\",\n            rejected: false,\n            value: value\n        }) : value;\n    }, function (reason) {\n        return cb ? cb({\n            status: REJECTED,\n            rejected: true,\n            reason: reason\n        }) : reason;\n    });\n}\nfunction doAwait(value, resolveFn, rejectFn, finallyFn) {\n    var result = value;\n    try {\n        if (isPromiseLike(value)) {\n            if (resolveFn || rejectFn) {\n                result = value.then(resolveFn, rejectFn);\n            }\n        }\n        else {\n            try {\n                if (resolveFn) {\n                    result = resolveFn(value);\n                }\n            }\n            catch (err) {\n                if (rejectFn) {\n                    result = rejectFn(err);\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n    }\n    finally {\n        if (finallyFn) {\n            doFinally(result, finallyFn);\n        }\n    }\n    return result;\n}\nfunction doFinally(value, finallyFn) {\n    var result = value;\n    if (finallyFn) {\n        if (isPromiseLike(value)) {\n            if (value.finally) {\n                result = value.finally(finallyFn);\n            }\n            else {\n                result = value.then(function (value) {\n                    finallyFn();\n                    return value;\n                }, function (reason) {\n                    finallyFn();\n                    throw reason;\n                });\n            }\n        }\n        else {\n            finallyFn();\n        }\n    }\n    return result;\n}\n\nvar _debugState;\nvar _debugResult;\nvar _debugHandled;\nvar _promiseDebugEnabled = false;\nfunction _addDebugState$1(thePromise, stateFn, resultFn, handledFn) {\n    _debugState = _debugState || { toString: function () { return \"[[PromiseState]]\"; } };\n    _debugResult = _debugResult || { toString: function () { return \"[[PromiseResult]]\"; } };\n    _debugHandled = _debugHandled || { toString: function () { return \"[[PromiseIsHandled]]\"; } };\n    var props = {};\n    props[_debugState] = { get: stateFn };\n    props[_debugResult] = { get: resultFn };\n    props[_debugHandled] = { get: handledFn };\n    objDefineProperties(thePromise, props);\n}\nfunction setPromiseDebugState(enabled, logger) {\n    _promiseDebugEnabled = enabled;\n}\n\nvar STRING_STATES =  [\n    \"pending\", \"resolving\", \"resolved\", REJECTED\n];\n\nvar DISPATCH_EVENT = \"dispatchEvent\";\nvar _hasInitEvent;\nfunction _hasInitEventFn(doc) {\n    var evt;\n    if (doc && doc.createEvent) {\n        evt = doc.createEvent(\"Event\");\n    }\n    return (!!evt && evt.initEvent);\n}\nfunction emitEvent(target, evtName, populateEvent, useNewEvent) {\n    var doc = getDocument();\n    !_hasInitEvent && (_hasInitEvent = createCachedValue(!!safe(_hasInitEventFn, [doc]).v));\n    var theEvt = _hasInitEvent.v ? doc.createEvent(\"Event\") : (useNewEvent ? new Event(evtName) : {});\n    populateEvent && populateEvent(theEvt);\n    if (_hasInitEvent.v) {\n        theEvt.initEvent(evtName, false, true);\n    }\n    if (theEvt && target[DISPATCH_EVENT]) {\n        target[DISPATCH_EVENT](theEvt);\n    }\n    else {\n        var handler = target[\"on\" + evtName];\n        if (handler) {\n            handler(theEvt);\n        }\n        else {\n            var theConsole = getInst(\"console\");\n            theConsole && (theConsole[\"error\"] || theConsole[\"log\"])(evtName, dumpObj(theEvt));\n        }\n    }\n}\n\nvar NODE_UNHANDLED_REJECTION = \"unhandledRejection\";\nvar UNHANDLED_REJECTION = NODE_UNHANDLED_REJECTION.toLowerCase();\nvar _currentPromiseId = [];\nvar _uniquePromiseId = 0;\nvar _unhandledRejectionTimeout = 10;\nvar _aggregationError;\nvar _hasPromiseRejectionEvent;\nfunction dumpFnObj(value) {\n    if (isFunction(value)) {\n        return value.toString();\n    }\n    return dumpObj(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAggregationError(values) {\n    !_aggregationError && (_aggregationError = createCachedValue(safe(getInst, [\"AggregationError\"]).v || createCustomError(\"AggregationError\", function (self, args) {\n        self.errors = args[0];\n    })));\n    return new _aggregationError.v(values);\n}\nfunction _createPromise(newPromise, processor, executor) {\n    var additionalArgs = arrSlice(arguments, 3);\n    var _state = 0 ;\n    var _hasResolved = false;\n    var _settledValue;\n    var _queue = [];\n    var _id = _uniquePromiseId++;\n    var _parentId = _currentPromiseId.length > 0 ? _currentPromiseId[_currentPromiseId.length - 1] : undefined;\n    var _handled = false;\n    var _unHandledRejectionHandler = null;\n    var _thePromise;\n    function _then(onResolved, onRejected) {\n        try {\n            _currentPromiseId.push(_id);\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            var thenPromise = newPromise(function (resolve, reject) {\n                _queue.push(function () {\n                    try {\n                        var handler = _state === 2  ? onResolved : onRejected;\n                        var value = isUndefined(handler) ? _settledValue : (isFunction(handler) ? handler(_settledValue) : handler);\n                        if (isPromiseLike(value)) {\n                            value.then(resolve, reject);\n                        }\n                        else if (handler) {\n                            resolve(value);\n                        }\n                        else if (_state === 3 ) {\n                            reject(value);\n                        }\n                        else {\n                            resolve(value);\n                        }\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                });\n                if (_hasResolved) {\n                    _processQueue();\n                }\n            }, additionalArgs);\n            return thenPromise;\n        }\n        finally {\n            _currentPromiseId.pop();\n        }\n    }\n    function _catch(onRejected) {\n        return _then(undefined, onRejected);\n    }\n    function _finally(onFinally) {\n        var thenFinally = onFinally;\n        var catchFinally = onFinally;\n        if (isFunction(onFinally)) {\n            thenFinally = function (value) {\n                onFinally && onFinally();\n                return value;\n            };\n            catchFinally = function (reason) {\n                onFinally && onFinally();\n                throw reason;\n            };\n        }\n        return _then(thenFinally, catchFinally);\n    }\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    function _processQueue() {\n        if (_queue.length > 0) {\n            var pending = _queue.slice();\n            _queue = [];\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            processor(pending);\n        }\n    }\n    function _createSettleIfFn(newState, allowState) {\n        return function (theValue) {\n            if (_state === allowState) {\n                if (newState === 2  && isPromiseLike(theValue)) {\n                    _state = 1 ;\n                    theValue.then(_createSettleIfFn(2 , 1 ), _createSettleIfFn(3 , 1 ));\n                    return;\n                }\n                _state = newState;\n                _hasResolved = true;\n                _settledValue = theValue;\n                _processQueue();\n                if (!_handled && newState === 3  && !_unHandledRejectionHandler) {\n                    _unHandledRejectionHandler = scheduleTimeout(_notifyUnhandledRejection, _unhandledRejectionTimeout);\n                }\n            }\n        };\n    }\n    function _notifyUnhandledRejection() {\n        if (!_handled) {\n            _handled = true;\n            if (isNode()) {\n                process.emit(NODE_UNHANDLED_REJECTION, _settledValue, _thePromise);\n            }\n            else {\n                var gbl = getWindow() || getGlobal();\n                !_hasPromiseRejectionEvent && (_hasPromiseRejectionEvent = createCachedValue(safe((getInst), [STR_PROMISE + \"RejectionEvent\"]).v));\n                emitEvent(gbl, UNHANDLED_REJECTION, function (theEvt) {\n                    objDefine(theEvt, \"promise\", { g: function () { return _thePromise; } });\n                    theEvt.reason = _settledValue;\n                    return theEvt;\n                }, !!_hasPromiseRejectionEvent.v);\n            }\n        }\n    }\n    _thePromise = {\n        then: _then,\n        \"catch\": _catch,\n        finally: _finally\n    };\n    objDefineProp(_thePromise, \"state\", {\n        get: _strState\n    });\n    if (_promiseDebugEnabled) {\n        _addDebugState$1(_thePromise, _strState, function () { return objToString(_settledValue); }, function () { return _handled; });\n    }\n    if (hasSymbol()) {\n        _thePromise[getKnownSymbol(11 )] = \"IPromise\";\n    }\n    function _toString() {\n        return \"IPromise\" + (_promiseDebugEnabled ? \"[\" + _id + (!isUndefined(_parentId) ? (\":\" + _parentId) : \"\") + \"]\" : \"\") + \" \" + _strState() + (_hasResolved ? (\" - \" + dumpFnObj(_settledValue)) : \"\") + (\"\");\n    }\n    _thePromise.toString = _toString;\n    (function _initialize() {\n        if (!isFunction(executor)) {\n            throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpFnObj(executor));\n        }\n        var _rejectFn = _createSettleIfFn(3 , 0 );\n        try {\n            executor.call(_thePromise, _createSettleIfFn(2 , 0 ), _rejectFn);\n        }\n        catch (e) {\n            _rejectFn(e);\n        }\n    })();\n    return _thePromise;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllPromise(newPromise) {\n    return function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            try {\n                var values_1 = [];\n                var pending_1 = 1;\n                iterForOf(input, function (item, idx) {\n                    if (item) {\n                        pending_1++;\n                        doAwait(item, function (value) {\n                            values_1[idx] = value;\n                            if (--pending_1 === 0) {\n                                resolve(values_1);\n                            }\n                        }, reject);\n                    }\n                });\n                pending_1--;\n                if (pending_1 === 0) {\n                    resolve(values_1);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createResolvedPromise(newPromise) {\n    return function (value) {\n        var additionalArgs = arrSlice(arguments, 1);\n        if (isPromiseLike(value)) {\n            return value;\n        }\n        return newPromise(function (resolve) {\n            resolve(value);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRejectedPromise(newPromise) {\n    return function (reason) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (_resolve, reject) {\n            reject(reason);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllSettledPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var values = [];\n            var pending = 1;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (value.rejected) {\n                        values[idx] = {\n                            status: REJECTED,\n                            reason: value.reason\n                        };\n                    }\n                    else {\n                        values[idx] = {\n                            status: \"fulfilled\",\n                            value: value.value\n                        };\n                    }\n                    if (--pending === 0) {\n                        resolve(values);\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0) {\n                    resolve(values);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRacePromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var isDone = false;\n            function processItem(item) {\n                doAwaitResponse(item, function (value) {\n                    if (!isDone) {\n                        isDone = true;\n                        if (value.rejected) {\n                            reject(value.reason);\n                        }\n                        else {\n                            resolve(value.value);\n                        }\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAnyPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var theErros = [];\n            var pending = 1;\n            var isDone = false;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (!value.rejected) {\n                        isDone = true;\n                        resolve(value.value);\n                        return;\n                    }\n                    else {\n                        theErros[idx] = value.reason;\n                    }\n                    if (--pending === 0 && !isDone) {\n                        reject(_createAggregationError(theErros));\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0 && !isDone) {\n                    reject(_createAggregationError(theErros));\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n\nfunction syncItemProcessor(pending) {\n    arrForEach(pending, function (fn) {\n        try {\n            fn();\n        }\n        catch (e) {\n        }\n    });\n}\nfunction timeoutItemProcessor(timeout) {\n    var callbackTimeout = isNumber(timeout) ? timeout : 0;\n    return function (pending) {\n        scheduleTimeout(function () {\n            syncItemProcessor(pending);\n        }, callbackTimeout);\n    };\n}\nfunction idleItemProcessor(timeout) {\n    var options;\n    if (timeout >= 0) {\n        options = {\n            timeout: +timeout\n        };\n    }\n    return function (pending) {\n        scheduleIdleCallback(function (deadline) {\n            syncItemProcessor(pending);\n        }, options);\n    };\n}\n\nvar _allAsyncSettledCreator;\nvar _raceAsyncCreator;\nvar _anyAsyncCreator;\nfunction createAsyncPromise(executor, timeout) {\n    return _createPromise(createAsyncPromise, timeoutItemProcessor(timeout), executor, timeout);\n}\nvar createAsyncAllPromise = /*#__PURE__*/ _createAllPromise(createAsyncPromise);\nvar createAsyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createAsyncPromise);\nvar createAsyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createAsyncPromise);\nfunction createAsyncAllSettledPromise(input, timeout) {\n    !_allAsyncSettledCreator && (_allAsyncSettledCreator = _createAllSettledPromise(createAsyncPromise));\n    return _allAsyncSettledCreator.v(input, timeout);\n}\nfunction createAsyncRacePromise(values, timeout) {\n    !_raceAsyncCreator && (_raceAsyncCreator = _createRacePromise(createAsyncPromise));\n    return _raceAsyncCreator.v(values, timeout);\n}\nfunction createAsyncAnyPromise(values, timeout) {\n    !_anyAsyncCreator && (_anyAsyncCreator = _createAnyPromise(createAsyncPromise));\n    return _anyAsyncCreator.v(values, timeout);\n}\n\nvar _promiseCls;\nvar _allCreator;\nvar _allNativeSettledCreator;\nvar _raceNativeCreator;\nvar _anyNativeCreator;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createNativePromiseHelper(name, func) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    if (_promiseCls.v && _promiseCls.v[name]) {\n        return createCachedValue(function (input, timeout) {\n            return createNativePromise(function (resolve, reject) {\n                _promiseCls.v[name](input).then(resolve, reject);\n            });\n        });\n    }\n    return func();\n}\nfunction createNativePromise(executor, timeout) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    var PrmCls = _promiseCls.v;\n    if (!PrmCls) {\n        return createAsyncPromise(executor);\n    }\n    if (!isFunction(executor)) {\n        throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpObj(executor));\n    }\n    var _state = 0 ;\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    var thePromise = new PrmCls(function (resolve, reject) {\n        function _resolve(value) {\n            _state = 2 ;\n            resolve(value);\n        }\n        function _reject(reason) {\n            _state = 3 ;\n            reject(reason);\n        }\n        executor(_resolve, _reject);\n    });\n    objDefineProp(thePromise, \"state\", {\n        get: _strState\n    });\n    return thePromise;\n}\nfunction createNativeAllPromise(input, timeout) {\n    !_allCreator && (_allCreator = _createNativePromiseHelper(\"all\", function () { return createCachedValue(_createAllPromise(createNativePromise)); }));\n    return _allCreator.v(input, timeout);\n}\nvar createNativeResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createNativePromise);\nvar createNativeRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createNativePromise);\nfunction createNativeAllSettledPromise(input, timeout) {\n    !_allNativeSettledCreator && (_allNativeSettledCreator = _createNativePromiseHelper(\"allSettled\", function () { return _createAllSettledPromise(createNativePromise); }));\n    return _allNativeSettledCreator.v(input, timeout);\n}\nfunction createNativeRacePromise(values, timeout) {\n    !_raceNativeCreator && (_raceNativeCreator = _createNativePromiseHelper(\"race\", function () { return _createRacePromise(createNativePromise); }));\n    return _raceNativeCreator.v(values, timeout);\n}\nfunction createNativeAnyPromise(values, timeout) {\n    !_anyNativeCreator && (_anyNativeCreator = _createNativePromiseHelper(\"any\", function () { return _createAnyPromise(createNativePromise); }));\n    return _anyNativeCreator.v(values, timeout);\n}\n\nvar _allSyncSettledCreator;\nvar _raceSyncCreator;\nvar _anySyncCreator;\nfunction createSyncPromise(executor) {\n    return _createPromise(createSyncPromise, syncItemProcessor, executor);\n}\nvar createSyncAllPromise = /*#__PURE__*/ _createAllPromise(createSyncPromise);\nvar createSyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createSyncPromise);\nvar createSyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createSyncPromise);\nfunction createSyncAllSettledPromise(input, timeout) {\n    !_allSyncSettledCreator && (_allSyncSettledCreator = _createAllSettledPromise(createSyncPromise));\n    return _allSyncSettledCreator.v(input, timeout);\n}\nfunction createSyncRacePromise(values, timeout) {\n    !_raceSyncCreator && (_raceSyncCreator = _createRacePromise(createSyncPromise));\n    return _raceSyncCreator.v(values, timeout);\n}\nfunction createSyncAnyPromise(values, timeout) {\n    !_anySyncCreator && (_anySyncCreator = _createAnyPromise(createSyncPromise));\n    return _anySyncCreator.v(values, timeout);\n}\n\nvar _defaultIdleTimeout;\nvar _allIdleSettledCreator;\nvar _raceIdleCreator;\nvar _anyIdleCreator;\nfunction setDefaultIdlePromiseTimeout(idleDeadline) {\n    _defaultIdleTimeout = idleDeadline;\n}\nvar setDefaultIdleTimeout = ( setDefaultIdlePromiseTimeout);\nfunction createIdlePromise(executor, timeout) {\n    var theTimeout = isUndefined(timeout) ? _defaultIdleTimeout : timeout;\n    return _createPromise(createIdlePromise, idleItemProcessor(theTimeout), executor, theTimeout);\n}\nvar createIdleAllPromise = /*#__PURE__*/ _createAllPromise(createIdlePromise);\nvar createIdleResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createIdlePromise);\nvar createIdleRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createIdlePromise);\nfunction createIdleAllSettledPromise(input, timeout) {\n    !_allIdleSettledCreator && (_allIdleSettledCreator = _createAllSettledPromise(createIdlePromise));\n    return _allIdleSettledCreator.v(input, timeout);\n}\nfunction createIdleRacePromise(values, timeout) {\n    !_raceIdleCreator && (_raceIdleCreator = _createRacePromise(createIdlePromise));\n    return _raceIdleCreator.v(values, timeout);\n}\nfunction createIdleAnyPromise(values, timeout) {\n    !_anyIdleCreator && (_anyIdleCreator = _createAnyPromise(createIdlePromise));\n    return _anyIdleCreator.v(values, timeout);\n}\n\nvar _promiseCreator;\nvar _allSettledCreator;\nvar _raceCreator;\nvar _anyCreator;\nfunction setCreatePromiseImpl(creator) {\n    _promiseCreator = creator ? createCachedValue(creator) : null;\n}\nfunction createPromise(executor, timeout) {\n    !_promiseCreator && (_promiseCreator = createCachedValue(createNativePromise));\n    return _promiseCreator.v.call(this, executor, timeout);\n}\nvar createAllPromise = /*#__PURE__*/ _createAllPromise(createPromise);\nvar createResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createPromise);\nvar createRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createPromise);\nfunction createAllSettledPromise(input, timeout) {\n    !_allSettledCreator && (_allSettledCreator = _createAllSettledPromise(createPromise));\n    return _allSettledCreator.v(input, timeout);\n}\nfunction createRacePromise(values, timeout) {\n    !_raceCreator && (_raceCreator = _createRacePromise(createPromise));\n    return _raceCreator.v(values, timeout);\n}\nfunction createAnyPromise(values, timeout) {\n    !_anyCreator && (_anyCreator = _createAnyPromise(createPromise));\n    return _anyCreator.v(values, timeout);\n}\n\nfunction createTimeoutPromise(timeout, resolveReject, message) {\n    return createPromise(function (resolve, reject) {\n        scheduleTimeout(function () {\n            (resolveReject ? resolve : reject)(!isUndefined(message) ? message : \"Timeout of \" + timeout + \"ms exceeded\");\n        }, timeout);\n    });\n}\n\nfunction _doneChk(isDone, state, value, thisArg) {\n    var result = isDone;\n    state.res = value;\n    if (!result) {\n        if (state.isDone && isFunction(state.isDone)) {\n            return doAwait(state.isDone.call(thisArg, state), function (done) {\n                state.iter++;\n                return !!done;\n            });\n        }\n        else {\n            result = !!state.isDone;\n        }\n    }\n    state.iter++;\n    return result;\n}\nfunction doWhileAsync(callbackFn, isDoneFn, thisArg) {\n    var promise;\n    var resolve;\n    var reject = function (reason) {\n        isDone = true;\n        throw reason;\n    };\n    var isDone = false;\n    var state = {\n        st: utcNow(),\n        iter: 0,\n        isDone: isDoneFn || false\n    };\n    if (callbackFn) {\n        var _createPromise_1 = function () {\n            return createPromise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n        };\n        var _handleAsyncDone_1 = function (done) {\n            isDone = !!done;\n            if (!isDone) {\n                _processNext_1();\n            }\n            else {\n                resolve(state.res);\n            }\n        };\n        var _processNext_1 = function () {\n            while (!isDone) {\n                try {\n                    var cbResult = callbackFn.call(thisArg, state);\n                    if (isPromiseLike(cbResult)) {\n                        promise = promise || _createPromise_1();\n                        doAwait(cbResult, function (res) {\n                            try {\n                                doAwait(_doneChk(isDone, state, res, thisArg), _handleAsyncDone_1, reject);\n                            }\n                            catch (e) {\n                                reject(e);\n                            }\n                        }, reject);\n                        return promise;\n                    }\n                    else {\n                        var dnRes = _doneChk(isDone, state, cbResult, thisArg);\n                        if (isPromiseLike(dnRes)) {\n                            promise = promise || _createPromise_1();\n                            doAwait(dnRes, _handleAsyncDone_1, reject);\n                            return promise;\n                        }\n                        else {\n                            isDone = !!dnRes;\n                        }\n                    }\n                }\n                catch (e) {\n                    reject(e);\n                    return promise;\n                }\n            }\n            if (isDone && resolve) {\n                resolve(state.res);\n            }\n            return promise || state.res;\n        };\n        return _processNext_1();\n    }\n}\n\nfunction arrForEachAsync(theArray, callbackFn, thisArg) {\n    if (theArray) {\n        var len_1 = getLength(theArray);\n        if (len_1) {\n            var isDone = function (state) {\n                if (state.iter >= len_1 || state.res === -1) {\n                    return true;\n                }\n            };\n            return doWhileAsync(function (state) {\n                var idx = state.iter;\n                if (idx in theArray) {\n                    return callbackFn.call(thisArg || theArray, theArray[idx], idx, theArray);\n                }\n            }, isDone);\n        }\n    }\n}\n\nvar _iterSymbol;\nvar _iterAsyncSymbol;\nfunction iterForOfAsync(iter, callbackFn, thisArg) {\n    var err;\n    var iterResult;\n    var theIter = iter;\n    function onFailed(failed) {\n        err = { e: failed };\n        if (theIter.throw) {\n            iterResult = null;\n            theIter.throw(err);\n        }\n        throw failed;\n    }\n    function onFinally() {\n        try {\n            if (iterResult && !iterResult[DONE]) {\n                theIter[RETURN] && theIter[RETURN](iterResult);\n            }\n        }\n        finally {\n            if (err) {\n                throw err.e;\n            }\n        }\n    }\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterAsyncSymbol && (_iterAsyncSymbol = createCachedValue(getKnownSymbol(0 )));\n            theIter = iter[_iterAsyncSymbol.v] ? iter[_iterAsyncSymbol.v]() : null;\n            if (!theIter) {\n                !_iterSymbol && (_iterSymbol = createCachedValue(getKnownSymbol(3 )));\n                theIter = iter[_iterSymbol.v] ? iter[_iterSymbol.v]() : null;\n            }\n        }\n        if (theIter && isIterator(theIter)) {\n            var result = void 0;\n            try {\n                result = doWhileAsync(function (state) {\n                    return doAwait(theIter.next(), function (res) {\n                        iterResult = res;\n                        if (!res[DONE]) {\n                            return fnCall(callbackFn, thisArg || theIter, iterResult[VALUE], state.iter, theIter);\n                        }\n                    }, function (reason) {\n                        state.isDone = true;\n                        onFailed(reason);\n                    });\n                }, function (state) {\n                    if (!iterResult || iterResult[DONE] || state.res === -1) {\n                        onFinally();\n                        return true;\n                    }\n                }, thisArg || theIter);\n                if (isPromiseLike(result)) {\n                    result = doFinally(result.catch(onFailed), onFinally);\n                }\n                return result;\n            }\n            catch (failed) {\n                onFailed(failed);\n            }\n            finally {\n                if (result && !isPromiseLike(result)) {\n                    onFinally();\n                }\n            }\n        }\n    }\n}\n\nvar REJECT = \"reject\";\nvar REJECTED_ERROR = \"Rejected\";\nvar _schedulerId = 0;\nvar _debugName;\nvar _debugIntState;\nvar _customErrors = {};\nfunction _rejectDone() {\n}\nfunction _createError(type, evt, message) {\n    !_customErrors[type] && (_customErrors[type] = createCustomError(type));\n    var now = utcNow();\n    return new (_customErrors[type])(\"Task [\".concat(evt.id, \"] \").concat(message || \"\", \"- \").concat((evt.st ? \"Running\" : \"Waiting\"), \": \").concat(_calcTime(now, evt.st || evt.cr)));\n}\nfunction _calcTime(now, start) {\n    return ((now - start) || \"0\") + \" ms\";\n}\nfunction _abortStaleTasks(taskQueue, staleTimeoutPeriod) {\n    var now = utcNow();\n    var expired = now - staleTimeoutPeriod;\n    arrForEach(taskQueue, function (evt) {\n        if (evt && !evt.rj && (evt.st && evt.st < expired) || (!evt.st && evt.cr && evt.cr < expired)) {\n            evt && evt[REJECT](evt.rj || _createError(\"Aborted\", evt, \"Stale \"));\n        }\n    });\n}\nfunction _removeTask(queue, taskDetail) {\n    var idx = arrIndexOf(queue, taskDetail);\n    if (idx !== -1) {\n        queue.splice(idx, 1);\n    }\n}\nfunction _addDebugState(theScheduler, nameFn, stateFn) {\n    _debugName = _debugName || { toString: function () { return \"[[SchedulerName]]\"; } };\n    _debugIntState = _debugIntState || { toString: function () { return \"[[SchedulerState]]\"; } };\n    objDefineProp(theScheduler, _debugName, { get: nameFn });\n    objDefineProp(theScheduler, _debugIntState, { get: stateFn });\n}\nfunction createTaskScheduler(newPromise, name) {\n    var _theTask;\n    var _running = [];\n    var _waiting = [];\n    var _staleTimeoutPeriod = 600000;\n    var _staleTimeoutCheckPeriod = _staleTimeoutPeriod / 10;\n    var _taskCount = 0;\n    var _schedulerName = (name ? (name + \".\") : \"\") + _schedulerId++;\n    var _blockedTimer;\n    newPromise = newPromise || createPromise;\n    var _startBlockedTimer = function () {\n        var hasTasks = (getLength(_running) + getLength(_waiting)) > 0;\n        if (_staleTimeoutPeriod > 0) {\n            if (!_blockedTimer) {\n                _blockedTimer = scheduleTimeout(function () {\n                    _abortStaleTasks(_running, _staleTimeoutPeriod);\n                    _abortStaleTasks(_waiting, _staleTimeoutPeriod);\n                    _blockedTimer && (_blockedTimer.enabled = ((getLength(_running) + getLength(_waiting)) > 0));\n                }, _staleTimeoutCheckPeriod);\n                _blockedTimer.unref();\n            }\n            _blockedTimer && (_blockedTimer.enabled = hasTasks);\n        }\n    };\n    var _queueTask = function (startAction, taskName, timeout) {\n        var _a;\n        var taskId = _schedulerName + \".\" + _taskCount++;\n        if (taskName) {\n            taskId += \"-(\" + taskName + \")\";\n        }\n        var newTask = (_a = {\n                id: taskId,\n                cr: utcNow(),\n                to: timeout\n            },\n            _a[REJECT] = function (reason) {\n                newTask.rj = reason || _createError(REJECTED_ERROR, newTask);\n                newTask[REJECT] = _rejectDone;\n            },\n            _a);\n        if (!_theTask) {\n            newTask.p = newPromise(_runTask(newTask, startAction));\n        }\n        else {\n            newTask.p = _waitForPreviousTask(newTask, _theTask, startAction);\n        }\n        _theTask = newTask;\n        return newTask.p;\n    };\n    var _runTask = function (taskDetail, startAction) {\n        taskDetail.st = utcNow();\n        _running.push(taskDetail);\n        _startBlockedTimer();\n        return function (onTaskResolve, onTaskReject) {\n            var _promiseReject = function (reason) {\n                taskDetail.rj = taskDetail.rj || reason || _createError(REJECTED_ERROR, taskDetail);\n                taskDetail[REJECT] = _rejectDone;\n                _doCleanup(taskDetail);\n                onTaskResolve = null;\n                onTaskReject && onTaskReject(reason);\n                onTaskReject = null;\n            };\n            var taskId = taskDetail.id;\n            if (taskDetail.rj) {\n                _promiseReject(taskDetail.rj);\n            }\n            else {\n                taskDetail[REJECT] = _promiseReject;\n                try {\n                    var startResult = startAction(taskId);\n                    if (taskDetail.to && isPromiseLike(startResult)) {\n                        taskDetail.t = scheduleTimeout(function () {\n                            _promiseReject(_createError(\"Timeout\", taskDetail));\n                        }, taskDetail.to);\n                    }\n                    doAwait(startResult, function (theResult) {\n                        _doCleanup(taskDetail);\n                        try {\n                            onTaskResolve && onTaskResolve(theResult);\n                        }\n                        catch (e) {\n                            onTaskReject && onTaskReject(e);\n                        }\n                        onTaskReject = null;\n                        onTaskResolve = null;\n                    }, _promiseReject);\n                }\n                catch (e) {\n                    _promiseReject(e);\n                }\n            }\n        };\n    };\n    var _waitForPreviousTask = function (taskDetail, prevTask, startAction) {\n        _waiting.push(taskDetail);\n        _startBlockedTimer();\n        return newPromise(function (onWaitResolve, onWaitReject) {\n            doAwaitResponse(prevTask.p, function () {\n                _removeTask(_waiting, taskDetail);\n                _runTask(taskDetail, startAction)(onWaitResolve, onWaitReject);\n            });\n        });\n    };\n    var _doCleanup = function (taskDetail) {\n        _removeTask(_running, taskDetail);\n        taskDetail.t && taskDetail.t.cancel();\n        taskDetail.t = null;\n        if (_theTask && _theTask === taskDetail) {\n            _theTask = null;\n            if (getLength(_running) + getLength(_waiting) === 0) {\n                _blockedTimer && _blockedTimer.cancel();\n                _blockedTimer = null;\n            }\n        }\n    };\n    var theScheduler = {\n        idle: true,\n        queue: _queueTask,\n        setStaleTimeout: function (staleTimeout, staleCheckPeriod) {\n            _blockedTimer && _blockedTimer.cancel();\n            _blockedTimer = null;\n            _staleTimeoutPeriod = staleTimeout;\n            _staleTimeoutCheckPeriod = staleCheckPeriod || staleTimeout / 10;\n            _startBlockedTimer();\n        }\n    };\n    objDefine(theScheduler, \"idle\", {\n        g: function () {\n            return getLength(_running) + getLength(_waiting) === 0;\n        }\n    });\n    _addDebugState(theScheduler, function () { return _schedulerName; }, function () {\n        return {\n            l: _theTask,\n            r: _running,\n            w: _waiting\n        };\n    });\n    return theScheduler;\n}\n\nvar toStringTagSymbol = getKnownSymbol(11 );\nvar PolyPromise = /*#__PURE__*/ (function () {\n    function PolyPromiseImpl(executor) {\n        this._$ = createAsyncPromise(executor);\n        if (toStringTagSymbol) {\n            this[toStringTagSymbol] = \"Promise\";\n        }\n        objDefineProp(this, \"state\", {\n            get: function () {\n                return this._$.state;\n            }\n        });\n    }\n    PolyPromiseImpl.all = createAsyncAllPromise;\n    PolyPromiseImpl.race = createAsyncRacePromise;\n    PolyPromiseImpl.any = createAsyncAnyPromise;\n    PolyPromiseImpl.reject = createAsyncRejectedPromise;\n    PolyPromiseImpl.resolve = createAsyncResolvedPromise;\n    PolyPromiseImpl.allSettled = createAsyncAllSettledPromise;\n    var theProto = PolyPromiseImpl.prototype;\n    theProto.then = function (onResolved, onRejected) {\n        return this._$.then(onResolved, onRejected);\n    };\n    theProto.catch = function (onRejected) {\n        return this._$.catch(onRejected);\n    };\n    theProto.finally = function (onfinally) {\n        return this._$.finally(onfinally);\n    };\n    return PolyPromiseImpl;\n}());\n\nexport { PolyPromise, arrForEachAsync, createAllPromise, createAllSettledPromise, createAnyPromise, createAsyncAllPromise, createAsyncAllSettledPromise, createAsyncAnyPromise, createAsyncPromise, createAsyncRacePromise, createAsyncRejectedPromise, createAsyncResolvedPromise, createIdleAllPromise, createIdleAllSettledPromise, createIdleAnyPromise, createIdlePromise, createIdleRacePromise, createIdleRejectedPromise, createIdleResolvedPromise, createNativeAllPromise, createNativeAllSettledPromise, createNativeAnyPromise, createNativePromise, createNativeRacePromise, createNativeRejectedPromise, createNativeResolvedPromise, createPromise, createRacePromise, createRejectedPromise, createResolvedPromise, createSyncAllPromise, createSyncAllSettledPromise, createSyncAnyPromise, createSyncPromise, createSyncRacePromise, createSyncRejectedPromise, createSyncResolvedPromise, createTaskScheduler, createTimeoutPromise, doAwait, doAwaitResponse, doFinally, doWhileAsync, iterForOfAsync, setCreatePromiseImpl, setDefaultIdlePromiseTimeout, setDefaultIdleTimeout, setPromiseDebugState };\n//# sourceMappingURL=ts-async.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\nexport var UNDEFINED_VALUE = undefined;\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_OFFLINE_STORE = \"offlineEventsStored\";\r\nexport var STR_OFFLINE_SENT = \"offlineBatchSent\";\r\nexport var STR_OFFLINE_DROP = \"offlineBatchDrop\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\nexport var STR_DOMAIN = \"domain\";\r\nexport var STR_PATH = \"path\";\r\nexport var STR_NOT_DYNAMIC_ERROR = \"Not dynamic - \";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\r\n        var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { getDocument, getInst, getNavigator, getPerformance, hasNavigator, isFunction, isString, isUndefined, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strDocumentMode = \"documentMode\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getInst(strConsole);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return Math.max(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (strIndexOf(ua, \"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @param useCached - [Optional] used for testing to bypass the cached lookup, when `true` this will\r\n * cause the cached global to be reset.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported(useCached) {\r\n    if (_beaconsSupported === null || useCached === false) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getInst(\"fetch\");\r\n        var request = getInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n// TODO: should reuse this method for analytics plugin\r\nexport function dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function createCustomDomEvent(eventName, details) {\r\n    var event = null;\r\n    var detail = { detail: details || null };\r\n    if (isFunction(CustomEvent)) { // Use CustomEvent constructor when available\r\n        event = new CustomEvent(eventName, detail);\r\n    }\r\n    else { // CustomEvent has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, true, true, detail);\r\n        }\r\n    }\r\n    return event;\r\n}\r\nexport function sendCustomEvent(evtName, cfg, customDetails) {\r\n    var global = getGlobal();\r\n    if (global && global.CustomEvent) {\r\n        try {\r\n            var details = { cfg: cfg || null, customDetails: customDetails || null };\r\n            return dispatchEvent(global, createCustomDomEvent(evtName, details));\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar SEED1 = 123456789;\r\nvar SEED2 = 987654321;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = SEED1;\r\nvar _mwcZ = SEED2;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (SEED1 + seedValue) & MaxUInt32;\r\n    _mwcZ = (SEED2 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = utcNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_NODE_TYPE } from \"../__DynamicConstants\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar version = '3.2.1';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 1 || target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 9 || !(+target[_DYN_NODE_TYPE /* @min:%2enodeType */]);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                objDefine(target, data.id, {\r\n                    e: false,\r\n                    v: theCache\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isArray, isDefined, isNullOrUndefined, isObject, isPlainObject, isUndefined, objForEachKey, objHasOwn } from \"@nevware21/ts-utils\";\r\nimport { _DYN_BLK_VAL, _DYN_LENGTH, _DYN_RD_ONLY } from \"../__DynamicConstants\";\r\nfunction _isConfigDefaults(value) {\r\n    return (value && isObject(value) && (value.isVal || value.fb || objHasOwn(value, \"v\") || objHasOwn(value, \"mrg\") || objHasOwn(value, \"ref\") || value.set));\r\n}\r\nfunction _getDefault(dynamicHandler, theConfig, cfgDefaults) {\r\n    var defValue;\r\n    var isDefaultValid = cfgDefaults.dfVal || isDefined;\r\n    // There is a fallback config key so try and grab that first\r\n    if (theConfig && cfgDefaults.fb) {\r\n        var fallbacks = cfgDefaults.fb;\r\n        if (!isArray(fallbacks)) {\r\n            fallbacks = [fallbacks];\r\n        }\r\n        for (var lp = 0; lp < fallbacks[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            var fallback = fallbacks[lp];\r\n            var fbValue = theConfig[fallback];\r\n            if (isDefaultValid(fbValue)) {\r\n                defValue = fbValue;\r\n            }\r\n            else if (dynamicHandler) {\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                fbValue = dynamicHandler.cfg[fallback];\r\n                if (isDefaultValid(fbValue)) {\r\n                    defValue = fbValue;\r\n                }\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                dynamicHandler.set(dynamicHandler.cfg, asString(fallback), fbValue);\r\n            }\r\n            if (isDefaultValid(defValue)) {\r\n                // We have a valid default so break out of the look\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // If the value is still not defined and we have a default value then use that\r\n    if (!isDefaultValid(defValue) && isDefaultValid(cfgDefaults.v)) {\r\n        defValue = cfgDefaults.v;\r\n    }\r\n    return defValue;\r\n}\r\n/**\r\n * Recursively resolve the default value\r\n * @param dynamicHandler\r\n * @param theConfig\r\n * @param cfgDefaults\r\n * @returns\r\n */\r\nfunction _resolveDefaultValue(dynamicHandler, theConfig, cfgDefaults) {\r\n    var theValue = cfgDefaults;\r\n    if (cfgDefaults && _isConfigDefaults(cfgDefaults)) {\r\n        theValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    if (theValue) {\r\n        if (_isConfigDefaults(theValue)) {\r\n            theValue = _resolveDefaultValue(dynamicHandler, theConfig, theValue);\r\n        }\r\n        var newValue_1;\r\n        if (isArray(theValue)) {\r\n            newValue_1 = [];\r\n            newValue_1[_DYN_LENGTH /* @min:%2elength */] = theValue[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(theValue)) {\r\n            newValue_1 = {};\r\n        }\r\n        if (newValue_1) {\r\n            objForEachKey(theValue, function (key, value) {\r\n                if (value && _isConfigDefaults(value)) {\r\n                    value = _resolveDefaultValue(dynamicHandler, theConfig, value);\r\n                }\r\n                newValue_1[key] = value;\r\n            });\r\n            theValue = newValue_1;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Applies the default value on the config property and makes sure that it's dynamic\r\n * @param theConfig\r\n * @param name\r\n * @param defaultValue\r\n */\r\nexport function _applyDefaultValue(dynamicHandler, theConfig, name, defaultValue) {\r\n    // Resolve the initial config value from the provided value or use the defined default\r\n    var isValid;\r\n    var setFn;\r\n    var defValue;\r\n    var cfgDefaults = defaultValue;\r\n    var mergeDf;\r\n    var reference;\r\n    var readOnly;\r\n    var blkDynamicValue;\r\n    if (_isConfigDefaults(cfgDefaults)) {\r\n        // looks like a IConfigDefault\r\n        isValid = cfgDefaults.isVal;\r\n        setFn = cfgDefaults.set;\r\n        readOnly = cfgDefaults[_DYN_RD_ONLY /* @min:%2erdOnly */];\r\n        blkDynamicValue = cfgDefaults[_DYN_BLK_VAL /* @min:%2eblkVal */];\r\n        mergeDf = cfgDefaults.mrg;\r\n        reference = cfgDefaults.ref;\r\n        if (!reference && isUndefined(reference)) {\r\n            reference = !!mergeDf;\r\n        }\r\n        defValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    else {\r\n        defValue = defaultValue;\r\n    }\r\n    if (blkDynamicValue) {\r\n        // Mark the property so that any value assigned will be blocked from conversion, we need to do this\r\n        // before assigning or fetching the value to ensure it's not converted\r\n        dynamicHandler[_DYN_BLK_VAL /* @min:%2eblkVal */](theConfig, name);\r\n    }\r\n    // Set the value to the default value;\r\n    var theValue;\r\n    var usingDefault = true;\r\n    var cfgValue = theConfig[name];\r\n    // try and get and user provided values\r\n    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n        // Use the defined theConfig[name] value\r\n        theValue = cfgValue;\r\n        usingDefault = false;\r\n        // The values are different and we have a special default value check, which is used to\r\n        // override config values like empty strings to continue using the default\r\n        if (isValid && theValue !== defValue && !isValid(theValue)) {\r\n            theValue = defValue;\r\n            usingDefault = true;\r\n        }\r\n        if (setFn) {\r\n            theValue = setFn(theValue, defValue, theConfig);\r\n            usingDefault = theValue === defValue;\r\n        }\r\n    }\r\n    if (!usingDefault) {\r\n        if (isPlainObject(theValue) || isArray(defValue)) {\r\n            // we are using the user supplied value and it's an object\r\n            if (mergeDf && defValue && (isPlainObject(defValue) || isArray(defValue))) {\r\n                // Resolve/apply the defaults\r\n                objForEachKey(defValue, function (dfName, dfValue) {\r\n                    // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                    _applyDefaultValue(dynamicHandler, theValue, dfName, dfValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (defValue) {\r\n        // Just resolve the default\r\n        theValue = _resolveDefaultValue(dynamicHandler, theConfig, defValue);\r\n    }\r\n    else {\r\n        theValue = defValue;\r\n    }\r\n    // if (theValue && usingDefault && (isPlainObject(theValue) || isArray(theValue))) {\r\n    //     theValue = _cfgDeepCopy(theValue);\r\n    // }\r\n    // Needed to ensure that the (potentially) new field is dynamic even if null/undefined\r\n    dynamicHandler.set(theConfig, name, theValue);\r\n    if (reference) {\r\n        dynamicHandler.ref(theConfig, name);\r\n    }\r\n    if (readOnly) {\r\n        dynamicHandler[_DYN_RD_ONLY /* @min:%2erdOnly */](theConfig, name);\r\n    }\r\n}\r\n//# sourceMappingURL=ConfigDefaults.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isArray, isPlainObject, objForEachKey, symbolFor, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\n// Using Symbol.for so that if the same symbol was already created it would be returned\r\n// To handle multiple instances using potentially different versions we are not using\r\n// createUniqueNamespace()\r\nexport var CFG_HANDLER_LINK = symbolFor(\"[[ai_dynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects / arrays with if they should not be converted\r\n */\r\nvar BLOCK_DYNAMIC = symbolFor(\"[[ai_blkDynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects to indicate that when included into the configuration that\r\n * they should be converted into a trackable dynamic object.\r\n */\r\nvar FORCE_DYNAMIC = symbolFor(\"[[ai_frcDynCfg_1]]\");\r\nexport function _cfgDeepCopy(source) {\r\n    if (source) {\r\n        var target_1;\r\n        if (isArray(source)) {\r\n            target_1 = [];\r\n            target_1[_DYN_LENGTH /* @min:%2elength */] = source[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(source)) {\r\n            target_1 = {};\r\n        }\r\n        if (target_1) {\r\n            // Copying index values by property name as the extensionConfig can be an array or object\r\n            objForEachKey(source, function (key, value) {\r\n                // Perform a deep copy of the object\r\n                target_1[key] = _cfgDeepCopy(value);\r\n            });\r\n            return target_1;\r\n        }\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * @internal\r\n * Get the dynamic config handler if the value is already dynamic\r\n * @param value\r\n * @returns\r\n */\r\nexport function getDynamicConfigHandler(value) {\r\n    if (value) {\r\n        var handler = value[CFG_HANDLER_LINK] || value;\r\n        if (handler.cfg && (handler.cfg === value || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n            return handler;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mark the provided value so that if it's included into the configuration it will NOT have\r\n * its properties converted into a dynamic (reactive) object. If the object is not a plain object\r\n * or an array (ie. a class) this function has not affect as only Objects and Arrays are converted\r\n * into dynamic objects in the dynamic configuration.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * You should only need to use this function, if you are creating dynamic \"classes\" from objects\r\n * which confirm to the require interface. A common case for this is during unit testing where it's\r\n * easier to create mock extensions.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed\r\n *\r\n * @example\r\n * ```ts\r\n * // This is a valid \"extension\", but it is technically an object\r\n * // So when included in the config.extensions it WILL be cloned and then\r\n * // converted into a dynamic object, where all of its properties will become\r\n * // get/set object properties and will be tracked. While this WILL still\r\n * // function, when attempt to use a mocking framework on top of this the\r\n * // functions are now technically get accessors which return a function\r\n * // and this can cause some mocking frameworks to fail.\r\n * let mockChannel = {\r\n *      pause: () => { },\r\n*      resume: () => { },\r\n*      teardown: () => { },\r\n*      flush: (async: any, callBack: any) => { },\r\n*      processTelemetry: (env: any) => { },\r\n*      setNextPlugin: (next: any) => { },\r\n*      initialize: (config: any, core: any, extensions: any) => { },\r\n*      identifier: \"testChannel\",\r\n*      priority: 1003\r\n* };\r\n * ```\r\n * @param value - The object that you want to block from being converted into a\r\n * trackable dynamic object\r\n * @returns The original value\r\n */\r\nexport function blockDynamicConversion(value) {\r\n    if (value && (isPlainObject(value) || isArray(value))) {\r\n        try {\r\n            value[BLOCK_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is the reverse case of {@link blockDynamicConversion} in that this will tag an\r\n * object to indicate that it should always be converted into a dynamic trackable object\r\n * even when not an object or array. So all properties of this object will become\r\n * get / set accessor functions.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed.\r\n * @param value - The object that should be tagged and converted if included into a dynamic\r\n * configuration.\r\n * @returns The original value\r\n */\r\nexport function forceDynamicConversion(value) {\r\n    if (value) {\r\n        try {\r\n            value[FORCE_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @ignore\r\n * Helper function to check whether an object can or should be converted into a dynamic\r\n * object.\r\n * @param value - The object to check whether it should be converted\r\n * @returns `true` if the value should be converted otherwise `false`.\r\n */\r\nexport function _canMakeDynamic(getFunc, state, value) {\r\n    var result = false;\r\n    // Object must exist and be truthy\r\n    if (value && !getFunc[state.blkVal]) {\r\n        // Tagged as always convert\r\n        result = value[FORCE_DYNAMIC];\r\n        // Check that it's not explicitly tagged as blocked\r\n        if (!result && !value[BLOCK_DYNAMIC]) {\r\n            // Only convert plain objects or arrays by default\r\n            result = isPlainObject(value) || isArray(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Throws an invalid access exception\r\n * @param message - The message to include in the exception\r\n */\r\nexport function throwInvalidAccess(message) {\r\n    throwTypeError(\"InvalidAccess:\" + message);\r\n}\r\n//# sourceMappingURL=DynamicSupport.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, isArray, objDefine, objDefineProp, objForEachKey, objGetOwnPropertyDescriptor } from \"@nevware21/ts-utils\";\r\nimport { UNDEFINED_VALUE } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_APPLY, _DYN_HDLR, _DYN_LOGGER, _DYN_PUSH, _DYN_SPLICE, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nimport { CFG_HANDLER_LINK, _canMakeDynamic, blockDynamicConversion, throwInvalidAccess } from \"./DynamicSupport\";\r\nvar arrayMethodsToPatch = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"splice\"\r\n];\r\nexport var _throwDynamicError = function (logger, name, desc, e) {\r\n    logger && logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](3 /* eLoggingSeverity.DEBUG */, 108 /* _eInternalMessageId.DynamicConfigException */, \"\".concat(desc, \" [\").concat(name, \"] failed - \") + dumpObj(e));\r\n};\r\nfunction _patchArray(state, target, name) {\r\n    if (isArray(target)) {\r\n        // Monkey Patch the methods that might change the array\r\n        arrForEach(arrayMethodsToPatch, function (method) {\r\n            var orgMethod = target[method];\r\n            target[method] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var result = orgMethod[_DYN_APPLY /* @min:%2eapply */](this, args);\r\n                // items may be added, removed or moved so need to make some new dynamic properties\r\n                _makeDynamicObject(state, target, name, \"Patching\");\r\n                return result;\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction _getOwnPropGetter(target, name) {\r\n    var propDesc = objGetOwnPropertyDescriptor(target, name);\r\n    return propDesc && propDesc.get;\r\n}\r\nfunction _createDynamicProperty(state, theConfig, name, value) {\r\n    // Does not appear to be dynamic so lets make it so\r\n    var detail = {\r\n        n: name,\r\n        h: [],\r\n        trk: function (handler) {\r\n            if (handler && handler.fn) {\r\n                if (arrIndexOf(detail.h, handler) === -1) {\r\n                    // Add this handler to the collection that should be notified when the value changes\r\n                    detail.h[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n                state.trk(handler, detail);\r\n            }\r\n        },\r\n        clr: function (handler) {\r\n            var idx = arrIndexOf(detail.h, handler);\r\n            if (idx !== -1) {\r\n                detail.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n            }\r\n        }\r\n    };\r\n    // Flag to optimize lookup response time by avoiding additional function calls\r\n    var checkDynamic = true;\r\n    var isObjectOrArray = false;\r\n    function _getProperty() {\r\n        if (checkDynamic) {\r\n            isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n            // Make sure that if it's an object that we make it dynamic\r\n            if (value && !value[CFG_HANDLER_LINK] && isObjectOrArray) {\r\n                // It doesn't look like it's already dynamic so lets make sure it's converted the object into a dynamic Config as well\r\n                value = _makeDynamicObject(state, value, name, \"Converting\");\r\n            }\r\n            // If it needed to be converted it now has been\r\n            checkDynamic = false;\r\n        }\r\n        // If there is an active handler then add it to the tracking set of handlers\r\n        var activeHandler = state.act;\r\n        if (activeHandler) {\r\n            detail.trk(activeHandler);\r\n        }\r\n        return value;\r\n    }\r\n    // Tag this getter as our dynamic property and provide shortcut for notifying a change\r\n    _getProperty[state.prop] = {\r\n        chng: function () {\r\n            state.add(detail);\r\n        }\r\n    };\r\n    function _setProperty(newValue) {\r\n        if (value !== newValue) {\r\n            if (!!_getProperty[state.ro] && !state.upd) {\r\n                // field is marked as readonly so return false\r\n                throwInvalidAccess(\"[\" + name + \"] is read-only:\" + dumpObj(theConfig));\r\n            }\r\n            if (checkDynamic) {\r\n                isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n                checkDynamic = false;\r\n            }\r\n            // The value must be a plain object or an array to enforce the reference (in-place updates)\r\n            var isReferenced = isObjectOrArray && _getProperty[state.rf];\r\n            if (isObjectOrArray) {\r\n                // We are about to replace a plain object or an array\r\n                if (isReferenced) {\r\n                    // Reassign the properties from the current value to the same properties from the newValue\r\n                    // This will set properties not in the newValue to undefined\r\n                    objForEachKey(value, function (key) {\r\n                        value[key] = newValue ? newValue[key] : UNDEFINED_VALUE;\r\n                    });\r\n                    // Now assign / re-assign value with all of the keys from newValue\r\n                    try {\r\n                        objForEachKey(newValue, function (key, theValue) {\r\n                            _setDynamicProperty(state, value, key, theValue);\r\n                        });\r\n                        // Now drop newValue so when we assign value later it keeps the existing reference\r\n                        newValue = value;\r\n                    }\r\n                    catch (e) {\r\n                        // Unable to convert to dynamic property so just leave as non-dynamic\r\n                        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Assigning\", e);\r\n                        // Mark as not an object or array so we don't try and do this again\r\n                        isObjectOrArray = false;\r\n                    }\r\n                }\r\n                else if (value && value[CFG_HANDLER_LINK]) {\r\n                    // As we are replacing the value, if it's already dynamic then we need to notify the listeners\r\n                    // for every property it has already\r\n                    objForEachKey(value, function (key) {\r\n                        // Check if the value is dynamic\r\n                        var getter = _getOwnPropGetter(value, key);\r\n                        if (getter) {\r\n                            // And if it is tell it's listeners that the value has changed\r\n                            var valueState = getter[state.prop];\r\n                            valueState && valueState.chng();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (newValue !== value) {\r\n                var newIsObjectOrArray = newValue && _canMakeDynamic(_getProperty, state, newValue);\r\n                if (!isReferenced && newIsObjectOrArray) {\r\n                    // As the newValue is an object/array lets preemptively make it dynamic\r\n                    newValue = _makeDynamicObject(state, newValue, name, \"Converting\");\r\n                }\r\n                // Now assign the internal \"value\" to the newValue\r\n                value = newValue;\r\n                isObjectOrArray = newIsObjectOrArray;\r\n            }\r\n            // Cause any listeners to be scheduled for notification\r\n            state.add(detail);\r\n        }\r\n    }\r\n    objDefine(theConfig, detail.n, { g: _getProperty, s: _setProperty });\r\n}\r\nexport function _setDynamicProperty(state, target, name, value) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        if (!isDynamic) {\r\n            _createDynamicProperty(state, target, name, value);\r\n        }\r\n        else {\r\n            // Looks like it's already dynamic just assign the new value\r\n            target[name] = value;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _setDynamicPropertyState(state, target, name, flags) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        var inPlace = flags && flags[0 /* _eSetDynamicPropertyFlags.inPlace */];\r\n        var rdOnly = flags && flags[1 /* _eSetDynamicPropertyFlags.readOnly */];\r\n        var blkProp = flags && flags[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */];\r\n        if (!isDynamic) {\r\n            if (blkProp) {\r\n                try {\r\n                    // Attempt to mark the target as blocked from conversion\r\n                    blockDynamicConversion(target);\r\n                }\r\n                catch (e) {\r\n                    _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Blocking\", e);\r\n                }\r\n            }\r\n            try {\r\n                // Make sure it's dynamic so that we can tag the property as per the state\r\n                _setDynamicProperty(state, target, name, target[name]);\r\n                getter = _getOwnPropGetter(target, name);\r\n            }\r\n            catch (e) {\r\n                // Unable to convert to dynamic property so just leave as non-dynamic\r\n                _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"State\", e);\r\n            }\r\n        }\r\n        // Assign the optional flags if true\r\n        if (inPlace) {\r\n            getter[state.rf] = inPlace;\r\n        }\r\n        if (rdOnly) {\r\n            getter[state.ro] = rdOnly;\r\n        }\r\n        if (blkProp) {\r\n            getter[state.blkVal] = true;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _makeDynamicObject(state, target, name, desc) {\r\n    try {\r\n        // Assign target with new value properties (converting into dynamic properties in the process)\r\n        objForEachKey(target, function (key, value) {\r\n            // Assign and/or make the property dynamic\r\n            _setDynamicProperty(state, target, key, value);\r\n        });\r\n        if (!target[CFG_HANDLER_LINK]) {\r\n            // Link the config back to the dynamic config details\r\n            objDefineProp(target, CFG_HANDLER_LINK, {\r\n                get: function () {\r\n                    return state[_DYN_HDLR /* @min:%2ehdlr */];\r\n                }\r\n            });\r\n            _patchArray(state, target, name);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Unable to convert to dynamic property so just leave as non-dynamic\r\n        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, desc, e);\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=DynamicProperty.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, newSymbol, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { throwAggregationError } from \"../JavaScriptSDK/AggregationError\";\r\nimport { _DYN_BLK_VAL, _DYN_CANCEL, _DYN_HDLR, _DYN_LENGTH, _DYN_LOGGER, _DYN_NOTIFY, _DYN_PUSH, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nvar symPrefix = \"[[ai_\";\r\nvar symPostfix = \"]]\";\r\nexport function _createState(cfgHandler) {\r\n    var _a;\r\n    var dynamicPropertySymbol = newSymbol(symPrefix + \"get\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReadOnly = newSymbol(symPrefix + \"ro\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReferenced = newSymbol(symPrefix + \"rf\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyBlockValue = newSymbol(symPrefix + \"blkVal\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyDetail = newSymbol(symPrefix + \"dtl\" + cfgHandler.uid + symPostfix);\r\n    var _waitingHandlers = null;\r\n    var _watcherTimer = null;\r\n    var theState;\r\n    function _useHandler(activeHandler, callback) {\r\n        var prevWatcher = theState.act;\r\n        try {\r\n            theState.act = activeHandler;\r\n            if (activeHandler && activeHandler[dynamicPropertyDetail]) {\r\n                // Clear out the previously tracked details for this handler, so that access are re-evaluated\r\n                arrForEach(activeHandler[dynamicPropertyDetail], function (detail) {\r\n                    detail.clr(activeHandler);\r\n                });\r\n                activeHandler[dynamicPropertyDetail] = [];\r\n            }\r\n            callback({\r\n                cfg: cfgHandler.cfg,\r\n                set: cfgHandler.set.bind(cfgHandler),\r\n                setDf: cfgHandler[_DYN_SET_DF /* @min:%2esetDf */].bind(cfgHandler),\r\n                ref: cfgHandler.ref.bind(cfgHandler),\r\n                rdOnly: cfgHandler[_DYN_RD_ONLY /* @min:%2erdOnly */].bind(cfgHandler)\r\n            });\r\n        }\r\n        catch (e) {\r\n            var logger = cfgHandler[_DYN_LOGGER /* @min:%2elogger */];\r\n            if (logger) {\r\n                // Don't let one individual failure break everyone\r\n                logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](1 /* eLoggingSeverity.CRITICAL */, 107 /* _eInternalMessageId.ConfigWatcherException */, dumpObj(e));\r\n            }\r\n            // Re-throw the exception so that any true \"error\" is reported back to the called\r\n            throw e;\r\n        }\r\n        finally {\r\n            theState.act = prevWatcher || null;\r\n        }\r\n    }\r\n    function _notifyWatchers() {\r\n        if (_waitingHandlers) {\r\n            var notifyHandlers = _waitingHandlers;\r\n            _waitingHandlers = null;\r\n            // Stop any timer as we are running them now anyway\r\n            _watcherTimer && _watcherTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n            _watcherTimer = null;\r\n            var watcherFailures_1 = [];\r\n            // Now run the handlers\r\n            arrForEach(notifyHandlers, function (handler) {\r\n                if (handler) {\r\n                    if (handler[dynamicPropertyDetail]) {\r\n                        arrForEach(handler[dynamicPropertyDetail], function (detail) {\r\n                            // Clear out this handler from  previously tracked details, so that access are re-evaluated\r\n                            detail.clr(handler);\r\n                        });\r\n                        handler[dynamicPropertyDetail] = null;\r\n                    }\r\n                    // The handler may have self removed as part of another handler so re-check\r\n                    if (handler.fn) {\r\n                        try {\r\n                            _useHandler(handler, handler.fn);\r\n                        }\r\n                        catch (e) {\r\n                            // Don't let a single failing watcher cause other watches to fail\r\n                            watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            // During notification we may have had additional updates -- so notify those updates as well\r\n            if (_waitingHandlers) {\r\n                try {\r\n                    _notifyWatchers();\r\n                }\r\n                catch (e) {\r\n                    watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                }\r\n            }\r\n            if (watcherFailures_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                throwAggregationError(\"Watcher error(s): \", watcherFailures_1);\r\n            }\r\n        }\r\n    }\r\n    function _addWatcher(detail) {\r\n        if (detail && detail.h[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            if (!_waitingHandlers) {\r\n                _waitingHandlers = [];\r\n            }\r\n            if (!_watcherTimer) {\r\n                _watcherTimer = scheduleTimeout(function () {\r\n                    _watcherTimer = null;\r\n                    _notifyWatchers();\r\n                }, 0);\r\n            }\r\n            // Add all of the handlers for this detail (if not already present) - using normal for-loop for performance\r\n            for (var idx = 0; idx < detail.h[_DYN_LENGTH /* @min:%2elength */]; idx++) {\r\n                var handler = detail.h[idx];\r\n                // Add this handler to the collection of handlers to re-execute\r\n                if (handler && arrIndexOf(_waitingHandlers, handler) === -1) {\r\n                    _waitingHandlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function _trackHandler(handler, detail) {\r\n        if (handler) {\r\n            var details = handler[dynamicPropertyDetail] = handler[dynamicPropertyDetail] || [];\r\n            if (arrIndexOf(details, detail) === -1) {\r\n                // If this detail is not already listed as tracked then add it so that we re-evaluate it's usage\r\n                details[_DYN_PUSH /* @min:%2epush */](detail);\r\n            }\r\n        }\r\n    }\r\n    theState = (_a = {\r\n            prop: dynamicPropertySymbol,\r\n            ro: dynamicPropertyReadOnly,\r\n            rf: dynamicPropertyReferenced\r\n        },\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = dynamicPropertyBlockValue,\r\n        _a[_DYN_HDLR /* @min:hdlr */] = cfgHandler,\r\n        _a.add = _addWatcher,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.use = _useHandler,\r\n        _a.trk = _trackHandler,\r\n        _a);\r\n    return theState;\r\n}\r\n//# sourceMappingURL=DynamicState.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, isUndefined, objDefine, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { createUniqueNamespace } from \"../JavaScriptSDK/DataCacheHelper\";\r\nimport { STR_NOT_DYNAMIC_ERROR } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_LOGGER, _DYN_NOTIFY, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL, _DYN_WARN_TO_CONSOLE, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { _applyDefaultValue } from \"./ConfigDefaults\";\r\nimport { _makeDynamicObject, _setDynamicProperty, _setDynamicPropertyState, _throwDynamicError } from \"./DynamicProperty\";\r\nimport { _createState } from \"./DynamicState\";\r\nimport { CFG_HANDLER_LINK, _cfgDeepCopy, getDynamicConfigHandler, throwInvalidAccess } from \"./DynamicSupport\";\r\n/**\r\n * Identifies a function which will be re-called whenever any of it's accessed configuration values\r\n * change.\r\n * @param configHandler - The callback that will be called for the initial request and then whenever any\r\n * accessed configuration changes are identified.\r\n */\r\nfunction _createAndUseHandler(state, configHandler) {\r\n    var handler = {\r\n        fn: configHandler,\r\n        rm: function () {\r\n            // Clear all references to the handler so it can be garbage collected\r\n            // This will also cause this handler to never get called and eventually removed\r\n            handler.fn = null;\r\n            state = null;\r\n            configHandler = null;\r\n        }\r\n    };\r\n    objDefine(handler, \"toJSON\", { v: function () { return \"WatcherHandler\" + (handler.fn ? \"\" : \"[X]\"); } });\r\n    state.use(handler, configHandler);\r\n    return handler;\r\n}\r\n/**\r\n * Creates the dynamic config handler and associates with the target config as the root object\r\n * @param target - The config that you want to be root of the dynamic config\r\n * @param inPlace - Should the passed config be converted in-place or a new proxy returned\r\n * @returns The existing dynamic handler or a new instance with the provided config values\r\n */\r\nfunction _createDynamicHandler(logger, target, inPlace) {\r\n    var _a;\r\n    var dynamicHandler = getDynamicConfigHandler(target);\r\n    if (dynamicHandler) {\r\n        // The passed config is already dynamic so return it's tracker\r\n        return dynamicHandler;\r\n    }\r\n    var uid = createUniqueNamespace(\"dyncfg\", true);\r\n    var newTarget = (target && inPlace !== false) ? target : _cfgDeepCopy(target);\r\n    var theState;\r\n    function _notifyWatchers() {\r\n        theState[_DYN_NOTIFY /* @min:%2enotify */]();\r\n    }\r\n    function _setValue(target, name, value) {\r\n        try {\r\n            target = _setDynamicProperty(theState, target, name, value);\r\n        }\r\n        catch (e) {\r\n            // Unable to convert to dynamic property so just leave as non-dynamic\r\n            _throwDynamicError(logger, name, \"Setting value\", e);\r\n        }\r\n        return target[name];\r\n    }\r\n    function _watch(configHandler) {\r\n        return _createAndUseHandler(theState, configHandler);\r\n    }\r\n    function _block(configHandler, allowUpdate) {\r\n        theState.use(null, function (details) {\r\n            var prevUpd = theState.upd;\r\n            try {\r\n                if (!isUndefined(allowUpdate)) {\r\n                    theState.upd = allowUpdate;\r\n                }\r\n                configHandler(details);\r\n            }\r\n            finally {\r\n                theState.upd = prevUpd;\r\n            }\r\n        });\r\n    }\r\n    function _ref(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as referenced with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[0 /* _eSetDynamicPropertyFlags.inPlace */] = true, _a))[name];\r\n    }\r\n    function _rdOnly(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[1 /* _eSetDynamicPropertyFlags.readOnly */] = true, _a))[name];\r\n    }\r\n    function _blkPropValue(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */] = true, _a))[name];\r\n    }\r\n    function _applyDefaults(theConfig, defaultValues) {\r\n        if (defaultValues) {\r\n            // Resolve/apply the defaults\r\n            objForEachKey(defaultValues, function (name, value) {\r\n                // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                _applyDefaultValue(cfgHandler, theConfig, name, value);\r\n            });\r\n        }\r\n        return theConfig;\r\n    }\r\n    var cfgHandler = (_a = {\r\n            uid: null,\r\n            cfg: newTarget\r\n        },\r\n        _a[_DYN_LOGGER /* @min:logger */] = logger,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.set = _setValue,\r\n        _a[_DYN_SET_DF /* @min:setDf */] = _applyDefaults,\r\n        _a[_DYN_WATCH /* @min:watch */] = _watch,\r\n        _a.ref = _ref,\r\n        _a[_DYN_RD_ONLY /* @min:rdOnly */] = _rdOnly,\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = _blkPropValue,\r\n        _a._block = _block,\r\n        _a);\r\n    objDefine(cfgHandler, \"uid\", {\r\n        c: false,\r\n        e: false,\r\n        w: false,\r\n        v: uid\r\n    });\r\n    theState = _createState(cfgHandler);\r\n    // Setup tracking for all defined default keys\r\n    _makeDynamicObject(theState, newTarget, \"config\", \"Creating\");\r\n    return cfgHandler;\r\n}\r\n/**\r\n * Log an invalid access message to the console\r\n * @param message\r\n */\r\nfunction _logInvalidAccess(logger, message) {\r\n    if (logger) {\r\n        logger[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n        logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](2 /* eLoggingSeverity.WARNING */, 108 /* _eInternalMessageId.DynamicConfigException */, message);\r\n    }\r\n    else {\r\n        // We don't have a logger so just throw an exception\r\n        throwInvalidAccess(message);\r\n    }\r\n}\r\n/**\r\n * Create or return a dynamic version of the passed config, if it is not already dynamic\r\n * @param config - The config to be converted into a dynamic config\r\n * @param defaultConfig - The default values to apply on the config if the properties don't already exist\r\n * @param inPlace - Should the config be converted in-place into a dynamic config or a new instance returned, defaults to true\r\n * @returns The dynamic config handler for the config (whether new or existing)\r\n */\r\nexport function createDynamicConfig(config, defaultConfig, logger, inPlace) {\r\n    var dynamicHandler = _createDynamicHandler(logger, config || {}, inPlace);\r\n    if (defaultConfig) {\r\n        dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](dynamicHandler.cfg, defaultConfig);\r\n    }\r\n    return dynamicHandler;\r\n}\r\n/**\r\n * Watch and track changes for accesses to the current config, the provided config MUST already be\r\n * a dynamic config or a child accessed via the dynamic config\r\n * @param config\r\n * @param configHandler\r\n * @param logger - The logger instance to use if there is no existing handler\r\n * @returns A watcher handler instance that can be used to remove itself when being unloaded\r\n * @throws TypeError if the provided config is not a dynamic config instance\r\n */\r\nexport function onConfigChange(config, configHandler, logger) {\r\n    var handler = config[CFG_HANDLER_LINK] || config;\r\n    if (handler.cfg && (handler.cfg === config || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n        return handler[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n    }\r\n    _logInvalidAccess(logger, STR_NOT_DYNAMIC_ERROR + dumpObj(config));\r\n    return createDynamicConfig(config, null, logger)[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n}\r\n//# sourceMappingURL=DynamicConfig.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrSlice, getLength } from \"@nevware21/ts-utils\";\r\nimport { _DYN_UNLOAD } from \"../__DynamicConstants\";\r\n/**\r\n * Run the unload function of the target object if it exists\r\n * @param target - The target object that contains the unload function\r\n * @param isAsync - The caller identifies whether it is expecting the operation to complete synchronously or asynchronously. Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @returns The result of the target function\r\n */\r\nexport function runTargetUnload(target, isAsync) {\r\n    if (target && target[_DYN_UNLOAD /* @min:%2eunload */]) {\r\n        return target[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n    }\r\n}\r\n/**\r\n * Call the unload function on all targets handling any returned [IPromise](https://nevware21.github.io/ts-async/typedoc/interfaces/IPromise.html)\r\n * / Promise before calling the next targets unload\r\n * @param targets - An array of the targets to unload\r\n * @param isAsync - The caller identifies whether it is expecting the operations to complete synchronously or asynchronously.  Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @param done - Optional callback function to call once all of the unload functions have been called.\r\n */\r\nexport function doUnloadAll(targets, isAsync, done) {\r\n    var result;\r\n    if (!done) {\r\n        result = createPromise(function (resolved) {\r\n            done = resolved;\r\n        });\r\n    }\r\n    if (targets && getLength(targets) > 0) {\r\n        doAwaitResponse(runTargetUnload(targets[0], isAsync), function () {\r\n            doUnloadAll(arrSlice(targets, 1), isAsync, done);\r\n        });\r\n    }\r\n    else {\r\n        done();\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=AsyncUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nexport var ChannelControllerPriority = 500;\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\n// export const SampleRate = \"sampleRate\";\r\n// export const ProcessLegacy = \"ProcessLegacy\";\r\n// export const HttpMethod = \"http.method\";\r\n// export const DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\n// export const DEFAULT_BREEZE_PATH = \"/v2/track\";\r\n// export const strNotSpecified = \"not_specified\";\r\n// export const strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isBoolean, isFunction, isNullOrUndefined, isString } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\n/**\r\n * @internal\r\n * @ignore\r\n * @param str\r\n * @param defaultValue\r\n * @returns\r\n */\r\nfunction _stringToBoolOrDefault(theValue, defaultValue, theConfig) {\r\n    if (!theValue && isNullOrUndefined(theValue)) {\r\n        return defaultValue;\r\n    }\r\n    if (isBoolean(theValue)) {\r\n        return theValue;\r\n    }\r\n    return asString(theValue)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the field defined as an object\r\n * that should be merged\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfMerge(defaultValue) {\r\n    return {\r\n        mrg: true,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field set function\r\n * @param setter - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfSet(setter, defaultValue) {\r\n    return {\r\n        set: setter,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field validator\r\n * @param validator - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfValidate(validator, defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        isVal: validator,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate and convert the user\r\n * provided value to a boolean from a string or boolean value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBoolean(defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        set: _stringToBoolOrDefault,\r\n        v: !!defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfFunc(defaultValue) {\r\n    return {\r\n        isVal: isFunction,\r\n        v: defaultValue || null\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default string value to apply it not provided or it's not valid, defaults to an empty string\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfString(defaultValue) {\r\n    return {\r\n        isVal: isString,\r\n        v: asString(defaultValue || STR_EMPTY)\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance identifying that value associated with this property\r\n * should not have it's properties converted into a dynamic config properties.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBlockPropValue(defaultValue) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = true,\r\n        _a.v = defaultValue,\r\n        _a;\r\n}\r\n//# sourceMappingURL=ConfigDefaultHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dumpObj, isFunction, isUndefined } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_DIAG_LOG, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_LOG_INTERNAL_MESSAGE, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE, _DYN_THROW_INTERNAL, _DYN_UNLOAD, _DYN_WARN_TO_CONSOLE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar defaultValues = {\r\n    loggingLevelConsole: 0,\r\n    loggingLevelTelemetry: 1,\r\n    maxMessageLimit: 25,\r\n    enableDebug: false\r\n};\r\nvar _logFuncs = (_a = {},\r\n    _a[0 /* eLoggingSeverity.DISABLED */] = null,\r\n    _a[1 /* eLoggingSeverity.CRITICAL */] = \"errorToConsole\",\r\n    _a[2 /* eLoggingSeverity.WARNING */] = STR_WARN_TO_CONSOLE,\r\n    _a[3 /* eLoggingSeverity.DEBUG */] = \"debugToConsole\",\r\n    _a);\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        var _unloadHandler;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _unloadHandler = _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {LoggingSeverity} - The severity of the log message\r\n             * @param message - {_InternalLogMessage} - The log message.\r\n             */\r\n            _self[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */] = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = _logFuncs[severity] || STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            _self.debugToConsole = function (message) {\r\n                _logToConsole(\"debug\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            _self[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */] = _logInternalMessage;\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                _unloadHandler && _unloadHandler.rm();\r\n                _unloadHandler = null;\r\n            };\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                // make sure the config is dynamic\r\n                return onConfigChange(createDynamicConfig(config, defaultValues, _self).cfg, function (details) {\r\n                    var config = details.cfg;\r\n                    _loggingLevelConsole = config[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */];\r\n                    _loggingLevelTelemetry = config.loggingLevelTelemetry;\r\n                    _maxInternalMessageLimit = config.maxMessageLimit;\r\n                    _enableDebug = config.enableDebug;\r\n                });\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.debugToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n// Removed Stub for DiagnosticLogger.prototype.unload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger)[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger)[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */](severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { arrForEach, arrIndexOf, dumpObj, getDocument, getLazy, getNavigator, isArray, isFunction, isNullOrUndefined, isString, isTruthy, isUndefined, objForEachKey, strEndsWith, strIndexOf, strLeft, strSubstring, strTrim, utcNow } from \"@nevware21/ts-utils\";\r\nimport { cfgDfMerge } from \"../Config/ConfigDefaultHelpers\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ENABLED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROTOCOL, _DYN_SET_DF, _DYN_SPLIT, _DYN_UNLOAD, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getLocation, isIE } from \"./EnvUtils\";\r\nimport { getExceptionName, isNotNullOrUndefined, setValue, strContains } from \"./HelperFuncs\";\r\nimport { STR_DOMAIN, STR_EMPTY, STR_PATH, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nvar strToGMTString = \"toGMTString\";\r\nvar strToUTCString = \"toUTCString\";\r\nvar strCookie = \"cookie\";\r\nvar strExpires = \"expires\";\r\nvar strIsCookieUseDisabled = \"isCookieUseDisabled\";\r\nvar strDisableCookiesUsage = \"disableCookiesUsage\";\r\nvar strConfigCookieMgr = \"_ckMgr\";\r\nvar _supportsCookies = null;\r\nvar _allowUaSameSite = null;\r\nvar _parsedCookieValue = null;\r\nvar _doc;\r\nvar _cookieCache = {};\r\nvar _globalCookieConfig = {};\r\n// // `isCookieUseDisabled` is deprecated, so explicitly casting as a key of IConfiguration to avoid typing error\r\n// // when both isCookieUseDisabled and disableCookiesUsage are used disableCookiesUsage will take precedent, which is\r\n// // why its listed first\r\n/**\r\n * Set the supported dynamic config values as undefined (or an empty object) so that\r\n * any listeners will be informed of any changes.\r\n * Explicitly NOT including the deprecated `isCookieUseDisabled` as we don't want to support\r\n * the v1 deprecated field as dynamic for updates\r\n */\r\nvar rootDefaultConfig = (_a = {\r\n        cookieCfg: cfgDfMerge((_b = {},\r\n            _b[STR_DOMAIN] = { fb: \"cookieDomain\", dfVal: isNotNullOrUndefined },\r\n            _b.path = { fb: \"cookiePath\", dfVal: isNotNullOrUndefined },\r\n            _b.enabled = UNDEFINED_VALUE,\r\n            _b.ignoreCookies = UNDEFINED_VALUE,\r\n            _b.blockedCookies = UNDEFINED_VALUE,\r\n            _b)),\r\n        cookieDomain: UNDEFINED_VALUE,\r\n        cookiePath: UNDEFINED_VALUE\r\n    },\r\n    _a[strDisableCookiesUsage] = UNDEFINED_VALUE,\r\n    _a);\r\nfunction _getDoc() {\r\n    !_doc && (_doc = getLazy(function () { return getDocument(); }));\r\n}\r\n/**\r\n * @ignore\r\n * DO NOT USE or export from the module, this is exposed as public to support backward compatibility of previous static utility methods only.\r\n * If you want to manager cookies either use the ICookieMgr available from the core instance via getCookieMgr() or create\r\n * your own instance of the CookieMgr and use that.\r\n * Using this directly for enabling / disabling cookie handling will not only affect your usage but EVERY user of cookies.\r\n * Example, if you are using a shared component that is also using Application Insights you will affect their cookie handling.\r\n * @param logger - The DiagnosticLogger to use for reporting errors.\r\n */\r\nfunction _gblCookieMgr(config, logger) {\r\n    // Stash the global instance against the BaseCookieMgr class\r\n    var inst = createCookieMgr[strConfigCookieMgr] || _globalCookieConfig[strConfigCookieMgr];\r\n    if (!inst) {\r\n        // Note: not using the getSetValue() helper as that would require always creating a temporary cookieMgr\r\n        // that ultimately is never used\r\n        inst = createCookieMgr[strConfigCookieMgr] = createCookieMgr(config, logger);\r\n        _globalCookieConfig[strConfigCookieMgr] = inst;\r\n    }\r\n    return inst;\r\n}\r\nfunction _isMgrEnabled(cookieMgr) {\r\n    if (cookieMgr) {\r\n        return cookieMgr.isEnabled();\r\n    }\r\n    return true;\r\n}\r\nfunction _isIgnoredCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.ignoreCookies)) {\r\n        return arrIndexOf(cookieMgrCfg.ignoreCookies, name) !== -1;\r\n    }\r\n    return false;\r\n}\r\nfunction _isBlockedCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.blockedCookies)) {\r\n        if (arrIndexOf(cookieMgrCfg.blockedCookies, name) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return _isIgnoredCookie(cookieMgrCfg, name);\r\n}\r\nfunction _isCfgEnabled(rootConfig, cookieMgrConfig) {\r\n    var isCfgEnabled = cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */];\r\n    if (isNullOrUndefined(isCfgEnabled)) {\r\n        // Set the enabled from the provided setting or the legacy root values\r\n        var cookieEnabled = void 0;\r\n        // This field is deprecated and dynamic updates will not be fully supported\r\n        if (!isUndefined(rootConfig[strIsCookieUseDisabled])) {\r\n            cookieEnabled = !rootConfig[strIsCookieUseDisabled];\r\n        }\r\n        // If this value is defined it takes precedent over the above\r\n        if (!isUndefined(rootConfig[strDisableCookiesUsage])) {\r\n            cookieEnabled = !rootConfig[strDisableCookiesUsage];\r\n        }\r\n        // Not setting the cookieMgrConfig.enabled as that will update (set) the global dynamic config\r\n        // So future \"updates\" then may not be as expected\r\n        isCfgEnabled = cookieEnabled;\r\n    }\r\n    return isCfgEnabled;\r\n}\r\n/**\r\n * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation\r\n * associated with the configuration or a legacy default.\r\n * @param core\r\n * @param config\r\n * @returns\r\n */\r\nexport function safeGetCookieMgr(core, config) {\r\n    var cookieMgr;\r\n    if (core) {\r\n        // Always returns an instance\r\n        cookieMgr = core.getCookieMgr();\r\n    }\r\n    else if (config) {\r\n        var cookieCfg = config.cookieCfg;\r\n        if (cookieCfg && cookieCfg[strConfigCookieMgr]) {\r\n            cookieMgr = cookieCfg[strConfigCookieMgr];\r\n        }\r\n        else {\r\n            cookieMgr = createCookieMgr(config);\r\n        }\r\n    }\r\n    if (!cookieMgr) {\r\n        // Get or initialize the default global (legacy) cookie manager if we couldn't find one\r\n        cookieMgr = _gblCookieMgr(config, (core || {})[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    return cookieMgr;\r\n}\r\nexport function createCookieMgr(rootConfig, logger) {\r\n    var _a;\r\n    var cookieMgrConfig;\r\n    var _path;\r\n    var _domain;\r\n    var unloadHandler;\r\n    // Explicitly checking against false, so that setting to undefined will === true\r\n    var _enabled;\r\n    var _getCookieFn;\r\n    var _setCookieFn;\r\n    var _delCookieFn;\r\n    // Make sure the root config is dynamic as it may be the global config\r\n    rootConfig = createDynamicConfig(rootConfig || _globalCookieConfig, null, logger).cfg;\r\n    // Will get recalled if the referenced configuration is changed\r\n    unloadHandler = onConfigChange(rootConfig, function (details) {\r\n        // Make sure the root config has all of the the defaults to the root config to ensure they are dynamic\r\n        details[_DYN_SET_DF /* @min:%2esetDf */](details.cfg, rootDefaultConfig);\r\n        // Create and apply the defaults to the cookieCfg element\r\n        cookieMgrConfig = details.ref(details.cfg, \"cookieCfg\"); // details.setDf(details.cfg.cookieCfg, defaultConfig);\r\n        _path = cookieMgrConfig[STR_PATH /* @min:%2epath */] || \"/\";\r\n        _domain = cookieMgrConfig[STR_DOMAIN /* @min:%2edomain */];\r\n        // Explicitly checking against false, so that setting to undefined will === true\r\n        _enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false;\r\n        _getCookieFn = cookieMgrConfig.getCookie || _getCookieValue;\r\n        _setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n        _delCookieFn = cookieMgrConfig.delCookie || _setCookieValue;\r\n    }, logger);\r\n    var cookieMgr = (_a = {\r\n            isEnabled: function () {\r\n                var enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false && _enabled && areCookiesSupported(logger);\r\n                // Using an indirect lookup for any global cookie manager to support tree shaking for SDK's\r\n                // that don't use the \"applicationinsights-core\" version of the default cookie function\r\n                var gblManager = _globalCookieConfig[strConfigCookieMgr];\r\n                if (enabled && gblManager && cookieMgr !== gblManager) {\r\n                    // Make sure the GlobalCookie Manager instance (if not this instance) is also enabled.\r\n                    // As the global (deprecated) functions may have been called (for backward compatibility)\r\n                    enabled = _isMgrEnabled(gblManager);\r\n                }\r\n                return enabled;\r\n            },\r\n            setEnabled: function (value) {\r\n                // Explicitly checking against false, so that setting to undefined will === true\r\n                _enabled = value !== false;\r\n                cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */] = value;\r\n            },\r\n            set: function (name, value, maxAgeSec, domain, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr) && !_isBlockedCookie(cookieMgrConfig, name)) {\r\n                    var values = {};\r\n                    var theValue = strTrim(value || STR_EMPTY);\r\n                    var idx = strIndexOf(theValue, \";\");\r\n                    if (idx !== -1) {\r\n                        theValue = strTrim(strLeft(value, idx));\r\n                        values = _extractParts(strSubstring(value, idx + 1));\r\n                    }\r\n                    // Only update domain if not already present (isUndefined) and the value is truthy (not null, undefined or empty string)\r\n                    setValue(values, STR_DOMAIN, domain || _domain, isTruthy, isUndefined);\r\n                    if (!isNullOrUndefined(maxAgeSec)) {\r\n                        var _isIE = isIE();\r\n                        if (isUndefined(values[strExpires])) {\r\n                            var nowMs = utcNow();\r\n                            // Only add expires if not already present\r\n                            var expireMs = nowMs + (maxAgeSec * 1000);\r\n                            // Sanity check, if zero or -ve then ignore\r\n                            if (expireMs > 0) {\r\n                                var expiry = new Date();\r\n                                expiry.setTime(expireMs);\r\n                                setValue(values, strExpires, _formatDate(expiry, !_isIE ? strToUTCString : strToGMTString) || _formatDate(expiry, _isIE ? strToGMTString : strToUTCString) || STR_EMPTY, isTruthy);\r\n                            }\r\n                        }\r\n                        if (!_isIE) {\r\n                            // Only replace if not already present\r\n                            setValue(values, \"max-age\", STR_EMPTY + maxAgeSec, null, isUndefined);\r\n                        }\r\n                    }\r\n                    var location_1 = getLocation();\r\n                    if (location_1 && location_1[_DYN_PROTOCOL /* @min:%2eprotocol */] === \"https:\") {\r\n                        setValue(values, \"secure\", null, null, isUndefined);\r\n                        // Only set same site if not also secure\r\n                        if (_allowUaSameSite === null) {\r\n                            _allowUaSameSite = !uaDisallowsSameSiteNone((getNavigator() || {})[_DYN_USER_AGENT /* @min:%2euserAgent */]);\r\n                        }\r\n                        if (_allowUaSameSite) {\r\n                            setValue(values, \"SameSite\", \"None\", null, isUndefined);\r\n                        }\r\n                    }\r\n                    setValue(values, STR_PATH, path || _path, null, isUndefined);\r\n                    //let setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n                    _setCookieFn(name, _formatCookieValue(theValue, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            },\r\n            get: function (name) {\r\n                var value = STR_EMPTY;\r\n                if (_isMgrEnabled(cookieMgr) && !_isIgnoredCookie(cookieMgrConfig, name)) {\r\n                    value = _getCookieFn(name);\r\n                }\r\n                return value;\r\n            },\r\n            del: function (name, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr)) {\r\n                    // Only remove the cookie if the manager and cookie support has not been disabled\r\n                    result = cookieMgr.purge(name, path);\r\n                }\r\n                return result;\r\n            },\r\n            purge: function (name, path) {\r\n                var _a;\r\n                var result = false;\r\n                if (areCookiesSupported(logger)) {\r\n                    // Setting the expiration date in the past immediately removes the cookie\r\n                    var values = (_a = {},\r\n                        _a[STR_PATH] = path ? path : \"/\",\r\n                        _a[strExpires] = \"Thu, 01 Jan 1970 00:00:01 GMT\",\r\n                        _a);\r\n                    if (!isIE()) {\r\n                        // Set max age to expire now\r\n                        values[\"max-age\"] = \"0\";\r\n                    }\r\n                    // let delCookie = cookieMgrConfig.delCookie || _setCookieValue;\r\n                    _delCookieFn(name, _formatCookieValue(STR_EMPTY, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        _a[_DYN_UNLOAD /* @min:unload */] = function (isAsync) {\r\n            unloadHandler && unloadHandler.rm();\r\n            unloadHandler = null;\r\n        },\r\n        _a);\r\n    // Associated this cookie manager with the config\r\n    cookieMgr[strConfigCookieMgr] = cookieMgr;\r\n    return cookieMgr;\r\n}\r\n/*\r\n* Helper method to tell if document.cookie object is supported by the runtime\r\n*/\r\nexport function areCookiesSupported(logger) {\r\n    if (_supportsCookies === null) {\r\n        _supportsCookies = false;\r\n        !_doc && _getDoc();\r\n        try {\r\n            var doc = _doc.v || {};\r\n            _supportsCookies = doc[strCookie] !== undefined;\r\n        }\r\n        catch (e) {\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 68 /* _eInternalMessageId.CannotAccessCookie */, \"Cannot access document.cookie - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return _supportsCookies;\r\n}\r\nfunction _extractParts(theValue) {\r\n    var values = {};\r\n    if (theValue && theValue[_DYN_LENGTH /* @min:%2elength */]) {\r\n        var parts = strTrim(theValue)[_DYN_SPLIT /* @min:%2esplit */](\";\");\r\n        arrForEach(parts, function (thePart) {\r\n            thePart = strTrim(thePart || STR_EMPTY);\r\n            if (thePart) {\r\n                var idx = strIndexOf(thePart, \"=\");\r\n                if (idx === -1) {\r\n                    values[thePart] = null;\r\n                }\r\n                else {\r\n                    values[strTrim(strLeft(thePart, idx))] = strTrim(strSubstring(thePart, idx + 1));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return values;\r\n}\r\nfunction _formatDate(theDate, func) {\r\n    if (isFunction(theDate[func])) {\r\n        return theDate[func]();\r\n    }\r\n    return null;\r\n}\r\nfunction _formatCookieValue(value, values) {\r\n    var cookieValue = value || STR_EMPTY;\r\n    objForEachKey(values, function (name, theValue) {\r\n        cookieValue += \"; \" + name + (!isNullOrUndefined(theValue) ? \"=\" + theValue : STR_EMPTY);\r\n    });\r\n    return cookieValue;\r\n}\r\nfunction _getCookieValue(name) {\r\n    var cookieValue = STR_EMPTY;\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        var theCookie = _doc.v[strCookie] || STR_EMPTY;\r\n        if (_parsedCookieValue !== theCookie) {\r\n            _cookieCache = _extractParts(theCookie);\r\n            _parsedCookieValue = theCookie;\r\n        }\r\n        cookieValue = strTrim(_cookieCache[name] || STR_EMPTY);\r\n    }\r\n    return cookieValue;\r\n}\r\nfunction _setCookieValue(name, cookieValue) {\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        _doc.v[strCookie] = name + \"=\" + cookieValue;\r\n    }\r\n}\r\nexport function uaDisallowsSameSiteNone(userAgent) {\r\n    if (!isString(userAgent)) {\r\n        return false;\r\n    }\r\n    // Cover all iOS based browsers here. This includes:\r\n    // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n    // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n    if (strContains(userAgent, \"CPU iPhone OS 12\") || strContains(userAgent, \"iPad; CPU OS 12\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n    // - Safari on Mac OS X\r\n    // This does not include:\r\n    // - Internal browser on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strContains(userAgent, \"Version/\") && strContains(userAgent, \"Safari\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n    // - Internal browser on Mac OS X\r\n    // This does not include:\r\n    // - Safari on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strEndsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n        return true;\r\n    }\r\n    // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n    // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n    // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n    if (strContains(userAgent, \"Chrome/5\") || strContains(userAgent, \"Chrome/6\")) {\r\n        return true;\r\n    }\r\n    // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n    // that don't specify their Chrome version as lacking support for SameSite=None.\r\n    if (strContains(userAgent, \"UnrealEngine\") && !strContains(userAgent, \"Chrome\")) {\r\n        return true;\r\n    }\r\n    // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n    // NB: this rule isn't complete - you need regex to make a complete rule.\r\n    // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n    if (strContains(userAgent, \"UCBrowser/12\") || strContains(userAgent, \"UCBrowser/11\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=CookieMgr.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createAllPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, arrIndexOf, objDefine, safe, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_DATA, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SPLICE, _DYN_UNLOAD, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_OFFLINE_DROP, STR_OFFLINE_SENT, STR_OFFLINE_STORE, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar defaultValues = {\r\n    perfEvtsSendAll: false\r\n};\r\nfunction _runScheduledListeners(asyncNotifications) {\r\n    asyncNotifications.h = null;\r\n    var callbacks = asyncNotifications.cb;\r\n    asyncNotifications.cb = [];\r\n    arrForEach(callbacks, function (cb) {\r\n        // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n        safe(cb.fn, [cb.arg]);\r\n    });\r\n}\r\n// This function is used to combine the logic of running the listeners and handling the async notifications so that they don't\r\n// create multiple timers if there are multiple async listeners.\r\nfunction _runListeners(listeners, name, asyncNotifications, callback) {\r\n    arrForEach(listeners, function (listener) {\r\n        if (listener && listener[name]) {\r\n            if (asyncNotifications) {\r\n                // Schedule the callback to be called after the current call stack has cleared.\r\n                asyncNotifications.cb[_DYN_PUSH /* @min:%2epush */]({\r\n                    fn: callback,\r\n                    arg: listener\r\n                });\r\n                asyncNotifications.h = asyncNotifications.h || scheduleTimeout(_runScheduledListeners, 0, asyncNotifications);\r\n            }\r\n            else {\r\n                // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n                safe(callback, [listener]);\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager(config) {\r\n        this.listeners = [];\r\n        var perfEvtsSendAll;\r\n        var unloadHandler;\r\n        var _listeners = [];\r\n        var _asyncNotifications = {\r\n            h: null,\r\n            cb: []\r\n        };\r\n        var cfgHandler = createDynamicConfig(config, defaultValues);\r\n        unloadHandler = cfgHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n            perfEvtsSendAll = !!details.cfg.perfEvtsSendAll;\r\n        });\r\n        dynamicProto(NotificationManager, this, function (_self) {\r\n            objDefine(_self, \"listeners\", {\r\n                g: function () { return _listeners; }\r\n            });\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _listeners[_DYN_PUSH /* @min:%2epush */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - AWTNotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                var index = arrIndexOf(_listeners, listener);\r\n                while (index > -1) {\r\n                    _listeners[_DYN_SPLICE /* @min:%2esplice */](index, 1);\r\n                    index = arrIndexOf(_listeners, listener);\r\n                }\r\n            };\r\n            /**\r\n             * Notification for events sent.\r\n             * @param events - The array of events that have been sent.\r\n             */\r\n            _self[STR_EVENTS_SENT /* @min:%2eeventsSent */] = function (events) {\r\n                _runListeners(_listeners, STR_EVENTS_SENT, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_SENT /* @min:%2eeventsSent */](events);\r\n                });\r\n            };\r\n            /**\r\n             * Notification for events being discarded.\r\n             * @param events - The array of events that have been discarded by the SDK.\r\n             * @param reason - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n             * constant should be used to check the different values.\r\n             */\r\n            _self[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */] = function (events, reason) {\r\n                _runListeners(_listeners, STR_EVENTS_DISCARDED, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */](events, reason);\r\n                });\r\n            };\r\n            /**\r\n             * [Optional] A function called when the events have been requested to be sent to the sever.\r\n             * @param sendReason - The reason why the event batch is being sent.\r\n             * @param isAsync - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n             */\r\n            _self[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */] = function (sendReason, isAsync) {\r\n                _runListeners(_listeners, STR_EVENTS_SEND_REQUEST, isAsync ? _asyncNotifications : null, function (listener) {\r\n                    listener[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendReason, isAsync);\r\n                });\r\n            };\r\n            _self[STR_PERF_EVENT /* @min:%2eperfEvent */] = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    // Send all events or only parent events\r\n                    if (perfEvtsSendAll || !perfEvent[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */]()) {\r\n                        _runListeners(_listeners, STR_PERF_EVENT, null, function (listener) {\r\n                            if (perfEvent[_DYN_IS_ASYNC /* @min:%2eisAsync */]) {\r\n                                scheduleTimeout(function () { return listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent); }, 0);\r\n                            }\r\n                            else {\r\n                                listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */] = function (events) {\r\n                if (events && events[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_STORE, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */](events);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */] = function (batch) {\r\n                if (batch && batch[_DYN_DATA /* @min:%2edata */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_SENT, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */](batch);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */] = function (cnt, reason) {\r\n                if (cnt > 0) {\r\n                    var rn_1 = reason || 0; // default is unknown\r\n                    _runListeners(_listeners, STR_OFFLINE_DROP, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */](cnt, rn_1);\r\n                    });\r\n                }\r\n            };\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                var _finishUnload = function () {\r\n                    unloadHandler && unloadHandler.rm();\r\n                    unloadHandler = null;\r\n                    _listeners = [];\r\n                    // Clear any async listener\r\n                    _asyncNotifications.h && _asyncNotifications.h[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                    _asyncNotifications.h = null;\r\n                    _asyncNotifications.cb = [];\r\n                };\r\n                var waiting;\r\n                _runListeners(_listeners, \"unload\", null, function (listener) {\r\n                    var asyncUnload = listener[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n                    if (asyncUnload) {\r\n                        if (!waiting) {\r\n                            waiting = [];\r\n                        }\r\n                        waiting[_DYN_PUSH /* @min:%2epush */](asyncUnload);\r\n                    }\r\n                });\r\n                if (waiting) {\r\n                    return createPromise(function (resolve) {\r\n                        return doAwaitResponse(createAllPromise(waiting), function () {\r\n                            _finishUnload();\r\n                            resolve();\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    _finishUnload();\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for NotificationManager.prototype.addNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.removeNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.eventsSent.\r\n// Removed Stub for NotificationManager.prototype.eventsDiscarded.\r\n// Removed Stub for NotificationManager.prototype.eventsSendRequest.\r\n// Removed Stub for NotificationManager.prototype.perfEvent.\r\n// Removed Stub for NotificationManager.prototype.unload.\r\n// Removed Stub for NotificationManager.prototype.offlineEventsStored.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchSent.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchDrop.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    NotificationManager.__ieDyn=1;\n\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isArray, isFunction, objDefine, utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_COMPLETE, _DYN_GET_CTX, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_CTX, _DYN_TIME } from \"../__DynamicConstants\";\r\nimport { STR_GET_PERF_MGR, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar strParentContextKey = \"ParentContextKey\";\r\nvar strChildrenContextKey = \"ChildrenContextKey\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        _self.start = utcNow();\r\n        _self[_DYN_NAME /* @min:%2ename */] = name;\r\n        _self[_DYN_IS_ASYNC /* @min:%2eisAsync */] = isAsync;\r\n        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            objDefine(_self, \"payload\", {\r\n                g: function () {\r\n                    // Delay the execution of the payloadDetails until needed\r\n                    if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                        theDetails_1 = payloadDetails();\r\n                        // clear it out now so the referenced objects can be garbage collected\r\n                        payloadDetails = null;\r\n                    }\r\n                    return theDetails_1;\r\n                }\r\n            });\r\n        }\r\n        _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey] || key === PerfEvent[strChildrenContextKey]) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey]) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent[strChildrenContextKey]) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt[_DYN_TIME /* @min:%2etime */];\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN_TIME /* @min:%2etime */] = utcNow() - _self.start;\r\n            _self.exTime = _self[_DYN_TIME /* @min:%2etime */] - childTime;\r\n            _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () { };\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent[_DYN_COMPLETE /* @min:%2ecomplete */]();\r\n                    if (manager && isFunction(manager[STR_PERF_EVENT /* @min:%2eperfEvent */])) {\r\n                        manager[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PerfManager.__ieDyn=1;\n\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr[STR_GET_PERF_MGR]) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[STR_GET_PERF_MGR]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr[_DYN_GET_CTX /* @min:%2egetCtx */](doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                        perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strParentContextKey], currentActive);\r\n                        if (currentActive[_DYN_GET_CTX /* @min:%2egetCtx */] && currentActive[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                            var children = currentActive[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strChildrenContextKey], children);\r\n                            }\r\n                            children[_DYN_PUSH /* @min:%2epush */](perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                    perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { random32 } from \"./RandomHelper\";\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\nexport function newGuid() {\r\n    var uuid = generateW3CId();\r\n    return strSubstring(uuid, 0, 8) + \"-\" + strSubstring(uuid, 8, 12) + \"-\" + strSubstring(uuid, 12, 16) + \"-\" + strSubstring(uuid, 16, 20) + \"-\" + strSubstring(uuid, 20);\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    if (value && search) {\r\n        var len = value[_DYN_LENGTH /* @min:%2elength */];\r\n        var start = len - search[_DYN_LENGTH /* @min:%2elength */];\r\n        return strSubstring(value, start >= 0 ? start : 0, len) === search;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * generate W3C trace id\r\n */\r\nexport function generateW3CId() {\r\n    var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n    // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n    var oct = STR_EMPTY, tmp;\r\n    for (var a = 0; a < 4; a++) {\r\n        tmp = random32();\r\n        oct +=\r\n            hexValues[tmp & 0xF] +\r\n                hexValues[tmp >> 4 & 0xF] +\r\n                hexValues[tmp >> 8 & 0xF] +\r\n                hexValues[tmp >> 12 & 0xF] +\r\n                hexValues[tmp >> 16 & 0xF] +\r\n                hexValues[tmp >> 20 & 0xF] +\r\n                hexValues[tmp >> 24 & 0xF] +\r\n                hexValues[tmp >> 28 & 0xF];\r\n    }\r\n    // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n    var clockSequenceHi = hexValues[8 + (random32() & 0x03) | 0];\r\n    return strSubstr(oct, 0, 8) + strSubstr(oct, 9, 4) + \"4\" + strSubstr(oct, 13, 3) + clockSequenceHi + strSubstr(oct, 16, 3) + strSubstr(oct, 19, 12);\r\n}\r\n//# sourceMappingURL=CoreUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { isArray, isString, strLeft, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_SPAN_ID, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_VERSION } from \"../__DynamicConstants\";\r\nimport { generateW3CId } from \"./CoreUtils\";\r\nimport { findMetaTag, findNamedServerTiming } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// using {0,16} for leading and trailing whitespace just to constrain the possible runtime of a random string\r\nvar TRACE_PARENT_REGEX = /^([\\da-f]{2})-([\\da-f]{32})-([\\da-f]{16})-([\\da-f]{2})(-[^\\s]{1,64})?$/i;\r\nvar DEFAULT_VERSION = \"00\";\r\nvar INVALID_VERSION = \"ff\";\r\nvar INVALID_TRACE_ID = \"00000000000000000000000000000000\";\r\nvar INVALID_SPAN_ID = \"0000000000000000\";\r\nvar SAMPLED_FLAG = 0x01;\r\nfunction _isValid(value, len, invalidValue) {\r\n    if (value && value[_DYN_LENGTH /* @min:%2elength */] === len && value !== invalidValue) {\r\n        return !!value.match(/^[\\da-f]*$/i);\r\n    }\r\n    return false;\r\n}\r\nfunction _formatValue(value, len, defValue) {\r\n    if (_isValid(value, len)) {\r\n        return value;\r\n    }\r\n    return defValue;\r\n}\r\nfunction _formatFlags(value) {\r\n    if (isNaN(value) || value < 0 || value > 255) {\r\n        value = 0x01;\r\n    }\r\n    var result = value.toString(16);\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < 2) {\r\n        result = \"0\" + result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Create a new ITraceParent instance using the provided values.\r\n * @param traceId - The traceId to use, when invalid a new random W3C id will be generated.\r\n * @param spanId - The parent/span id to use, a new random value will be generated if it is invalid.\r\n * @param flags - The traceFlags to use, defaults to zero (0) if not supplied or invalid\r\n * @param version - The version to used, defaults to version \"01\" if not supplied or invalid.\r\n * @returns\r\n */\r\nexport function createTraceParent(traceId, spanId, flags, version) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_VERSION /* @min:version */] = _isValid(version, 2, INVALID_VERSION) ? version : DEFAULT_VERSION,\r\n        _a[_DYN_TRACE_ID /* @min:traceId */] = isValidTraceId(traceId) ? traceId : generateW3CId(),\r\n        _a[_DYN_SPAN_ID /* @min:spanId */] = isValidSpanId(spanId) ? spanId : strLeft(generateW3CId(), 16),\r\n        _a.traceFlags = flags >= 0 && flags <= 0xFF ? flags : 1,\r\n        _a;\r\n}\r\n/**\r\n * Attempt to parse the provided string as a W3C TraceParent header value (https://www.w3.org/TR/trace-context/#traceparent-header)\r\n *\r\n * @param value - The value to be parsed\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function parseTraceParent(value, selectIdx) {\r\n    var _a;\r\n    if (!value) {\r\n        // Don't pass a null/undefined or empty string\r\n        return null;\r\n    }\r\n    if (isArray(value)) {\r\n        // The value may have been encoded on the page into an array so handle this automatically\r\n        value = value[0] || \"\";\r\n    }\r\n    if (!value || !isString(value) || value[_DYN_LENGTH /* @min:%2elength */] > 8192) {\r\n        // limit potential processing based on total length\r\n        return null;\r\n    }\r\n    if (value.indexOf(\",\") !== -1) {\r\n        var values = value[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        value = values[selectIdx > 0 && values[_DYN_LENGTH /* @min:%2elength */] > selectIdx ? selectIdx : 0];\r\n    }\r\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\r\n    var match = TRACE_PARENT_REGEX.exec(strTrim(value));\r\n    if (!match || // No match\r\n        match[1] === INVALID_VERSION || // version ff is forbidden\r\n        match[2] === INVALID_TRACE_ID || // All zeros is considered to be invalid\r\n        match[3] === INVALID_SPAN_ID) { // All zeros is considered to be invalid\r\n        return null;\r\n    }\r\n    return _a = {\r\n            version: (match[1] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            traceId: (match[2] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            spanId: (match[3] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()\r\n        },\r\n        _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = parseInt(match[4], 16),\r\n        _a;\r\n}\r\n/**\r\n * Is the provided W3c Trace Id a valid string representation, it must be a 32-character string\r\n * of lowercase hexadecimal characters for example, 4bf92f3577b34da6a3ce929d0e0e4736.\r\n * If all characters as zero (00000000000000000000000000000000) it will be considered an invalid value.\r\n * @param value - The W3c trace Id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidTraceId(value) {\r\n    return _isValid(value, 32, INVALID_TRACE_ID);\r\n}\r\n/**\r\n * Is the provided W3c span id (aka. parent id) a valid string representation, it must be a 16-character\r\n * string of lowercase hexadecimal characters, for example, 00f067aa0ba902b7.\r\n * If all characters are zero (0000000000000000) this is considered an invalid value.\r\n * @param value - The W3c span id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidSpanId(value) {\r\n    return _isValid(value, 16, INVALID_SPAN_ID);\r\n}\r\n/**\r\n * Validates that the provided ITraceParent instance conforms to the currently supported specifications\r\n * @param value\r\n * @returns\r\n */\r\nexport function isValidTraceParent(value) {\r\n    if (!value ||\r\n        !_isValid(value[_DYN_VERSION /* @min:%2eversion */], 2, INVALID_VERSION) ||\r\n        !_isValid(value[_DYN_TRACE_ID /* @min:%2etraceId */], 32, INVALID_TRACE_ID) ||\r\n        !_isValid(value[_DYN_SPAN_ID /* @min:%2espanId */], 16, INVALID_SPAN_ID) ||\r\n        !_isValid(_formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]), 2)) {\r\n        // Each known field must contain a valid value\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Is the parsed traceParent indicating that the trace is currently sampled.\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function isSampledFlag(value) {\r\n    if (isValidTraceParent(value)) {\r\n        return (value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] & SAMPLED_FLAG) === SAMPLED_FLAG;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Format the ITraceParent value as a string using the supported and know version formats.\r\n * So even if the passed traceParent is a later version the string value returned from this\r\n * function will convert it to only the known version formats.\r\n * This currently only supports version \"00\" and invalid \"ff\"\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function formatTraceParent(value) {\r\n    if (value) {\r\n        // Special Note: This only supports formatting as version 00, future versions should encode any known supported version\r\n        // So parsing a future version will populate the correct version value but reformatting will reduce it to version 00.\r\n        var flags = _formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]);\r\n        if (!_isValid(flags, 2)) {\r\n            flags = \"01\";\r\n        }\r\n        var version = value[_DYN_VERSION /* @min:%2eversion */] || DEFAULT_VERSION;\r\n        if (version !== \"00\" && version !== \"ff\") {\r\n            // Reduce version to \"00\"\r\n            version = DEFAULT_VERSION;\r\n        }\r\n        // Format as version 00\r\n        return \"\".concat(version.toLowerCase(), \"-\").concat(_formatValue(value.traceId, 32, INVALID_TRACE_ID).toLowerCase(), \"-\").concat(_formatValue(value.spanId, 16, INVALID_SPAN_ID).toLowerCase(), \"-\").concat(flags.toLowerCase());\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Helper function to fetch the passed traceparent from the page, looking for it as a meta-tag or a Server-Timing header.\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function findW3cTraceParent(selectIdx) {\r\n    var name = \"traceparent\";\r\n    var traceParent = parseTraceParent(findMetaTag(name), selectIdx);\r\n    if (!traceParent) {\r\n        traceParent = parseTraceParent(findNamedServerTiming(name), selectIdx);\r\n    }\r\n    return traceParent;\r\n}\r\n//# sourceMappingURL=W3cTraceParent.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, isFunction } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_SPAN_ID, _DYN_TEARDOWN, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { createElmNodeData } from \"./DataCacheHelper\";\r\nimport { STR_CORE, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { isValidSpanId, isValidTraceId } from \"./W3cTraceParent\";\r\nvar pluginStateData = createElmNodeData(\"plugin\");\r\nexport function _getPluginState(plugin) {\r\n    return pluginStateData.get(plugin, \"state\", {}, true);\r\n}\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config - The current config for the instance\r\n * @param core - THe current core instance\r\n * @param extensions - The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    var pluginState;\r\n    while (proxy) {\r\n        var thePlugin = proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n        if (thePlugin) {\r\n            if (lastPlugin && lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] && thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](thePlugin);\r\n            }\r\n            pluginState = _getPluginState(thePlugin);\r\n            var isInitialized = !!pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */];\r\n            if (thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]) {\r\n                isInitialized = thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]();\r\n            }\r\n            if (!isInitialized) {\r\n                initPlugins[_DYN_PUSH /* @min:%2epush */](thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n        }\r\n    }\r\n    // Now initialize the plugins\r\n    arrForEach(initPlugins, function (thePlugin) {\r\n        var core = processContext[STR_CORE /* @min:%2ecore */]();\r\n        thePlugin[_DYN_INITIALIZE /* @min:%2einitialize */](processContext.getCfg(), core, extensions, processContext[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n        pluginState = _getPluginState(thePlugin);\r\n        // Only add the core to the state if the plugin didn't set it (doesn't extend from BaseTelemetryPlugin)\r\n        if (!thePlugin[STR_CORE] && !pluginState[STR_CORE]) {\r\n            pluginState[STR_CORE] = core;\r\n        }\r\n        pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = true;\r\n        delete pluginState[_DYN_TEARDOWN /* @min:%2eteardown */];\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        if (extB) {\r\n            var bHasProcess = extB[STR_PROCESS_TELEMETRY];\r\n            if (extA[STR_PROCESS_TELEMETRY]) {\r\n                result = bHasProcess ? extA[STR_PRIORITY] - extB[STR_PRIORITY] : 1;\r\n            }\r\n            else if (bHasProcess) {\r\n                result = -1;\r\n            }\r\n        }\r\n        else {\r\n            result = extA ? 1 : -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete\r\n}\r\n/**\r\n * Teardown / Unload helper to perform teardown/unloading operations for the provided components synchronously or asynchronously, this will call any\r\n * _doTeardown() or _doUnload() functions on the provided components to allow them to finish removal.\r\n * @param components - The components you want to unload\r\n * @param unloadCtx - This is the context that should be used during unloading.\r\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\r\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\r\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\r\n */\r\nexport function unloadComponents(components, unloadCtx, unloadState, asyncCallback) {\r\n    var idx = 0;\r\n    function _doUnload() {\r\n        while (idx < components[_DYN_LENGTH /* @min:%2elength */]) {\r\n            var component = components[idx++];\r\n            if (component) {\r\n                var func = component._doUnload || component[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */];\r\n                if (isFunction(func)) {\r\n                    if (func.call(component, unloadCtx, unloadState, _doUnload) === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return _doUnload();\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext which optionally also \"sets\" the value on a parent\r\n * @param parentCtx - An optional parent distributed trace instance\r\n * @returns A new IDistributedTraceContext instance that uses an internal temporary object\r\n */\r\nexport function createDistributedTraceContext(parentCtx) {\r\n    var trace = {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace[_DYN_TRACE_ID /* @min:%2etraceId */];\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace[_DYN_TRACE_ID /* @min:%2etraceId */] = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace[_DYN_SPAN_ID /* @min:%2espanId */];\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace[_DYN_SPAN_ID /* @min:%2espanId */] = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, dumpObj, isArray, isFunction, isNullOrUndefined, isUndefined, objForEachKey, objFreeze, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _applyDefaultValue } from \"../Config/ConfigDefaults\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_IDENTIFIER, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_DF, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UNLOAD, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nimport { _throwInternal, safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { proxyFunctions } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_DISABLED, STR_EMPTY, STR_EXTENSION_CONFIG, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _getPluginState } from \"./TelemetryHelpers\";\r\nvar strTelemetryPluginChain = \"TelemetryPluginChain\";\r\nvar strHasRunFlags = \"_hasRun\";\r\nvar strGetTelCtx = \"_getTelCtx\";\r\nvar _chainId = 0;\r\nfunction _getNextProxyStart(proxy, core, startAt) {\r\n    while (proxy) {\r\n        if (proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]() === startAt) {\r\n            return proxy;\r\n        }\r\n        proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    }\r\n    // This wasn't found in the existing chain so create an isolated one with just this plugin\r\n    return createTelemetryProxyChain([startAt], core.config || {}, core);\r\n}\r\n/**\r\n * @ignore\r\n * @param telemetryChain\r\n * @param dynamicHandler\r\n * @param core\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n * @returns\r\n */\r\nfunction _createInternalContext(telemetryChain, dynamicHandler, core, startAt) {\r\n    // We have a special case where we want to start execution from this specific plugin\r\n    // or we simply reuse the existing telemetry plugin chain (normal execution case)\r\n    var _nextProxy = null; // By Default set as no next plugin\r\n    var _onComplete = [];\r\n    if (!dynamicHandler) {\r\n        dynamicHandler = createDynamicConfig({}, null, core[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    if (startAt !== null) {\r\n        // There is no next element (null) vs not defined (undefined) so use the full chain\r\n        _nextProxy = startAt ? _getNextProxyStart(telemetryChain, core, startAt) : telemetryChain;\r\n    }\r\n    var context = {\r\n        _next: _moveNext,\r\n        ctx: {\r\n            core: function () {\r\n                return core;\r\n            },\r\n            diagLog: function () {\r\n                return safeGetLogger(core, dynamicHandler.cfg);\r\n            },\r\n            getCfg: function () {\r\n                return dynamicHandler.cfg;\r\n            },\r\n            getExtCfg: _resolveExtCfg,\r\n            getConfig: _getConfig,\r\n            hasNext: function () {\r\n                return !!_nextProxy;\r\n            },\r\n            getNext: function () {\r\n                return _nextProxy;\r\n            },\r\n            setNext: function (nextPlugin) {\r\n                _nextProxy = nextPlugin;\r\n            },\r\n            iterate: _iterateChain,\r\n            onComplete: _addOnComplete\r\n        }\r\n    };\r\n    function _addOnComplete(onComplete, that) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (onComplete) {\r\n            _onComplete[_DYN_PUSH /* @min:%2epush */]({\r\n                func: onComplete,\r\n                self: !isUndefined(that) ? that : context.ctx,\r\n                args: args\r\n            });\r\n        }\r\n    }\r\n    function _moveNext() {\r\n        var nextProxy = _nextProxy;\r\n        // Automatically move to the next plugin\r\n        _nextProxy = nextProxy ? nextProxy[_DYN_GET_NEXT /* @min:%2egetNext */]() : null;\r\n        if (!nextProxy) {\r\n            var onComplete = _onComplete;\r\n            if (onComplete && onComplete[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                arrForEach(onComplete, function (completeDetails) {\r\n                    try {\r\n                        completeDetails.func.call(completeDetails.self, completeDetails.args);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(core[_DYN_LOGGER /* @min:%2elogger */], 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected Exception during onComplete - \" + dumpObj(e));\r\n                    }\r\n                });\r\n                _onComplete = [];\r\n            }\r\n        }\r\n        return nextProxy;\r\n    }\r\n    function _getExtCfg(identifier, createIfMissing) {\r\n        var idCfg = null;\r\n        var cfg = dynamicHandler.cfg;\r\n        if (cfg && identifier) {\r\n            var extCfg = cfg[STR_EXTENSION_CONFIG /* @min:%2eextensionConfig */];\r\n            if (!extCfg && createIfMissing) {\r\n                extCfg = {};\r\n            }\r\n            // Always set the value so that the property always exists\r\n            cfg[STR_EXTENSION_CONFIG] = extCfg; // Note: it is valid for the \"value\" to be undefined\r\n            // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n            extCfg = dynamicHandler.ref(cfg, STR_EXTENSION_CONFIG);\r\n            if (extCfg) {\r\n                idCfg = extCfg[identifier];\r\n                if (!idCfg && createIfMissing) {\r\n                    idCfg = {};\r\n                }\r\n                // Always set the value so that the property always exists\r\n                extCfg[identifier] = idCfg; // Note: it is valid for the \"value\" to be undefined\r\n                // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n                idCfg = dynamicHandler.ref(extCfg, identifier);\r\n            }\r\n        }\r\n        return idCfg;\r\n    }\r\n    function _resolveExtCfg(identifier, defaultValues) {\r\n        var newConfig = _getExtCfg(identifier, true);\r\n        if (defaultValues) {\r\n            // Enumerate over the defaultValues and if not already populated attempt to\r\n            // find a value from the root config or use the default value\r\n            objForEachKey(defaultValues, function (field, defaultValue) {\r\n                // for each unspecified field, set the default value\r\n                if (isNullOrUndefined(newConfig[field])) {\r\n                    var cfgValue = dynamicHandler.cfg[field];\r\n                    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n                        newConfig[field] = cfgValue;\r\n                    }\r\n                }\r\n                _applyDefaultValue(dynamicHandler, newConfig, field, defaultValue);\r\n            });\r\n        }\r\n        return dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](newConfig, defaultValues);\r\n    }\r\n    function _getConfig(identifier, field, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var theValue;\r\n        var extConfig = _getExtCfg(identifier, false);\r\n        var rootConfig = dynamicHandler.cfg;\r\n        if (extConfig && (extConfig[field] || !isNullOrUndefined(extConfig[field]))) {\r\n            theValue = extConfig[field];\r\n        }\r\n        else if (rootConfig[field] || !isNullOrUndefined(rootConfig[field])) {\r\n            theValue = rootConfig[field];\r\n        }\r\n        return (theValue || !isNullOrUndefined(theValue)) ? theValue : defaultValue;\r\n    }\r\n    function _iterateChain(cb) {\r\n        // Keep processing until we reach the end of the chain\r\n        var nextPlugin;\r\n        while (!!(nextPlugin = context._next())) {\r\n            var plugin = nextPlugin[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n            if (plugin) {\r\n                // callback with the current on\r\n                cb(plugin);\r\n            }\r\n        }\r\n    }\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryContext(telemetryChain, cfg, core, startAt) {\r\n    var config = createDynamicConfig(cfg);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(env) {\r\n        var nextPlugin = internalContext._next();\r\n        if (nextPlugin) {\r\n            // Run the next plugin which will call \"processNext()\"\r\n            nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, context);\r\n        }\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), config.cfg, core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for handling the unloading of the chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUnloadContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(unloadState) {\r\n        var nextPlugin = internalContext._next();\r\n        nextPlugin && nextPlugin[_DYN_UNLOAD /* @min:%2eunload */](context, unloadState);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUnloadContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for updating the configuration\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUpdateContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(updateState) {\r\n        return context.iterate(function (plugin) {\r\n            if (isFunction(plugin[_DYN_UPDATE /* @min:%2eupdate */])) {\r\n                plugin[_DYN_UPDATE /* @min:%2eupdate */](context, updateState);\r\n            }\r\n        });\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUpdateContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates an execution chain from the array of plugins\r\n * @param plugins - The array of plugins that will be executed in this order\r\n * @param defItemCtx - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n */\r\nexport function createTelemetryProxyChain(plugins, config, core, startAt) {\r\n    var firstProxy = null;\r\n    var add = startAt ? false : true;\r\n    if (isArray(plugins) && plugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy_1 = null;\r\n        arrForEach(plugins, function (thePlugin) {\r\n            if (!add && startAt === thePlugin) {\r\n                add = true;\r\n            }\r\n            if (add && thePlugin && isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Only add plugins that are processors\r\n                var newProxy = createTelemetryPluginProxy(thePlugin, config, core);\r\n                if (!firstProxy) {\r\n                    firstProxy = newProxy;\r\n                }\r\n                if (lastProxy_1) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy_1._setNext(newProxy);\r\n                }\r\n                lastProxy_1 = newProxy;\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !firstProxy) {\r\n        // Special case where the \"startAt\" was not in the original list of plugins\r\n        return createTelemetryProxyChain([startAt], config, core);\r\n    }\r\n    return firstProxy;\r\n}\r\n/**\r\n * Create the processing telemetry proxy instance, the proxy is used to abstract the current plugin to allow monitoring and\r\n * execution plugins while passing around the dynamic execution state (IProcessTelemetryContext), the proxy instance no longer\r\n * contains any execution state and can be reused between requests (this was not the case for 2.7.2 and earlier with the\r\n * TelemetryPluginChain class).\r\n * @param plugin - The plugin instance to proxy\r\n * @param config - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n * @returns\r\n */\r\nexport function createTelemetryPluginProxy(plugin, config, core) {\r\n    var nextProxy = null;\r\n    var hasProcessTelemetry = isFunction(plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]);\r\n    var hasSetNext = isFunction(plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]);\r\n    var chainId;\r\n    if (plugin) {\r\n        chainId = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"-\" + plugin[STR_PRIORITY /* @min:%2epriority */] + \"-\" + _chainId++;\r\n    }\r\n    else {\r\n        chainId = \"Unknown-0-\" + _chainId++;\r\n    }\r\n    var proxyChain = {\r\n        getPlugin: function () {\r\n            return plugin;\r\n        },\r\n        getNext: function () {\r\n            return nextProxy;\r\n        },\r\n        processTelemetry: _processTelemetry,\r\n        unload: _unloadPlugin,\r\n        update: _updatePlugin,\r\n        _id: chainId,\r\n        _setNext: function (nextPlugin) {\r\n            nextProxy = nextPlugin;\r\n        }\r\n    };\r\n    function _getTelCtx() {\r\n        var itemCtx;\r\n        // Looks like a plugin didn't pass the (optional) context, so create a new one\r\n        if (plugin && isFunction(plugin[strGetTelCtx])) {\r\n            // This plugin extends from the BaseTelemetryPlugin so lets use it\r\n            itemCtx = plugin[strGetTelCtx]();\r\n        }\r\n        if (!itemCtx) {\r\n            // Create a temporary one\r\n            itemCtx = createProcessTelemetryContext(proxyChain, config, core);\r\n        }\r\n        return itemCtx;\r\n    }\r\n    function _processChain(itemCtx, processPluginFn, name, details, isAsync) {\r\n        var hasRun = false;\r\n        var identifier = plugin ? plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] : strTelemetryPluginChain;\r\n        var hasRunContext = itemCtx[strHasRunFlags];\r\n        if (!hasRunContext) {\r\n            // Assign and populate\r\n            hasRunContext = itemCtx[strHasRunFlags] = {};\r\n        }\r\n        // Ensure that we keep the context in sync\r\n        itemCtx.setNext(nextProxy);\r\n        if (plugin) {\r\n            doPerf(itemCtx[STR_CORE /* @min:%2ecore */](), function () { return identifier + \":\" + name; }, function () {\r\n                // Mark this component as having run\r\n                hasRunContext[chainId] = true;\r\n                try {\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    var nextId = nextProxy ? nextProxy._id : STR_EMPTY;\r\n                    if (nextId) {\r\n                        hasRunContext[nextId] = false;\r\n                    }\r\n                    hasRun = processPluginFn(itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasNextRun = nextProxy ? hasRunContext[nextProxy._id] : true;\r\n                    if (hasNextRun) {\r\n                        // The next plugin after us has already run so set this one as complete\r\n                        hasRun = true;\r\n                    }\r\n                    if (!nextProxy || !hasNextRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 73 /* _eInternalMessageId.PluginException */, \"Plugin [\" + identifier + \"] failed during \" + name + \" - \" + dumpObj(error) + \", run flags: \" + dumpObj(hasRunContext));\r\n                    }\r\n                }\r\n            }, details, isAsync);\r\n        }\r\n        return hasRun;\r\n    }\r\n    function _processTelemetry(env, itemCtx) {\r\n        itemCtx = itemCtx || _getTelCtx();\r\n        function _callProcessTelemetry(itemCtx) {\r\n            if (!plugin || !hasProcessTelemetry) {\r\n                return false;\r\n            }\r\n            var pluginState = _getPluginState(plugin);\r\n            if (pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] || pluginState[STR_DISABLED]) {\r\n                return false;\r\n            }\r\n            // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n            // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n            // other form of error occurred\r\n            if (hasSetNext) {\r\n                // Backward compatibility setting the next plugin on the instance\r\n                plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](nextProxy);\r\n            }\r\n            plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, itemCtx);\r\n            // Process Telemetry is expected to call itemCtx.processNext() or nextPlugin.processTelemetry()\r\n            return true;\r\n        }\r\n        if (!_processChain(itemCtx, _callProcessTelemetry, \"processTelemetry\", function () { return ({ item: env }); }, !(env.sync))) {\r\n            // The underlying plugin is either not defined, not enabled or does not have a processTelemetry implementation\r\n            // so we still want the next plugin to be executed.\r\n            itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n        }\r\n    }\r\n    function _unloadPlugin(unloadCtx, unloadState) {\r\n        function _callTeardown() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only teardown the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === unloadCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    // Handle plugins that don't extend from the BaseTelemetryPlugin\r\n                    pluginState[STR_CORE /* @min:%2ecore */] = null;\r\n                    pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] = true;\r\n                    pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = false;\r\n                    if (plugin[_DYN_TEARDOWN /* @min:%2eteardown */] && plugin[_DYN_TEARDOWN /* @min:%2eteardown */](unloadCtx, unloadState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(unloadCtx, _callTeardown, \"unload\", function () { }, unloadState[_DYN_IS_ASYNC /* @min:%2eisAsync */])) {\r\n            // Only called if we hasRun was not true\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n        }\r\n    }\r\n    function _updatePlugin(updateCtx, updateState) {\r\n        function _callUpdate() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only update the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === updateCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    if (plugin[_DYN_UPDATE /* @min:%2eupdate */] && plugin[_DYN_UPDATE /* @min:%2eupdate */](updateCtx, updateState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(updateCtx, _callUpdate, \"update\", function () { }, false)) {\r\n            // Only called if we hasRun was not true\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n        }\r\n    }\r\n    return objFreeze(proxyChain);\r\n}\r\n/**\r\n * This class will be removed!\r\n * @deprecated use createProcessTelemetryContext() instead\r\n */\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(pluginChain, config, core, startAt) {\r\n        var _self = this;\r\n        var context = createProcessTelemetryContext(pluginChain, config, core, startAt);\r\n        // Proxy all functions of the context to this object\r\n        proxyFunctions(_self, context, objKeys(context));\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isFunction, objDefine } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PROCESS_TEL_CONT2, _DYN_INITIALIZE, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_PROCESS_NEXT, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { isNotNullOrUndefined, proxyFunctionAs } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_EXTENSION_CONFIG, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext } from \"./ProcessTelemetryContext\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strGetPlugin = \"getPlugin\";\r\nvar defaultValues = (_a = {},\r\n    _a[STR_EXTENSION_CONFIG] = { isVal: isNotNullOrUndefined, v: {} },\r\n    _a);\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this; // Setting _self here as it's used outside of the dynamicProto as well\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _isinitialized;\r\n        var _rootCtx; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin; // Used for backward compatibility where plugins don't call the main pipeline\r\n        var _unloadHandlerContainer;\r\n        var _hookContainer;\r\n        _initDefaults();\r\n        dynamicProto(BaseTelemetryPlugin, _self, function (_self) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                _setDefaults(config, core, pluginChain);\r\n                _isinitialized = true;\r\n            };\r\n            _self[_DYN_TEARDOWN /* @min:%2eteardown */] = function (unloadCtx, unloadState) {\r\n                var _a;\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (unloadCtx && core !== unloadCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing as either the plugin is not initialized or was not initialized by the current core\r\n                    return;\r\n                }\r\n                var result;\r\n                var unloadDone = false;\r\n                var theUnloadCtx = unloadCtx || createProcessTelemetryUnloadContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUnloadState = unloadState || (_a = {\r\n                        reason: 0 /* TelemetryUnloadReason.ManualTeardown */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = false,\r\n                    _a);\r\n                function _unloadCallback() {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _unloadHandlerContainer.run(theUnloadCtx, unloadState);\r\n                        _hookContainer.run(theUnloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]());\r\n                        if (result === true) {\r\n                            theUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n                        }\r\n                        _initDefaults();\r\n                    }\r\n                }\r\n                if (!_self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] || _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */](theUnloadCtx, theUnloadState, _unloadCallback) !== true) {\r\n                    _unloadCallback();\r\n                }\r\n                else {\r\n                    // Tell the caller that we will be calling processNext()\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (updateCtx, updateState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (updateCtx && core !== updateCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing\r\n                    return;\r\n                }\r\n                var result;\r\n                var updateDone = false;\r\n                var theUpdateCtx = updateCtx || createProcessTelemetryUpdateContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUpdateState = updateState || {\r\n                    reason: 0 /* TelemetryUpdateReason.Unknown */\r\n                };\r\n                function _updateCallback() {\r\n                    if (!updateDone) {\r\n                        updateDone = true;\r\n                        _setDefaults(theUpdateCtx.getCfg(), theUpdateCtx.core(), theUpdateCtx[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n                    }\r\n                }\r\n                if (!_self._doUpdate || _self._doUpdate(theUpdateCtx, theUpdateState, _updateCallback) !== true) {\r\n                    _updateCallback();\r\n                }\r\n                else {\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            proxyFunctionAs(_self, \"_addUnloadCb\", function () { return _unloadHandlerContainer; }, \"add\");\r\n            proxyFunctionAs(_self, \"_addHook\", function () { return _hookContainer; }, \"add\");\r\n            objDefine(_self, \"_unloadHooks\", { g: function () { return _hookContainer; } });\r\n        });\r\n        // These are added after the dynamicProto so that are not moved to the prototype\r\n        _self[_DYN_DIAG_LOG /* @min:%2ediagLog */] = function (itemCtx) {\r\n            return _getTelCtx(itemCtx)[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n        };\r\n        _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = _getTelCtx;\r\n        function _getTelCtx(currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || createProcessTelemetryContext(null, {}, _self[STR_CORE /* @min:%2ecore */]);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        }\r\n        function _setDefaults(config, core, pluginChain) {\r\n            // Make sure the extensionConfig exists and the config is dynamic\r\n            createDynamicConfig(config, defaultValues, safeGetLogger(core));\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */]()[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self[STR_CORE /* @min:%2ecore */] = core;\r\n            _rootCtx = createProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n        }\r\n        function _initDefaults() {\r\n            _isinitialized = false;\r\n            _self[STR_CORE /* @min:%2ecore */] = null;\r\n            _rootCtx = null;\r\n            _nextPlugin = null;\r\n            _hookContainer = createUnloadHookContainer();\r\n            _unloadHandlerContainer = createUnloadHandlerContainer();\r\n        }\r\n    }\r\n// Removed Stub for BaseTelemetryPlugin.prototype.initialize.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.teardown.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.update.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addUnloadCb.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseTelemetryPlugin.__ieDyn=1;\n\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nvar _maxHooks;\r\nvar _hookAddMonitor;\r\n/**\r\n * Test hook for setting the maximum number of unload hooks and calling a monitor function when the hooks are added or removed\r\n * This allows for automatic test failure when the maximum number of unload hooks is exceeded\r\n * @param maxHooks - The maximum number of unload hooks\r\n * @param addMonitor - The monitor function to call when hooks are added or removed\r\n */\r\nexport function _testHookMaxUnloadHooksCb(maxHooks, addMonitor) {\r\n    _maxHooks = maxHooks;\r\n    _hookAddMonitor = addMonitor;\r\n}\r\n/**\r\n * Create a IUnloadHookContainer which can be used to remember unload hook functions to be executed during the component unloading\r\n * process.\r\n * @returns A new IUnloadHookContainer instance\r\n */\r\nexport function createUnloadHookContainer() {\r\n    var _hooks = [];\r\n    function _doUnload(logger) {\r\n        var oldHooks = _hooks;\r\n        _hooks = [];\r\n        // Remove all registered unload hooks\r\n        arrForEach(oldHooks, function (fn) {\r\n            // allow either rm or remove callback function\r\n            try {\r\n                (fn.rm || fn.remove).call(fn);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unloading:\" + dumpObj(e));\r\n            }\r\n        });\r\n        if (_maxHooks && oldHooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n            _hookAddMonitor ? _hookAddMonitor(\"doUnload\", oldHooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n        }\r\n    }\r\n    function _addHook(hooks) {\r\n        if (hooks) {\r\n            arrAppend(_hooks, hooks);\r\n            if (_maxHooks && _hooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n                _hookAddMonitor ? _hookAddMonitor(\"Add\", _hooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        run: _doUnload,\r\n        add: _addHook\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHookContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n// \r\n// \r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getExceptionName } from \"./HelperFuncs\";\r\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nfunction _addInitializer(_initializers, id, telemetryInitializer) {\r\n    var theInitializer = {\r\n        id: id,\r\n        fn: telemetryInitializer\r\n    };\r\n    arrAppend(_initializers, theInitializer);\r\n    var handler = {\r\n        remove: function () {\r\n            arrForEach(_initializers, function (initializer, idx) {\r\n                if (initializer.id === theInitializer.id) {\r\n                    _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    return handler;\r\n}\r\nfunction _runInitializers(_initializers, item, logger) {\r\n    var doNotSendItem = false;\r\n    var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\r\n    for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n        var telemetryInitializer = _initializers[i];\r\n        if (telemetryInitializer) {\r\n            try {\r\n                if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\r\n                    doNotSendItem = true;\r\n                    break;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // log error but dont stop executing rest of the telemetry initializers\r\n                // doNotSendItem = true;\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Telemetry initializer failed: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n            }\r\n        }\r\n    }\r\n    return !doNotSendItem;\r\n}\r\nvar TelemetryInitializerPlugin = /** @class */ (function (_super) {\r\n    __extends(TelemetryInitializerPlugin, _super);\r\n    function TelemetryInitializerPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"TelemetryInitializerPlugin\";\r\n        _this.priority = 199;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _id;\r\n        var _initializers;\r\n        _initDefaults();\r\n        dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\r\n            _self.addTelemetryInitializer = function (telemetryInitializer) {\r\n                return _addInitializer(_initializers, _id++, telemetryInitializer);\r\n            };\r\n            _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\r\n                if (_runInitializers(_initializers, item, itemCtx ? itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]() : _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]())) {\r\n                    _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\r\n                }\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\r\n                _initDefaults();\r\n            };\r\n        });\r\n        function _initDefaults() {\r\n            _id = 0;\r\n            _initializers = [];\r\n        }\r\n        return _this;\r\n    }\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    TelemetryInitializerPlugin.__ieDyn=1;\n\n    return TelemetryInitializerPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { TelemetryInitializerPlugin };\r\n//# sourceMappingURL=TelemetryInitializerPlugin.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport { __spreadArrayFn as __spreadArray } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise } from \"@nevware21/ts-async\";\r\nimport { arrAppend, arrForEach, arrIndexOf, createTimeout, deepExtend, hasDocument, isFunction, isNullOrUndefined, isPlainObject, objDeepFreeze, objDefine, objForEachKey, objFreeze, objHasOwn, scheduleTimeout, throwError } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_CREATE_NEW, _DYN_ENABLED, _DYN_GET_NOTIFY_MGR, _DYN_GET_PLUGIN, _DYN_GET_PROCESS_TEL_CONT2, _DYN_IDENTIFIER, _DYN_INITIALIZE, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_NAME, _DYN_NOTIFY, _DYN_ON_COMPLETE, _DYN_POLL_INTERNAL_LOGS, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SET_DF, _DYN_SPLICE, _DYN_STOP_POLLING_INTERNA3, _DYN_TEARDOWN, _DYN_TIME, _DYN_UNLOAD, _DYN_VERSION, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { doUnloadAll, runTargetUnload } from \"./AsyncUtils\";\r\nimport { ChannelControllerPriority } from \"./Constants\";\r\nimport { createCookieMgr } from \"./CookieMgr\";\r\nimport { createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { getDebugListener } from \"./DbgExtensionUtils\";\r\nimport { DiagnosticLogger, _InternalLogMessage, _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getSetValue, proxyFunctionAs, proxyFunctions, toISOString } from \"./HelperFuncs\";\r\nimport { STR_CHANNELS, STR_CORE, STR_CREATE_PERF_MGR, STR_DISABLED, STR_EMPTY, STR_EVENTS_DISCARDED, STR_EXTENSIONS, STR_EXTENSION_CONFIG, STR_GET_PERF_MGR, STR_PRIORITY, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { PerfManager, doPerf, getGblPerfMgr } from \"./PerfManager\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext, createTelemetryProxyChain } from \"./ProcessTelemetryContext\";\r\nimport { _getPluginState, createDistributedTraceContext, initializePlugins, sortPlugins } from \"./TelemetryHelpers\";\r\nimport { TelemetryInitializerPlugin } from \"./TelemetryInitializerPlugin\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strValidationError = \"Plugins must provide initialize method\";\r\nvar strNotificationManager = \"_notificationManager\";\r\nvar strSdkUnloadingError = \"SDK is still unloading...\";\r\nvar strSdkNotInitialized = \"SDK is not initialized\";\r\n// const strPluginUnloadFailed = \"Failed to unload plugin\";\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultConfig = objDeepFreeze((_a = {\r\n        cookieCfg: {}\r\n    },\r\n    _a[STR_EXTENSIONS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_CHANNELS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_EXTENSION_CONFIG] = { ref: true, v: {} },\r\n    _a[STR_CREATE_PERF_MGR] = UNDEFINED_VALUE,\r\n    _a.loggingLevelConsole = 0 /* eLoggingSeverity.DISABLED */,\r\n    _a.diagnosticLogInterval = UNDEFINED_VALUE,\r\n    _a));\r\n/**\r\n * Helper to create the default performance manager\r\n * @param core\r\n * @param notificationMgr\r\n */\r\nfunction _createPerfManager(core, notificationMgr) {\r\n    return new PerfManager(notificationMgr);\r\n}\r\nfunction _validateExtensions(logger, channelPriority, allExtensions) {\r\n    var _a;\r\n    // Concat all available extensions\r\n    var coreExtensions = [];\r\n    var channels = [];\r\n    // Check if any two extensions have the same priority, then warn to console\r\n    // And extract the local extensions from the\r\n    var extPriorities = {};\r\n    // Extension validation\r\n    arrForEach(allExtensions, function (ext) {\r\n        // Check for ext.initialize\r\n        if (isNullOrUndefined(ext) || isNullOrUndefined(ext[_DYN_INITIALIZE /* @min:%2einitialize */])) {\r\n            throwError(strValidationError);\r\n        }\r\n        var extPriority = ext[STR_PRIORITY /* @min:%2epriority */];\r\n        var identifier = ext[_DYN_IDENTIFIER /* @min:%2eidentifier */];\r\n        if (ext && extPriority) {\r\n            if (!isNullOrUndefined(extPriorities[extPriority])) {\r\n                _warnToConsole(logger, \"Two extensions have same priority #\" + extPriority + \" - \" + extPriorities[extPriority] + \", \" + identifier);\r\n            }\r\n            else {\r\n                // set a value\r\n                extPriorities[extPriority] = identifier;\r\n            }\r\n        }\r\n        // Split extensions to core and channels\r\n        if (!extPriority || extPriority < channelPriority) {\r\n            // Add to core extension that will be managed by AppInsightsCore\r\n            coreExtensions[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n        else {\r\n            channels[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n    });\r\n    return _a = {},\r\n        _a[STR_CORE /* @min:core */] = coreExtensions,\r\n        _a[STR_CHANNELS /* @min:channels */] = channels,\r\n        _a;\r\n}\r\nfunction _isPluginPresent(thePlugin, plugins) {\r\n    var exists = false;\r\n    arrForEach(plugins, function (plugin) {\r\n        if (plugin === thePlugin) {\r\n            exists = true;\r\n            return -1;\r\n        }\r\n    });\r\n    return exists;\r\n}\r\nfunction _deepMergeConfig(details, target, newValues, merge) {\r\n    // Lets assign the new values to the existing config\r\n    if (newValues) {\r\n        objForEachKey(newValues, function (key, value) {\r\n            if (merge) {\r\n                if (isPlainObject(value) && isPlainObject(target[key])) {\r\n                    // The target is an object and it has a value\r\n                    _deepMergeConfig(details, target[key], value, merge);\r\n                }\r\n            }\r\n            if (merge && isPlainObject(value) && isPlainObject(target[key])) {\r\n                // The target is an object and it has a value\r\n                _deepMergeConfig(details, target[key], value, merge);\r\n            }\r\n            else {\r\n                // Just Assign (replace) and/or make the property dynamic\r\n                details.set(target, key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _findWatcher(listeners, newWatcher) {\r\n    var theListener = null;\r\n    var idx = -1;\r\n    arrForEach(listeners, function (listener, lp) {\r\n        if (listener.w === newWatcher) {\r\n            theListener = listener;\r\n            idx = lp;\r\n            return -1;\r\n        }\r\n    });\r\n    return { i: idx, l: theListener };\r\n}\r\nfunction _addDelayedCfgListener(listeners, newWatcher) {\r\n    var theListener = _findWatcher(listeners, newWatcher).l;\r\n    if (!theListener) {\r\n        theListener = {\r\n            w: newWatcher,\r\n            rm: function () {\r\n                var fnd = _findWatcher(listeners, newWatcher);\r\n                if (fnd.i !== -1) {\r\n                    listeners[_DYN_SPLICE /* @min:%2esplice */](fnd.i, 1);\r\n                }\r\n            }\r\n        };\r\n        listeners[_DYN_PUSH /* @min:%2epush */](theListener);\r\n    }\r\n    return theListener;\r\n}\r\nfunction _registerDelayedCfgListener(config, listeners, logger) {\r\n    arrForEach(listeners, function (listener) {\r\n        var unloadHdl = onConfigChange(config, listener.w, logger);\r\n        delete listener.w; // Clear the listener reference so it will get garbage collected.\r\n        // replace the remove function\r\n        listener.rm = function () {\r\n            unloadHdl.rm();\r\n        };\r\n    });\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _initDebugListener(configHandler, unloadContainer, notificationManager, debugListener) {\r\n    // Will get recalled if any referenced config values are changed\r\n    unloadContainer.add(configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n        var disableDbgExt = details.cfg.disableDbgExt;\r\n        if (disableDbgExt === true && debugListener) {\r\n            // Remove any previously loaded debug listener\r\n            notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](debugListener);\r\n            debugListener = null;\r\n        }\r\n        if (notificationManager && !debugListener && disableDbgExt !== true) {\r\n            debugListener = getDebugListener(details.cfg);\r\n            notificationManager[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](debugListener);\r\n        }\r\n    }));\r\n    return debugListener;\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _createUnloadHook(unloadHook) {\r\n    return objDefine({\r\n        rm: function () {\r\n            unloadHook.rm();\r\n        }\r\n    }, \"toJSON\", { v: function () { return \"aicore::onCfgChange<\" + JSON.stringify(unloadHook) + \">\"; } });\r\n}\r\n/**\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _configHandler;\r\n        var _isInitialized;\r\n        var _logger;\r\n        var _eventQueue;\r\n        var _notificationManager;\r\n        var _perfManager;\r\n        var _cfgPerfManager;\r\n        var _cookieManager;\r\n        var _pluginChain;\r\n        var _configExtensions;\r\n        var _channelConfig;\r\n        var _channels;\r\n        var _isUnloading;\r\n        var _telemetryInitializerPlugin;\r\n        var _internalLogsEventName;\r\n        var _evtNamespace;\r\n        var _unloadHandlers;\r\n        var _hookContainer;\r\n        var _debugListener;\r\n        var _traceCtx;\r\n        var _instrumentationKey;\r\n        var _cfgListeners;\r\n        var _extensions;\r\n        var _pluginVersionStringArr;\r\n        var _pluginVersionString;\r\n        /**\r\n         * Internal log poller\r\n         */\r\n        var _internalLogPoller;\r\n        var _internalLogPollerListening;\r\n        var _forceStopInternalLogPoller;\r\n        dynamicProto(AppInsightsCore, this, function (_self) {\r\n            // Set the default values (also called during teardown)\r\n            _initDefaults();\r\n            // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_extensions];\r\n            };\r\n            _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () { return _isInitialized; };\r\n            // Creating the self.initialize = ()\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                if (_isUnloading) {\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                // Make sure core is only initialized once\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    throwError(\"Core cannot be initialized more than once\");\r\n                }\r\n                _configHandler = createDynamicConfig(config, defaultConfig, logger || _self[_DYN_LOGGER /* @min:%2elogger */], false);\r\n                // Re-assigning the local config property so we don't have any references to the passed value and it can be garbage collected\r\n                config = _configHandler.cfg;\r\n                // This will be \"re-run\" if the referenced config properties are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    _instrumentationKey = details.cfg.instrumentationKey;\r\n                    // Mark the extensionConfig and all first level keys as referenced\r\n                    // This is so that calls to getExtCfg() will always return the same object\r\n                    // Even when a user may \"re-assign\" the plugin properties (or it's unloaded/reloaded)\r\n                    var extCfg = details.ref(details.cfg, STR_EXTENSION_CONFIG);\r\n                    objForEachKey(extCfg, function (key) {\r\n                        details.ref(extCfg, key);\r\n                    });\r\n                    if (isNullOrUndefined(_instrumentationKey)) {\r\n                        throwError(\"Please provide instrumentation key\");\r\n                    }\r\n                }));\r\n                _notificationManager = notificationManager;\r\n                // Initialize the debug listener outside of the closure to reduce the retained memory footprint\r\n                _debugListener = _initDebugListener(_configHandler, _hookContainer, _notificationManager && _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */](), _debugListener);\r\n                _initPerfManager();\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = logger;\r\n                var cfgExtensions = config[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                // Extension validation\r\n                _configExtensions = [];\r\n                _configExtensions[_DYN_PUSH /* @min:%2epush */].apply(_configExtensions, __spreadArray(__spreadArray([], extensions, false), cfgExtensions, false));\r\n                _channelConfig = config[STR_CHANNELS /* @min:%2echannels */];\r\n                _initPluginChain(null);\r\n                if (!_channels || _channels[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    throwError(\"No \" + STR_CHANNELS + \" available\");\r\n                }\r\n                if (_channelConfig && _channelConfig[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                    var teeController = _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */](\"TeeChannelController\");\r\n                    if (!teeController || !teeController.plugin) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"TeeChannel required\");\r\n                    }\r\n                }\r\n                _registerDelayedCfgListener(config, _cfgListeners, _logger);\r\n                _cfgListeners = null;\r\n                _isInitialized = true;\r\n                _self.releaseQueue();\r\n                _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */]();\r\n            };\r\n            _self.getChannels = function () {\r\n                var controls = [];\r\n                if (_channels) {\r\n                    arrForEach(_channels, function (channel) {\r\n                        controls[_DYN_PUSH /* @min:%2epush */](channel);\r\n                    });\r\n                }\r\n                return objFreeze(controls);\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                doPerf(_self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */](), function () { return \"AppInsightsCore:track\"; }, function () {\r\n                    if (telemetryItem === null) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        // throw error\r\n                        throwError(\"Invalid telemetry item\");\r\n                    }\r\n                    // do basic validation before sending it through the pipeline\r\n                    if (!telemetryItem[_DYN_NAME /* @min:%2ename */] && isNullOrUndefined(telemetryItem[_DYN_NAME /* @min:%2ename */])) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        throwError(\"telemetry name required\");\r\n                    }\r\n                    // setup default iKey if not passed in\r\n                    telemetryItem.iKey = telemetryItem.iKey || _instrumentationKey;\r\n                    // add default timestamp if not passed in\r\n                    telemetryItem[_DYN_TIME /* @min:%2etime */] = telemetryItem[_DYN_TIME /* @min:%2etime */] || toISOString(new Date());\r\n                    // Common Schema 4.0\r\n                    telemetryItem.ver = telemetryItem.ver || \"4.0\";\r\n                    if (!_isUnloading && _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                        // Process the telemetry plugin chain\r\n                        _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](telemetryItem);\r\n                    }\r\n                    else {\r\n                        // Queue events until all extensions are initialized\r\n                        _eventQueue[_DYN_PUSH /* @min:%2epush */](telemetryItem);\r\n                    }\r\n                }, function () { return ({ item: telemetryItem }); }, !(telemetryItem.sync));\r\n            };\r\n            _self[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */] = _createTelCtx;\r\n            _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */] = function () {\r\n                if (!_notificationManager) {\r\n                    _notificationManager = new NotificationManager(_configHandler.cfg);\r\n                    // For backward compatibility only\r\n                    _self[strNotificationManager] = _notificationManager;\r\n                }\r\n                return _notificationManager;\r\n            };\r\n            /**\r\n             * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n             * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n             * called.\r\n             * @param listener - An INotificationListener object.\r\n             */\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _self.getNotifyMgr()[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - INotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                if (_notificationManager) {\r\n                    _notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](listener);\r\n                }\r\n            };\r\n            _self.getCookieMgr = function () {\r\n                if (!_cookieManager) {\r\n                    _cookieManager = createCookieMgr(_configHandler.cfg, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _cookieManager;\r\n            };\r\n            _self.setCookieMgr = function (cookieMgr) {\r\n                if (_cookieManager !== cookieMgr) {\r\n                    runTargetUnload(_cookieManager, false);\r\n                    _cookieManager = cookieMgr;\r\n                }\r\n            };\r\n            _self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */] = function () {\r\n                return _perfManager || _cfgPerfManager || getGblPerfMgr();\r\n            };\r\n            _self.setPerfMgr = function (perfMgr) {\r\n                _perfManager = perfMgr;\r\n            };\r\n            _self.eventCnt = function () {\r\n                return _eventQueue[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.releaseQueue = function () {\r\n                if (_isInitialized && _eventQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var eventQueue = _eventQueue;\r\n                    _eventQueue = [];\r\n                    arrForEach(eventQueue, function (event) {\r\n                        _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](event);\r\n                    });\r\n                }\r\n            };\r\n            _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */] = function (eventName) {\r\n                _internalLogsEventName = eventName || null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                return _startLogPoller(true);\r\n            };\r\n            function _startLogPoller(alwaysStart) {\r\n                if ((!_internalLogPoller || !_internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */]) && !_forceStopInternalLogPoller) {\r\n                    var shouldStart = alwaysStart || (_logger && _logger.queue[_DYN_LENGTH /* @min:%2elength */] > 0);\r\n                    if (shouldStart) {\r\n                        if (!_internalLogPollerListening) {\r\n                            _internalLogPollerListening = true;\r\n                            // listen for any configuration changes so that changes to the\r\n                            // interval will cause the timer to be re-initialized\r\n                            _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                                var interval = details.cfg.diagnosticLogInterval;\r\n                                if (!interval || !(interval > 0)) {\r\n                                    interval = 10000;\r\n                                }\r\n                                var isRunning = false;\r\n                                if (_internalLogPoller) {\r\n                                    // It was already created so remember it's running and cancel\r\n                                    isRunning = _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */];\r\n                                    _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                                }\r\n                                // Create / reconfigure\r\n                                _internalLogPoller = createTimeout(_flushInternalLogs, interval);\r\n                                _internalLogPoller.unref();\r\n                                // Restart if previously running\r\n                                _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = isRunning;\r\n                            }));\r\n                        }\r\n                        _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = true;\r\n                    }\r\n                }\r\n                return _internalLogPoller;\r\n            }\r\n            _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */] = function () {\r\n                _forceStopInternalLogPoller = true;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                _flushInternalLogs();\r\n            };\r\n            // Add addTelemetryInitializer\r\n            proxyFunctions(_self, function () { return _telemetryInitializerPlugin; }, [\"addTelemetryInitializer\"]);\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync, unloadComplete, cbTimeout) {\r\n                var _a;\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_isInitialized) {\r\n                    // The SDK is not initialized\r\n                    throwError(strSdkNotInitialized);\r\n                }\r\n                // Check if the SDK still unloading so throw\r\n                if (_isUnloading) {\r\n                    // The SDK is already unloading\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                var unloadState = (_a = {\r\n                        reason: 50 /* TelemetryUnloadReason.SdkUnload */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                    _a.flushComplete = false,\r\n                    _a);\r\n                var result;\r\n                if (isAsync && !unloadComplete) {\r\n                    result = createPromise(function (resolve) {\r\n                        // Set the callback to the promise resolve callback\r\n                        unloadComplete = resolve;\r\n                    });\r\n                }\r\n                var processUnloadCtx = createProcessTelemetryUnloadContext(_getPluginChain(), _self);\r\n                processUnloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                    _hookContainer.run(_self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                    // Run any \"unload\" functions for the _cookieManager, _notificationManager and _logger\r\n                    doUnloadAll([_cookieManager, _notificationManager, _logger], isAsync, function () {\r\n                        _initDefaults();\r\n                        unloadComplete && unloadComplete(unloadState);\r\n                    });\r\n                }, _self);\r\n                function _doUnload(flushComplete) {\r\n                    unloadState.flushComplete = flushComplete;\r\n                    _isUnloading = true;\r\n                    // Run all of the unload handlers first (before unloading the plugins)\r\n                    _unloadHandlers.run(processUnloadCtx, unloadState);\r\n                    // Stop polling the internal logs\r\n                    _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */]();\r\n                    // Start unloading the components, from this point onwards the SDK should be considered to be in an unstable state\r\n                    processUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                _flushInternalLogs();\r\n                if (!_flushChannels(isAsync, _doUnload, 6 /* SendRequestReason.SdkUnload */, cbTimeout)) {\r\n                    _doUnload(false);\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */] = _getPlugin;\r\n            _self.addPlugin = function (plugin, replaceExisting, isAsync, addCb) {\r\n                if (!plugin) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(strValidationError);\r\n                    return;\r\n                }\r\n                var existingPlugin = _getPlugin(plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                if (existingPlugin && !replaceExisting) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(\"Plugin [\" + plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"] is already loaded!\");\r\n                    return;\r\n                }\r\n                var updateState = {\r\n                    reason: 16 /* TelemetryUpdateReason.PluginAdded */\r\n                };\r\n                function _addPlugin(removed) {\r\n                    _configExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                    updateState.added = [plugin];\r\n                    // Re-Initialize the plugin chain\r\n                    _initPluginChain(updateState);\r\n                    addCb && addCb(true);\r\n                }\r\n                if (existingPlugin) {\r\n                    var removedPlugins_1 = [existingPlugin.plugin];\r\n                    var unloadState = {\r\n                        reason: 2 /* TelemetryUnloadReason.PluginReplace */,\r\n                        isAsync: !!isAsync\r\n                    };\r\n                    _removePlugins(removedPlugins_1, unloadState, function (removed) {\r\n                        if (!removed) {\r\n                            // Previous plugin was successfully removed or was not installed\r\n                            addCb && addCb(false);\r\n                        }\r\n                        else {\r\n                            updateState.removed = removedPlugins_1;\r\n                            updateState.reason |= 32 /* TelemetryUpdateReason.PluginRemoved */;\r\n                            _addPlugin(true);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    _addPlugin(false);\r\n                }\r\n            };\r\n            _self.updateCfg = function (newConfig, mergeExisting) {\r\n                if (mergeExisting === void 0) { mergeExisting = true; }\r\n                var updateState;\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    updateState = {\r\n                        reason: 1 /* TelemetryUpdateReason.ConfigurationChanged */,\r\n                        cfg: _configHandler.cfg,\r\n                        oldCfg: deepExtend({}, _configHandler.cfg),\r\n                        newConfig: deepExtend({}, newConfig),\r\n                        merge: mergeExisting\r\n                    };\r\n                    newConfig = updateState.newConfig;\r\n                    var cfg = _configHandler.cfg;\r\n                    // replace the immutable (if initialized) values\r\n                    // We don't currently allow updating the extensions and channels via the update config\r\n                    // So overwriting any user provided values to reuse the existing values\r\n                    newConfig[STR_EXTENSIONS /* @min:%2eextensions */] = cfg[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                    newConfig[STR_CHANNELS /* @min:%2echannels */] = cfg[STR_CHANNELS /* @min:%2echannels */];\r\n                }\r\n                // Explicitly blocking any previous config watchers so that they don't get called because\r\n                // of this bulk update (Probably not necessary)\r\n                _configHandler._block(function (details) {\r\n                    // Lets assign the new values to the existing config either overwriting or re-assigning\r\n                    var theConfig = details.cfg;\r\n                    _deepMergeConfig(details, theConfig, newConfig, mergeExisting);\r\n                    if (!mergeExisting) {\r\n                        // Remove (unassign) the values \"missing\" from the newConfig and also not in the default config\r\n                        objForEachKey(theConfig, function (key) {\r\n                            if (!objHasOwn(newConfig, key)) {\r\n                                // Set the value to undefined\r\n                                details.set(theConfig, key, UNDEFINED_VALUE);\r\n                            }\r\n                        });\r\n                    }\r\n                    // Apply defaults to the new config\r\n                    details[_DYN_SET_DF /* @min:%2esetDf */](theConfig, defaultConfig);\r\n                }, true);\r\n                // Now execute all of the listeners (synchronously) so they update their values immediately\r\n                _configHandler[_DYN_NOTIFY /* @min:%2enotify */]();\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            };\r\n            _self.evtNamespace = function () {\r\n                return _evtNamespace;\r\n            };\r\n            _self.flush = _flushChannels;\r\n            _self.getTraceCtx = function (createNew) {\r\n                if (!_traceCtx) {\r\n                    _traceCtx = createDistributedTraceContext();\r\n                }\r\n                return _traceCtx;\r\n            };\r\n            _self.setTraceCtx = function (traceCtx) {\r\n                _traceCtx = traceCtx || null;\r\n            };\r\n            _self.addUnloadHook = _addUnloadHook;\r\n            // Create the addUnloadCb\r\n            proxyFunctionAs(_self, \"addUnloadCb\", function () { return _unloadHandlers; }, \"add\");\r\n            _self.onCfgChange = function (handler) {\r\n                var unloadHook;\r\n                if (!_isInitialized) {\r\n                    unloadHook = _addDelayedCfgListener(_cfgListeners, handler);\r\n                }\r\n                else {\r\n                    unloadHook = onConfigChange(_configHandler.cfg, handler, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _createUnloadHook(unloadHook);\r\n            };\r\n            _self.getWParam = function () {\r\n                return (hasDocument() || !!_configHandler.cfg.enableWParam) ? 0 : -1;\r\n            };\r\n            function _setPluginVersions() {\r\n                var thePlugins = {};\r\n                _pluginVersionStringArr = [];\r\n                var _addPluginVersions = function (plugins) {\r\n                    if (plugins) {\r\n                        arrForEach(plugins, function (plugin) {\r\n                            if (plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] && plugin[_DYN_VERSION /* @min:%2eversion */] && !thePlugins[plugin.identifier]) {\r\n                                var ver = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"=\" + plugin[_DYN_VERSION /* @min:%2eversion */];\r\n                                _pluginVersionStringArr[_DYN_PUSH /* @min:%2epush */](ver);\r\n                                thePlugins[plugin.identifier] = plugin;\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                _addPluginVersions(_channels);\r\n                if (_channelConfig) {\r\n                    arrForEach(_channelConfig, function (channels) {\r\n                        _addPluginVersions(channels);\r\n                    });\r\n                }\r\n                _addPluginVersions(_configExtensions);\r\n            }\r\n            function _initDefaults() {\r\n                _isInitialized = false;\r\n                // Use a default logger so initialization errors are not dropped on the floor with full logging\r\n                _configHandler = createDynamicConfig({}, defaultConfig, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                // Set the logging level to critical so that any critical initialization failures are displayed on the console\r\n                _configHandler.cfg[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */] = 1 /* eLoggingSeverity.CRITICAL */;\r\n                // Define _self.config\r\n                objDefine(_self, \"config\", {\r\n                    g: function () { return _configHandler.cfg; },\r\n                    s: function (newValue) {\r\n                        _self.updateCfg(newValue, false);\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionStringArr\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionStringArr) {\r\n                            _setPluginVersions();\r\n                        }\r\n                        return _pluginVersionStringArr;\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionString\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionString) {\r\n                            if (!_pluginVersionStringArr) {\r\n                                _setPluginVersions();\r\n                            }\r\n                            _pluginVersionString = _pluginVersionStringArr.join(\";\");\r\n                        }\r\n                        return _pluginVersionString || STR_EMPTY;\r\n                    }\r\n                });\r\n                objDefine(_self, \"logger\", {\r\n                    g: function () {\r\n                        if (!_logger) {\r\n                            _logger = new DiagnosticLogger(_configHandler.cfg);\r\n                            _configHandler[_DYN_LOGGER /* @min:%2elogger */] = _logger;\r\n                        }\r\n                        return _logger;\r\n                    },\r\n                    s: function (newLogger) {\r\n                        _configHandler[_DYN_LOGGER /* @min:%2elogger */] = newLogger;\r\n                        if (_logger !== newLogger) {\r\n                            runTargetUnload(_logger, false);\r\n                            _logger = newLogger;\r\n                        }\r\n                    }\r\n                });\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = new DiagnosticLogger(_configHandler.cfg);\r\n                _extensions = [];\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                _telemetryInitializerPlugin = new TelemetryInitializerPlugin();\r\n                _eventQueue = [];\r\n                runTargetUnload(_notificationManager, false);\r\n                _notificationManager = null;\r\n                _perfManager = null;\r\n                _cfgPerfManager = null;\r\n                runTargetUnload(_cookieManager, false);\r\n                _cookieManager = null;\r\n                _pluginChain = null;\r\n                _configExtensions = [];\r\n                _channelConfig = null;\r\n                _channels = null;\r\n                _isUnloading = false;\r\n                _internalLogsEventName = null;\r\n                _evtNamespace = createUniqueNamespace(\"AIBaseCore\", true);\r\n                _unloadHandlers = createUnloadHandlerContainer();\r\n                _traceCtx = null;\r\n                _instrumentationKey = null;\r\n                _hookContainer = createUnloadHookContainer();\r\n                _cfgListeners = [];\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller = null;\r\n                _internalLogPollerListening = false;\r\n            }\r\n            function _createTelCtx() {\r\n                var theCtx = createProcessTelemetryContext(_getPluginChain(), _configHandler.cfg, _self);\r\n                theCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                return theCtx;\r\n            }\r\n            // Initialize or Re-initialize the plugins\r\n            function _initPluginChain(updateState) {\r\n                // Extension validation\r\n                var theExtensions = _validateExtensions(_self[_DYN_LOGGER /* @min:%2elogger */], ChannelControllerPriority, _configExtensions);\r\n                _pluginChain = null;\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                // Get the primary channel queue and include as part of the normal extensions\r\n                _channels = (_channelConfig || [])[0] || [];\r\n                // Add any channels provided in the extensions and sort them\r\n                _channels = sortPlugins(arrAppend(_channels, theExtensions[STR_CHANNELS /* @min:%2echannels */]));\r\n                // Create an array of all extensions, including the _channels\r\n                var allExtensions = arrAppend(sortPlugins(theExtensions[STR_CORE /* @min:%2ecore */]), _channels);\r\n                // Required to allow plugins to call core.getPlugin() during their own initialization\r\n                _extensions = objFreeze(allExtensions);\r\n                // This has a side effect of adding the extensions passed during initialization\r\n                // into the config.extensions, so you can see all of the extensions loaded.\r\n                // This will also get updated by the addPlugin() and remove plugin code.\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                var rootCtx = _createTelCtx();\r\n                // Initializing the channels first\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    initializePlugins(rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels), allExtensions);\r\n                }\r\n                // Now initialize the normal extensions (explicitly not including the _channels as this can cause duplicate initialization)\r\n                initializePlugins(rootCtx, allExtensions);\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            }\r\n            function _getPlugin(pluginIdentifier) {\r\n                var theExt = null;\r\n                var thePlugin = null;\r\n                var channelHosts = [];\r\n                arrForEach(_extensions, function (ext) {\r\n                    if (ext[_DYN_IDENTIFIER /* @min:%2eidentifier */] === pluginIdentifier && ext !== _telemetryInitializerPlugin) {\r\n                        thePlugin = ext;\r\n                        return -1;\r\n                    }\r\n                    if (ext.getChannel) {\r\n                        channelHosts[_DYN_PUSH /* @min:%2epush */](ext);\r\n                    }\r\n                });\r\n                if (!thePlugin && channelHosts[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(channelHosts, function (host) {\r\n                        thePlugin = host.getChannel(pluginIdentifier);\r\n                        if (!thePlugin) {\r\n                            return -1;\r\n                        }\r\n                    });\r\n                }\r\n                if (thePlugin) {\r\n                    theExt = {\r\n                        plugin: thePlugin,\r\n                        setEnabled: function (enabled) {\r\n                            _getPluginState(thePlugin)[STR_DISABLED] = !enabled;\r\n                        },\r\n                        isEnabled: function () {\r\n                            var pluginState = _getPluginState(thePlugin);\r\n                            return !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] && !pluginState[STR_DISABLED];\r\n                        },\r\n                        remove: function (isAsync, removeCb) {\r\n                            var _a;\r\n                            if (isAsync === void 0) { isAsync = true; }\r\n                            var pluginsToRemove = [thePlugin];\r\n                            var unloadState = (_a = {\r\n                                    reason: 1 /* TelemetryUnloadReason.PluginUnload */\r\n                                },\r\n                                _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                                _a);\r\n                            _removePlugins(pluginsToRemove, unloadState, function (removed) {\r\n                                if (removed) {\r\n                                    // Re-Initialize the plugin chain\r\n                                    _initPluginChain({\r\n                                        reason: 32 /* TelemetryUpdateReason.PluginRemoved */,\r\n                                        removed: pluginsToRemove\r\n                                    });\r\n                                }\r\n                                removeCb && removeCb(removed);\r\n                            });\r\n                        }\r\n                    };\r\n                }\r\n                return theExt;\r\n            }\r\n            function _getPluginChain() {\r\n                if (!_pluginChain) {\r\n                    // copy the collection of extensions\r\n                    var extensions = (_extensions || []).slice();\r\n                    // During add / remove this may get called again, so don't read if already present\r\n                    if (arrIndexOf(extensions, _telemetryInitializerPlugin) === -1) {\r\n                        extensions[_DYN_PUSH /* @min:%2epush */](_telemetryInitializerPlugin);\r\n                    }\r\n                    _pluginChain = createTelemetryProxyChain(sortPlugins(extensions), _configHandler.cfg, _self);\r\n                }\r\n                return _pluginChain;\r\n            }\r\n            function _removePlugins(thePlugins, unloadState, removeComplete) {\r\n                if (thePlugins && thePlugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var unloadChain = createTelemetryProxyChain(thePlugins, _configHandler.cfg, _self);\r\n                    var unloadCtx = createProcessTelemetryUnloadContext(unloadChain, _self);\r\n                    unloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                        var removed = false;\r\n                        // Remove the listed config extensions\r\n                        var newConfigExtensions = [];\r\n                        arrForEach(_configExtensions, function (plugin, idx) {\r\n                            if (!_isPluginPresent(plugin, thePlugins)) {\r\n                                newConfigExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                            }\r\n                            else {\r\n                                removed = true;\r\n                            }\r\n                        });\r\n                        _configExtensions = newConfigExtensions;\r\n                        _pluginVersionString = null;\r\n                        _pluginVersionStringArr = null;\r\n                        // Re-Create the channel config\r\n                        var newChannelConfig = [];\r\n                        if (_channelConfig) {\r\n                            arrForEach(_channelConfig, function (queue, idx) {\r\n                                var newQueue = [];\r\n                                arrForEach(queue, function (channel) {\r\n                                    if (!_isPluginPresent(channel, thePlugins)) {\r\n                                        newQueue[_DYN_PUSH /* @min:%2epush */](channel);\r\n                                    }\r\n                                    else {\r\n                                        removed = true;\r\n                                    }\r\n                                });\r\n                                newChannelConfig[_DYN_PUSH /* @min:%2epush */](newQueue);\r\n                            });\r\n                            _channelConfig = newChannelConfig;\r\n                        }\r\n                        removeComplete && removeComplete(removed);\r\n                        _startLogPoller();\r\n                    });\r\n                    unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                else {\r\n                    removeComplete(false);\r\n                }\r\n            }\r\n            function _flushInternalLogs() {\r\n                if (_logger && _logger.queue) {\r\n                    var queue = _logger.queue.slice(0);\r\n                    _logger.queue[_DYN_LENGTH /* @min:%2elength */] = 0;\r\n                    arrForEach(queue, function (logMessage) {\r\n                        var _a;\r\n                        var item = (_a = {},\r\n                            _a[_DYN_NAME /* @min:name */] = _internalLogsEventName ? _internalLogsEventName : \"InternalMessageId: \" + logMessage[_DYN_MESSAGE_ID /* @min:%2emessageId */],\r\n                            _a.iKey = _instrumentationKey,\r\n                            _a[_DYN_TIME /* @min:time */] = toISOString(new Date()),\r\n                            _a.baseType = _InternalLogMessage.dataType,\r\n                            _a.baseData = { message: logMessage[_DYN_MESSAGE /* @min:%2emessage */] },\r\n                            _a);\r\n                        _self.track(item);\r\n                    });\r\n                }\r\n            }\r\n            function _flushChannels(isAsync, callBack, sendReason, cbTimeout) {\r\n                // Setting waiting to one so that we don't call the callBack until we finish iterating\r\n                var waiting = 1;\r\n                var doneIterating = false;\r\n                var cbTimer = null;\r\n                cbTimeout = cbTimeout || 5000;\r\n                function doCallback() {\r\n                    waiting--;\r\n                    if (doneIterating && waiting === 0) {\r\n                        cbTimer && cbTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                        cbTimer = null;\r\n                        callBack && callBack(doneIterating);\r\n                        callBack = null;\r\n                    }\r\n                }\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var flushCtx = _createTelCtx()[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels);\r\n                    flushCtx.iterate(function (plugin) {\r\n                        if (plugin.flush) {\r\n                            waiting++;\r\n                            var handled_1 = false;\r\n                            // Not all channels will call this callback for every scenario\r\n                            if (!plugin.flush(isAsync, function () {\r\n                                handled_1 = true;\r\n                                doCallback();\r\n                            }, sendReason)) {\r\n                                if (!handled_1) {\r\n                                    // If any channel doesn't return true and it didn't call the callback, then we should assume that the callback\r\n                                    // will never be called, so use a timeout to allow the channel(s) some time to \"finish\" before triggering any\r\n                                    // followup function (such as unloading)\r\n                                    if (isAsync && cbTimer == null) {\r\n                                        cbTimer = scheduleTimeout(function () {\r\n                                            cbTimer = null;\r\n                                            doCallback();\r\n                                        }, cbTimeout);\r\n                                    }\r\n                                    else {\r\n                                        doCallback();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                doneIterating = true;\r\n                doCallback();\r\n                return true;\r\n            }\r\n            function _initPerfManager() {\r\n                // Save the previous config based performance manager creator to avoid creating new perf manager instances if unchanged\r\n                var prevCfgPerfMgr;\r\n                // Will get recalled if any referenced config values are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var enablePerfMgr = details.cfg.enablePerfMgr;\r\n                    if (enablePerfMgr) {\r\n                        var createPerfMgr = details.cfg[STR_CREATE_PERF_MGR /* @min:%2ecreatePerfMgr */];\r\n                        if (prevCfgPerfMgr !== createPerfMgr) {\r\n                            if (!createPerfMgr) {\r\n                                createPerfMgr = _createPerfManager;\r\n                            }\r\n                            // Set the performance manager creation function if not defined\r\n                            getSetValue(details.cfg, STR_CREATE_PERF_MGR, createPerfMgr);\r\n                            prevCfgPerfMgr = createPerfMgr;\r\n                            // Remove any existing config based performance manager\r\n                            _cfgPerfManager = null;\r\n                        }\r\n                        // Only create the performance manager if it's not already created or manually set\r\n                        if (!_perfManager && !_cfgPerfManager && isFunction(createPerfMgr)) {\r\n                            // Create a new config based performance manager\r\n                            _cfgPerfManager = createPerfMgr(_self, _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]());\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Remove any existing config based performance manager\r\n                        _cfgPerfManager = null;\r\n                        // Clear the previous cached value so it can be GC'd\r\n                        prevCfgPerfMgr = null;\r\n                    }\r\n                }));\r\n            }\r\n            function _doUpdate(updateState) {\r\n                var updateCtx = createProcessTelemetryUpdateContext(_getPluginChain(), _self);\r\n                updateCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                if (!_self._updateHook || _self._updateHook(updateCtx, updateState) !== true) {\r\n                    updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n                }\r\n            }\r\n            function _logOrThrowError(message) {\r\n                var logger = _self[_DYN_LOGGER /* @min:%2elogger */];\r\n                if (logger) {\r\n                    // there should always be a logger\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, message);\r\n                    _startLogPoller();\r\n                }\r\n                else {\r\n                    throwError(message);\r\n                }\r\n            }\r\n            function _notifyInvalidEvent(telemetryItem) {\r\n                var manager = _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]();\r\n                if (manager) {\r\n                    manager[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */]([telemetryItem], 2 /* eEventsDiscardedReason.InvalidEvent */);\r\n                }\r\n            }\r\n            function _addUnloadHook(hooks) {\r\n                _hookContainer.add(hooks);\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.getChannels.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n// Removed Stub for AppInsightsCore.prototype.getProcessTelContext.\r\n// Removed Stub for AppInsightsCore.prototype.getNotifyMgr.\r\n// Removed Stub for AppInsightsCore.prototype.addNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.removeNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.getCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.getPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.eventCnt.\r\n// Removed Stub for AppInsightsCore.prototype.pollInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.stopPollingInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.addTelemetryInitializer.\r\n// Removed Stub for AppInsightsCore.prototype.unload.\r\n// Removed Stub for AppInsightsCore.prototype.getPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.addPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.updateCfg.\r\n// Removed Stub for AppInsightsCore.prototype.evtNamespace.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadCb.\r\n// Removed Stub for AppInsightsCore.prototype.flush.\r\n// Removed Stub for AppInsightsCore.prototype.getTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.setTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadHook.\r\n// Removed Stub for AppInsightsCore.prototype.onCfgChange.\r\n// Removed Stub for AppInsightsCore.prototype.releaseQueue.\r\n// Removed Stub for AppInsightsCore.prototype._updateHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_NAME } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getJSON } from \"./EnvUtils\";\r\n/**\r\n * Parses the response from the backend.\r\n * @param response - XMLHttpRequest or XDomainRequest response\r\n */\r\nexport function parseResponse(response, diagLog) {\r\n    try {\r\n        if (response && response !== \"\") {\r\n            var result = getJSON().parse(response);\r\n            if (result && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] >= result.itemsAccepted &&\r\n                result.itemsReceived - result.itemsAccepted === result.errors[_DYN_LENGTH /* @min:%2elength */]) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 43 /* _eInternalMessageId.InvalidBackendResponse */, \"Cannot parse the response. \" + (e[_DYN_NAME /* @min:%2ename */] || dumpObj(e)), {\r\n            response: response\r\n        });\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=ResponseHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, dumpObj, getNavigator, getWindow, isFunction, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DATA, _DYN_HEADERS, _DYN_INITIALIZE, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PROTOCOL, _DYN_REPLACE, _DYN_SEND_POST, _DYN_SET_REQUEST_HEADER, _DYN_STATUS, _DYN_TIMEOUT, _DYN_TO_LOWER_CASE, _DYN_URL_STRING, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { DisabledPropertyName } from \"./Constants\";\r\nimport { _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getLocation, isBeaconsSupported, isFetchSupported, isXhrSupported, useXDomainRequest } from \"./EnvUtils\";\r\nimport { _getAllResponseHeaders, formatErrorMessageXdr, formatErrorMessageXhr, getResponseText, openXhr } from \"./HelperFuncs\";\r\nvar STR_EMPTY = \"\";\r\nvar STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\nvar STR_POST_METHOD = \"POST\";\r\n/**\r\n * This Internal component\r\n * Manager SendPost functions\r\n * SendPostManger\r\n * @internal for internal use only\r\n */\r\nvar SenderPostManager = /** @class */ (function () {\r\n    function SenderPostManager() {\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _enableSendPromise;\r\n        var _isInitialized;\r\n        var _diagLog;\r\n        var _isOneDs;\r\n        var _onCompleteFuncs;\r\n        var _disableCredentials;\r\n        var _fallbackInst;\r\n        var _disableXhr;\r\n        var _disableBeacon;\r\n        var _disableBeaconSync;\r\n        var _disableFetchKeepAlive;\r\n        var _addNoResponse;\r\n        var _timeoutWrapper;\r\n        dynamicProto(SenderPostManager, this, function (_self, _base) {\r\n            var _sendCredentials = true; // for 1ds\r\n            _initDefaults();\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, diagLog) {\r\n                _diagLog = diagLog;\r\n                if (_isInitialized) {\r\n                    _throwInternal(_diagLog, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _self.SetConfig(config);\r\n                _isInitialized = true;\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_isInitialized, _isOneDs, _disableCredentials, _enableSendPromise];\r\n            };\r\n            // This componet might get its config from sender, offline sender, 1ds post\r\n            // so set this function to mock dynamic changes\r\n            _self.SetConfig = function (config) {\r\n                try {\r\n                    _onCompleteFuncs = config.senderOnCompleteCallBack || {};\r\n                    _disableCredentials = !!config.disableCredentials;\r\n                    _isOneDs = !!config.isOneDs;\r\n                    _enableSendPromise = !!config.enableSendPromise;\r\n                    _disableXhr = !!config.disableXhr;\r\n                    _disableBeacon = !!config.disableBeacon;\r\n                    _disableBeaconSync = !!config.disableBeaconSync;\r\n                    _timeoutWrapper = config.timeWrapper;\r\n                    _addNoResponse = !!config.addNoResponse;\r\n                    _disableFetchKeepAlive = !!config.disableFetchKeepAlive;\r\n                    _fallbackInst = { sendPOST: _xhrSender };\r\n                    if (!_isOneDs) {\r\n                        _sendCredentials = false; // for appInsights, set it to false always\r\n                    }\r\n                    if (_disableCredentials) {\r\n                        var location_1 = getLocation();\r\n                        if (location_1 && location_1.protocol && location_1.protocol[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"file:\") {\r\n                            // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                            _sendCredentials = false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            };\r\n            _self.getSyncFetchPayload = function () {\r\n                return _syncFetchPayload;\r\n            };\r\n            _self.getSenderInst = function (transports, sync) {\r\n                if (transports && transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    return _getSenderInterface(transports, sync);\r\n                }\r\n                return null;\r\n            };\r\n            _self.getFallbackInst = function () {\r\n                return _fallbackInst;\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function (unloadCtx, unloadState) {\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(res, onComplete) {\r\n                _doOnComplete(onComplete, 200, {}, res);\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(message, onComplete) {\r\n                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _doOnComplete(onComplete, 400, {});\r\n            }\r\n            function _onNoPayloadUrl(onComplete) {\r\n                _onError(\"No endpoint url is provided for the batch\", onComplete);\r\n            }\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                var _a;\r\n                var transportType = 0 /* TransportType.NotSet */;\r\n                var sendPostFunc = null;\r\n                var lp = 0;\r\n                while (sendPostFunc == null && lp < transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    transportType = transports[lp];\r\n                    if (!_disableXhr && transportType === 1 /* TransportType.Xhr */) {\r\n                        if (useXDomainRequest()) {\r\n                            // IE 8 and 9\r\n                            sendPostFunc = _xdrSender;\r\n                        }\r\n                        else if (isXhrSupported()) {\r\n                            sendPostFunc = _xhrSender;\r\n                        }\r\n                    }\r\n                    else if (transportType === 2 /* TransportType.Fetch */ && isFetchSupported(syncSupport) && (!syncSupport || !_disableFetchKeepAlive)) {\r\n                        sendPostFunc = _doFetchSender;\r\n                    }\r\n                    else if (transportType === 3 /* TransportType.Beacon */ && isBeaconsSupported() && (syncSupport ? !_disableBeaconSync : !_disableBeacon)) {\r\n                        sendPostFunc = _beaconSender;\r\n                    }\r\n                    lp++;\r\n                }\r\n                if (sendPostFunc) {\r\n                    return _a = {\r\n                            _transport: transportType,\r\n                            _isSync: syncSupport\r\n                        },\r\n                        _a[_DYN_SEND_POST /* @min:sendPOST */] = sendPostFunc,\r\n                        _a;\r\n                }\r\n                return null;\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete && oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _doBeaconSend(payload, oncomplete) {\r\n                var nav = getNavigator();\r\n                var url = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!url) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    // return true here, because we don't want to retry it with fallback sender\r\n                    return true;\r\n                }\r\n                url = payload[_DYN_URL_STRING /* @min:%2eurlString */] + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                var plainTextBatch = _isOneDs ? data : new Blob([data], { type: \"text/plain;charset=UTF-8\" });\r\n                // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                var queued = nav.sendBeacon(url, plainTextBatch);\r\n                return queued;\r\n            }\r\n            /**\r\n             * Send Beacon API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - not used\r\n             * Note: Beacon API does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _beaconSender(payload, oncomplete, sync) {\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                try {\r\n                    if (data) {\r\n                        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                        if (!_doBeaconSend(payload, oncomplete)) {\r\n                            var onRetry = _onCompleteFuncs && _onCompleteFuncs.beaconOnRetry;\r\n                            if (onRetry && isFunction(onRetry)) {\r\n                                onRetry(payload, oncomplete, _doBeaconSend);\r\n                            }\r\n                            else {\r\n                                _fallbackInst && _fallbackInst[_DYN_SEND_POST /* @min:%2esendPOST */](payload, oncomplete, true);\r\n                                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            // if can send\r\n                            _onSuccess(STR_EMPTY, oncomplete);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _isOneDs && _warnToConsole(_diagLog, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(e));\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, STR_EMPTY);\r\n                }\r\n                return;\r\n            }\r\n            /**\r\n             * Send XMLHttpRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             */\r\n            function _xhrSender(payload, oncomplete, sync) {\r\n                //let  internalPayload = payload as IInternalPayloadData;\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (_isOneDs && sync && payload.disableXhrSync) {\r\n                    sync = false;\r\n                }\r\n                //const xhr = new XMLHttpRequest();\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                var xhr = openXhr(STR_POST_METHOD, endPointUrl, _sendCredentials, true, sync, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                if (!_isOneDs) {\r\n                    // application/json should NOT add to 1ds post by default\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](\"Content-type\", \"application/json\");\r\n                }\r\n                arrForEach(objKeys(headers), function (headerName) {\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](headerName, headers[headerName]);\r\n                });\r\n                xhr.onreadystatechange = function () {\r\n                    if (!_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                        if (xhr.readyState === 4) {\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }\r\n                };\r\n                xhr.onload = function () {\r\n                    if (_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                    }\r\n                };\r\n                function _doOnReadyFunc(xhr) {\r\n                    var onReadyFunc = _onCompleteFuncs && _onCompleteFuncs.xhrOnComplete;\r\n                    var onReadyFuncExist = onReadyFunc && isFunction(onReadyFunc);\r\n                    if (onReadyFuncExist) {\r\n                        onReadyFunc(xhr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        var response = getResponseText(xhr);\r\n                        _doOnComplete(oncomplete, xhr[_DYN_STATUS /* @min:%2estatus */], _getAllResponseHeaders(xhr, _isOneDs), response);\r\n                    }\r\n                }\r\n                xhr.onerror = function (event) {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 400, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    rejectFunc && rejectFunc(event);\r\n                };\r\n                xhr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 500, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    resolveFunc && resolveFunc(false);\r\n                };\r\n                xhr.send(payload[_DYN_DATA /* @min:%2edata */]);\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send fetch API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - For fetch this identifies whether we are \"unloading\" (false) or a normal request\r\n             */\r\n            function _doFetchSender(payload, oncomplete, sync) {\r\n                var _a;\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                var batch = payload[_DYN_DATA /* @min:%2edata */];\r\n                var plainTextBatch = _isOneDs ? batch : new Blob([batch], { type: \"application/json\" });\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var requestHeaders = new Headers();\r\n                var batchLength = batch[_DYN_LENGTH /* @min:%2elength */];\r\n                var ignoreResponse = false;\r\n                var responseHandled = false;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                //TODO: handle time out for 1ds\r\n                var init = (_a = {\r\n                        method: STR_POST_METHOD,\r\n                        body: plainTextBatch\r\n                    },\r\n                    _a[DisabledPropertyName] = true // Mark so we don't attempt to track this request\r\n                ,\r\n                    _a);\r\n                // Only add headers if there are headers to add, due to issue with some polyfills\r\n                if (payload.headers && objKeys(payload.headers)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(objKeys(headers), function (headerName) {\r\n                        requestHeaders.append(headerName, headers[headerName]);\r\n                    });\r\n                    init[_DYN_HEADERS /* @min:%2eheaders */] = requestHeaders;\r\n                }\r\n                if (_sendCredentials && _isOneDs) {\r\n                    // for 1ds, Don't send credentials when URL is file://\r\n                    init.credentials = \"include\";\r\n                }\r\n                if (sync) {\r\n                    init.keepalive = true;\r\n                    _syncFetchPayload += batchLength;\r\n                    if (_isOneDs) {\r\n                        if (payload[\"_sendReason\"] === 2 /* SendRequestReason.Unload */) {\r\n                            // As a sync request (during unload), it is unlikely that we will get a chance to process the response so\r\n                            // just like beacon send assume that the events have been accepted and processed\r\n                            ignoreResponse = true;\r\n                            if (_addNoResponse) {\r\n                                endPointUrl += _noResponseQs;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // for appinsights, set to true for all sync request\r\n                        ignoreResponse = true;\r\n                    }\r\n                }\r\n                var request = new Request(endPointUrl, init);\r\n                try {\r\n                    // Also try and tag the request (just in case the value in init is not copied over)\r\n                    request[DisabledPropertyName] = true;\r\n                }\r\n                catch (e) {\r\n                    // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n                    // cause the request to fail and we no telemetry would be sent\r\n                }\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                function _handleError(res) {\r\n                    // In case there is an error in the request. Set the status to 0 for 1ds and 400 for appInsights\r\n                    // so that the events can be retried later.\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, _isOneDs ? STR_EMPTY : res);\r\n                }\r\n                function _onFetchComplete(response, payload, value) {\r\n                    var status = response[_DYN_STATUS /* @min:%2estatus */];\r\n                    var onCompleteFunc = _onCompleteFuncs.fetchOnComplete;\r\n                    if (onCompleteFunc && isFunction(onCompleteFunc)) {\r\n                        onCompleteFunc(response, oncomplete, value || STR_EMPTY, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, status, {}, value || STR_EMPTY);\r\n                    }\r\n                }\r\n                try {\r\n                    doAwaitResponse(fetch(_isOneDs ? endPointUrl : request, _isOneDs ? init : null), function (result) {\r\n                        if (sync) {\r\n                            _syncFetchPayload -= batchLength;\r\n                            batchLength = 0;\r\n                        }\r\n                        if (!responseHandled) {\r\n                            responseHandled = true;\r\n                            if (!result.rejected) {\r\n                                var response_1 = result.value;\r\n                                try {\r\n                                    /**\r\n                                     * The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500.\r\n                                     * Instead, it will resolve normally (with ok status set to false), and it will only reject on network failure\r\n                                     * or if anything prevented the request from completing.\r\n                                     */\r\n                                    if (!_isOneDs && !response_1.ok) {\r\n                                        // this is for appInsights only\r\n                                        _handleError(response_1.statusText);\r\n                                        resolveFunc && resolveFunc(false);\r\n                                    }\r\n                                    else {\r\n                                        if (_isOneDs && !response_1.body) {\r\n                                            _onFetchComplete(response_1, null, STR_EMPTY);\r\n                                            resolveFunc && resolveFunc(true);\r\n                                        }\r\n                                        else {\r\n                                            doAwaitResponse(response_1.text(), function (resp) {\r\n                                                _onFetchComplete(response_1, payload, resp.value);\r\n                                                resolveFunc && resolveFunc(true);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                                catch (e) {\r\n                                    _handleError(dumpObj(e));\r\n                                    rejectFunc && rejectFunc(e);\r\n                                }\r\n                            }\r\n                            else {\r\n                                _handleError(result.reason && result.reason[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                rejectFunc && rejectFunc(result.reason);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    if (!responseHandled) {\r\n                        _handleError(dumpObj(e));\r\n                        rejectFunc && rejectFunc(e);\r\n                    }\r\n                }\r\n                if (ignoreResponse && !responseHandled) {\r\n                    // Assume success during unload processing as we most likely won't get the response\r\n                    responseHandled = true;\r\n                    _doOnComplete(oncomplete, 200, {});\r\n                    resolveFunc && resolveFunc(true);\r\n                }\r\n                if (_isOneDs && !responseHandled && payload[_DYN_TIMEOUT /* @min:%2etimeout */] > 0) {\r\n                    // Simulate timeout\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        if (!responseHandled) {\r\n                            // Assume a 500 response (which will cause a retry)\r\n                            responseHandled = true;\r\n                            _doOnComplete(oncomplete, 500, {});\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                }\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send XDomainRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             *\r\n             * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n             * to maintain consistency with the xhrSender's contract\r\n             * Note: XDomainRequest does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _xdrSender(payload, oncomplete, sync) {\r\n                // It doesn't support custom headers, so no action is taken with current requestHeaders\r\n                var _window = getWindow();\r\n                var xdr = new XDomainRequest();\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                xdr.onload = function () {\r\n                    var response = getResponseText(xdr);\r\n                    var onloadFunc = _onCompleteFuncs && _onCompleteFuncs.xdrOnComplete;\r\n                    if (onloadFunc && isFunction(onloadFunc)) {\r\n                        onloadFunc(xdr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, 200, {}, response);\r\n                    }\r\n                };\r\n                xdr.onerror = function () {\r\n                    _doOnComplete(oncomplete, 400, {}, _isOneDs ? STR_EMPTY : formatErrorMessageXdr(xdr));\r\n                };\r\n                xdr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, 500, {});\r\n                };\r\n                xdr.onprogress = function () { };\r\n                // XDomainRequest requires the same protocol as the hosting page.\r\n                // If the protocol doesn't match, we can't send the telemetry :(.\r\n                var hostingProtocol = _window && _window.location && _window.location[_DYN_PROTOCOL /* @min:%2eprotocol */] || \"\";\r\n                var endpoint = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endpoint) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    return;\r\n                }\r\n                if (!_isOneDs && endpoint.lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                    var msg = \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\";\r\n                    _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + msg);\r\n                    _onError(msg, oncomplete);\r\n                    return;\r\n                }\r\n                var endpointUrl = _isOneDs ? endpoint : endpoint[_DYN_REPLACE /* @min:%2ereplace */](/^(https?:)/, \"\");\r\n                xdr.open(STR_POST_METHOD, endpointUrl);\r\n                if (payload[_DYN_TIMEOUT /* @min:%2etimeout */]) {\r\n                    xdr[_DYN_TIMEOUT /* @min:%2etimeout */] = payload[_DYN_TIMEOUT /* @min:%2etimeout */];\r\n                }\r\n                xdr.send(data);\r\n                if (_isOneDs && sync) {\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        xdr.send(data);\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    xdr.send(data);\r\n                }\r\n            }\r\n            function _initDefaults() {\r\n                _syncFetchPayload = 0;\r\n                _isInitialized = false;\r\n                _enableSendPromise = false;\r\n                _diagLog = null;\r\n                _isOneDs = null;\r\n                _onCompleteFuncs = null;\r\n                _disableCredentials = null;\r\n                _fallbackInst = null;\r\n                _disableXhr = false;\r\n                _disableBeacon = false;\r\n                _disableBeaconSync = false;\r\n                _disableFetchKeepAlive = false;\r\n                _addNoResponse = false;\r\n                _timeoutWrapper = null;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for SenderPostManager.prototype.initialize.\r\n// Removed Stub for SenderPostManager.prototype.getSyncFetchPayload.\r\n// Removed Stub for SenderPostManager.prototype.SetConfig.\r\n// Removed Stub for SenderPostManager.prototype.getSenderInst.\r\n// Removed Stub for SenderPostManager.prototype.getFallbackInst.\r\n// Removed Stub for SenderPostManager.prototype._doTeardown.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    SenderPostManager.__ieDyn=1;\n\n    return SenderPostManager;\r\n}());\r\nexport { SenderPostManager };\r\n//# sourceMappingURL=SenderPostManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, getDocument, getWindow, isArray, objForEachKey, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_HANDLER, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE, _DYN_SPLICE, _DYN_SPLIT, _DYN_TYPE } from \"../__DynamicConstants\";\r\nimport { createElmNodeData, createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar strEvents = \"events\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar strUnload = \"unload\";\r\nvar strBeforeUnload = \"beforeunload\";\r\nvar strPageHideNamespace = createUniqueNamespace(\"aiEvtPageHide\");\r\nvar strPageShowNamespace = createUniqueNamespace(\"aiEvtPageShow\");\r\nvar rRemoveEmptyNs = /\\.[\\.]+/g;\r\nvar rRemoveTrailingEmptyNs = /[\\.]+$/;\r\nvar _guid = 1;\r\nvar elmNodeData = createElmNodeData(\"events\");\r\nvar eventNamespace = /^([^.]*)(?:\\.(.+)|)/;\r\nfunction _normalizeNamespace(name) {\r\n    if (name && name[_DYN_REPLACE /* @min:%2ereplace */]) {\r\n        return name[_DYN_REPLACE /* @min:%2ereplace */](/^[\\s\\.]+|(?=[\\s\\.])[\\.\\s]+$/g, STR_EMPTY);\r\n    }\r\n    return name;\r\n}\r\nfunction _getEvtNamespace(eventName, evtNamespace) {\r\n    var _a;\r\n    if (evtNamespace) {\r\n        var theNamespace_1 = STR_EMPTY;\r\n        if (isArray(evtNamespace)) {\r\n            theNamespace_1 = STR_EMPTY;\r\n            arrForEach(evtNamespace, function (name) {\r\n                name = _normalizeNamespace(name);\r\n                if (name) {\r\n                    if (name[0] !== \".\") {\r\n                        name = \".\" + name;\r\n                    }\r\n                    theNamespace_1 += name;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            theNamespace_1 = _normalizeNamespace(evtNamespace);\r\n        }\r\n        if (theNamespace_1) {\r\n            if (theNamespace_1[0] !== \".\") {\r\n                theNamespace_1 = \".\" + theNamespace_1;\r\n            }\r\n            // We may only have the namespace and not an eventName\r\n            eventName = (eventName || STR_EMPTY) + theNamespace_1;\r\n        }\r\n    }\r\n    var parsedEvent = (eventNamespace.exec(eventName || STR_EMPTY) || []);\r\n    return _a = {},\r\n        _a[_DYN_TYPE /* @min:type */] = parsedEvent[1],\r\n        _a.ns = ((parsedEvent[2] || STR_EMPTY).replace(rRemoveEmptyNs, \".\").replace(rRemoveTrailingEmptyNs, STR_EMPTY)[_DYN_SPLIT /* @min:%2esplit */](\".\").sort()).join(\".\"),\r\n        _a;\r\n}\r\n/**\r\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by\r\n * applications to remove their own events\r\n * @param target - The EventTarget that has registered events\r\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n */\r\nexport function __getRegisteredEvents(target, eventName, evtNamespace) {\r\n    var theEvents = [];\r\n    var eventCache = elmNodeData.get(target, strEvents, {}, false);\r\n    var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n    objForEachKey(eventCache, function (evtType, registeredEvents) {\r\n        arrForEach(registeredEvents, function (value) {\r\n            var _a;\r\n            if (!evtName[_DYN_TYPE /* @min:%2etype */] || evtName[_DYN_TYPE /* @min:%2etype */] === value.evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n                if (!evtName.ns || evtName.ns === evtName.ns) {\r\n                    theEvents[_DYN_PUSH /* @min:%2epush */]((_a = {},\r\n                        _a[_DYN_NAME /* @min:name */] = value.evtName[_DYN_TYPE /* @min:%2etype */] + (value.evtName.ns ? \".\" + value.evtName.ns : STR_EMPTY),\r\n                        _a.handler = value[_DYN_HANDLER /* @min:%2ehandler */],\r\n                        _a));\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return theEvents;\r\n}\r\n// Exported for internal unit testing only\r\nfunction _getRegisteredEvents(target, evtName, addDefault) {\r\n    if (addDefault === void 0) { addDefault = true; }\r\n    var aiEvts = elmNodeData.get(target, strEvents, {}, addDefault);\r\n    var registeredEvents = aiEvts[evtName];\r\n    if (!registeredEvents) {\r\n        registeredEvents = aiEvts[evtName] = [];\r\n    }\r\n    return registeredEvents;\r\n}\r\nfunction _doDetach(obj, evtName, handlerRef, useCapture) {\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        if (obj[strRemoveEventListener]) {\r\n            obj[strRemoveEventListener](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n        }\r\n        else if (obj[strDetachEvent]) {\r\n            obj[strDetachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n        }\r\n    }\r\n}\r\nfunction _doAttach(obj, evtName, handlerRef, useCapture) {\r\n    var result = false;\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */] && handlerRef) {\r\n        if (obj[strAddEventHelper]) {\r\n            // all browsers except IE before version 9\r\n            obj[strAddEventHelper](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n            result = true;\r\n        }\r\n        else if (obj[strAttachEvent]) {\r\n            // IE before version 9\r\n            obj[strAttachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _doUnregister(target, events, evtName, unRegFn) {\r\n    var idx = events[_DYN_LENGTH /* @min:%2elength */];\r\n    while (idx--) {\r\n        var theEvent = events[idx];\r\n        if (theEvent) {\r\n            if (!evtName.ns || evtName.ns === theEvent.evtName.ns) {\r\n                if (!unRegFn || unRegFn(theEvent)) {\r\n                    _doDetach(target, theEvent.evtName, theEvent[_DYN_HANDLER /* @min:%2ehandler */], theEvent.capture);\r\n                    // Remove the registered event\r\n                    events[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _unregisterEvents(target, evtName, unRegFn) {\r\n    if (evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        _doUnregister(target, _getRegisteredEvents(target, evtName[_DYN_TYPE /* @min:%2etype */]), evtName, unRegFn);\r\n    }\r\n    else {\r\n        var eventCache = elmNodeData.get(target, strEvents, {});\r\n        objForEachKey(eventCache, function (evtType, events) {\r\n            _doUnregister(target, events, evtName, unRegFn);\r\n        });\r\n        // Cleanup\r\n        if (objKeys(eventCache)[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            elmNodeData.kill(target, strEvents);\r\n        }\r\n    }\r\n}\r\nexport function mergeEvtNamespace(theNamespace, namespaces) {\r\n    var newNamespaces;\r\n    if (namespaces) {\r\n        if (isArray(namespaces)) {\r\n            newNamespaces = [theNamespace].concat(namespaces);\r\n        }\r\n        else {\r\n            newNamespaces = [theNamespace, namespaces];\r\n        }\r\n        // resort the namespaces so they are always in order\r\n        newNamespaces = (_getEvtNamespace(\"xx\", newNamespaces).ns)[_DYN_SPLIT /* @min:%2esplit */](\".\");\r\n    }\r\n    else {\r\n        newNamespaces = theNamespace;\r\n    }\r\n    return newNamespaces;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventName - String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed)\r\n * namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function eventOn(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    var _a;\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (target) {\r\n        try {\r\n            var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n            result = _doAttach(target, evtName, handlerRef, useCapture);\r\n            if (result && elmNodeData.accept(target)) {\r\n                var registeredEvent = (_a = {\r\n                        guid: _guid++,\r\n                        evtName: evtName\r\n                    },\r\n                    _a[_DYN_HANDLER /* @min:handler */] = handlerRef,\r\n                    _a.capture = useCapture,\r\n                    _a);\r\n                _getRegisteredEvents(target, evtName.type)[_DYN_PUSH /* @min:%2epush */](registeredEvent);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function eventOff(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (target) {\r\n        try {\r\n            var evtName_1 = _getEvtNamespace(eventName, evtNamespace);\r\n            var found_1 = false;\r\n            _unregisterEvents(target, evtName_1, function (regEvent) {\r\n                if ((evtName_1.ns && !handlerRef) || regEvent[_DYN_HANDLER /* @min:%2ehandler */] === handlerRef) {\r\n                    found_1 = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!found_1) {\r\n                // fallback to try and remove as requested\r\n                _doDetach(target, evtName_1, handlerRef, useCapture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    return eventOn(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventNameWithoutOn - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    eventOff(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName - {string} - The name of the event\r\n * @param callback - {any} - The callback function that needs to be executed for the given event\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback, evtNamespace) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = eventOn(w, eventName, callback, evtNamespace);\r\n        result = eventOn(w[\"body\"], eventName, callback, evtNamespace) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = eventOn(doc, eventName, callback, evtNamespace) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Trys to remove event handler(s) for the specified event/namespace to the window, body and document\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param callback - {any} - - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventHandler(eventName, callback, evtNamespace) {\r\n    var w = getWindow();\r\n    if (w) {\r\n        eventOff(w, eventName, callback, evtNamespace);\r\n        eventOff(w[\"body\"], eventName, callback, evtNamespace);\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        eventOff(doc, eventName, callback, evtNamespace);\r\n    }\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nfunction _addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && events[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener, evtNamespace) || added;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        added = _addEventListeners(events, listener, excludeEvents, evtNamespace);\r\n        if (!added && excludeEvents && excludeEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = _addEventListeners(events, listener, null, evtNamespace);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Remove the listener from the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventListeners(events, listener, evtNamespace) {\r\n    if (events && isArray(events)) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                removeEventHandler(name, listener, evtNamespace);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents, evtNamespace) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([strBeforeUnload, strUnload, strPageHide], listener, excludeEvents, evtNamespace);\r\n}\r\n/**\r\n * Remove any matching 'beforeunload', 'unload' and 'pagehide' events that may have been added via addEventListener,\r\n * addEventListeners, addPageUnloadEventListener or addPageHideEventListener.\r\n * @param listener - The specific event callback to to be removed\r\n * @param evtNamespace - [Optional] Namespace(s) uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function removePageUnloadEventListener(listener, evtNamespace) {\r\n    removeEventListeners([strBeforeUnload, strUnload, strPageHide], listener, evtNamespace);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed\r\n * based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageHideEventListener\" can remove these events.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    var pageUnloadAdded = _addEventListeners([strPageHide], listener, excludeEvents, newNamespaces);\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Removes the pageHide event listeners added by addPageHideEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageHideEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageHideEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    removeEventListeners([strPageHide], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely\r\n * identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageShowEventListener\" can remove these events.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    var pageShowAdded = _addEventListeners([strPageShow], listener, excludeEvents, newNamespaces);\r\n    pageShowAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageShowAdded;\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageShowAdded;\r\n}\r\n/**\r\n * Removes the pageShow event listeners added by addPageShowEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageShowEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageShowEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    removeEventListeners([strPageShow], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n//# sourceMappingURL=EventHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strShimFunction, strShimPrototype } from \"@microsoft/applicationinsights-shims\";\r\nimport { getInst, objHasOwnProperty } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SPLICE } from \"../__DynamicConstants\";\r\nimport { _getObjProto } from \"./HelperFuncs\";\r\nvar aiInstrumentHooks = \"_aiHooks\";\r\nvar cbNames = [\r\n    \"req\", \"rsp\", \"hkErr\", \"fnErr\"\r\n];\r\n/** @ignore */\r\nfunction _arrLoop(arr, fn) {\r\n    if (arr) {\r\n        for (var lp = 0; lp < arr[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            if (fn(arr[lp], lp)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _doCallbacks(hooks, callDetails, cbArgs, hookCtx, type) {\r\n    if (type >= 0 /* CallbackType.Request */ && type <= 2 /* CallbackType.HookError */) {\r\n        _arrLoop(hooks, function (hook, idx) {\r\n            var cbks = hook.cbks;\r\n            var cb = cbks[cbNames[type]];\r\n            if (cb) {\r\n                // Set the specific hook context implementation using a lazy creation pattern\r\n                callDetails.ctx = function () {\r\n                    var ctx = hookCtx[idx] = (hookCtx[idx] || {});\r\n                    return ctx;\r\n                };\r\n                try {\r\n                    cb[_DYN_APPLY /* @min:%2eapply */](callDetails.inst, cbArgs);\r\n                }\r\n                catch (err) {\r\n                    var orgEx = callDetails.err;\r\n                    try {\r\n                        // Report Hook error via the callback\r\n                        var hookErrorCb = cbks[cbNames[2 /* CallbackType.HookError */]];\r\n                        if (hookErrorCb) {\r\n                            callDetails.err = err;\r\n                            hookErrorCb[_DYN_APPLY /* @min:%2eapply */](callDetails.inst, cbArgs);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // Not much we can do here -- swallowing the exception to avoid crashing the hosting app\r\n                    }\r\n                    finally {\r\n                        // restore the original exception (if any)\r\n                        callDetails.err = orgEx;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _createFunctionHook(aiHook) {\r\n    // Define a temporary method that queues-up a the real method call\r\n    return function () {\r\n        var _a;\r\n        var funcThis = this;\r\n        // Capture the original arguments passed to the method\r\n        var orgArgs = arguments;\r\n        var hooks = aiHook.h;\r\n        var funcArgs = (_a = {},\r\n            _a[_DYN_NAME /* @min:name */] = aiHook.n,\r\n            _a.inst = funcThis,\r\n            _a.ctx = null,\r\n            _a.set = _replaceArg,\r\n            _a);\r\n        var hookCtx = [];\r\n        var cbArgs = _createArgs([funcArgs], orgArgs);\r\n        funcArgs.evt = getInst(\"event\");\r\n        function _createArgs(target, theArgs) {\r\n            _arrLoop(theArgs, function (arg) {\r\n                target[_DYN_PUSH /* @min:%2epush */](arg);\r\n            });\r\n            return target;\r\n        }\r\n        function _replaceArg(idx, value) {\r\n            orgArgs = _createArgs([], orgArgs);\r\n            orgArgs[idx] = value;\r\n            cbArgs = _createArgs([funcArgs], orgArgs);\r\n        }\r\n        // Call the pre-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 0 /* CallbackType.Request */);\r\n        // Call the original function was called\r\n        var theFunc = aiHook.f;\r\n        if (theFunc) {\r\n            try {\r\n                funcArgs.rslt = theFunc[_DYN_APPLY /* @min:%2eapply */](funcThis, orgArgs);\r\n            }\r\n            catch (err) {\r\n                // Report the request callback\r\n                funcArgs.err = err;\r\n                _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 3 /* CallbackType.FunctionError */);\r\n                // rethrow the original exception so anyone listening for it can catch the exception\r\n                throw err;\r\n            }\r\n        }\r\n        // Call the post-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 1 /* CallbackType.Response */);\r\n        return funcArgs.rslt;\r\n    };\r\n}\r\n/** @ignore */\r\nfunction _getOwner(target, name, checkPrototype, checkParentProto) {\r\n    var owner = null;\r\n    if (target) {\r\n        if (objHasOwnProperty(target, name)) {\r\n            owner = target;\r\n        }\r\n        else if (checkPrototype) {\r\n            owner = _getOwner(_getObjProto(target), name, checkParentProto, false);\r\n        }\r\n    }\r\n    return owner;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProto(target, funcName, callbacks) {\r\n    if (target) {\r\n        return InstrumentFunc(target[strShimPrototype], funcName, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProtos(target, funcNames, callbacks) {\r\n    if (target) {\r\n        return InstrumentFuncs(target[strShimPrototype], funcNames, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\nfunction _createInstrumentHook(owner, funcName, fn, callbacks) {\r\n    var aiHook = fn && fn[aiInstrumentHooks];\r\n    if (!aiHook) {\r\n        // Only hook the function once\r\n        aiHook = {\r\n            i: 0,\r\n            n: funcName,\r\n            f: fn,\r\n            h: []\r\n        };\r\n        // Override (hook) the original function\r\n        var newFunc = _createFunctionHook(aiHook);\r\n        newFunc[aiInstrumentHooks] = aiHook; // Tag and store the function hooks\r\n        owner[funcName] = newFunc;\r\n    }\r\n    var theHook = {\r\n        // tslint:disable:object-literal-shorthand\r\n        id: aiHook.i,\r\n        cbks: callbacks,\r\n        rm: function () {\r\n            // DO NOT Use () => { shorthand for the function as the this gets replaced\r\n            // with the outer this and not the this for theHook instance.\r\n            var id = this.id;\r\n            _arrLoop(aiHook.h, function (hook, idx) {\r\n                if (hook.id === id) {\r\n                    aiHook.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return 1;\r\n                }\r\n            });\r\n        }\r\n        // tslint:enable:object-literal-shorthand\r\n    };\r\n    aiHook.i++;\r\n    aiHook.h[_DYN_PUSH /* @min:%2epush */](theHook);\r\n    return theHook;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentFunc(target, funcName, callbacks, checkPrototype, checkParentProto) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    if (target && funcName && callbacks) {\r\n        var owner = _getOwner(target, funcName, checkPrototype, checkParentProto);\r\n        if (owner) {\r\n            var fn = owner[funcName];\r\n            if (typeof fn === strShimFunction) {\r\n                return _createInstrumentHook(owner, funcName, fn, callbacks);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentFuncs(target, funcNames, callbacks, checkPrototype, checkParentProto) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    var hooks = null;\r\n    _arrLoop(funcNames, function (funcName) {\r\n        var hook = InstrumentFunc(target, funcName, callbacks, checkPrototype, checkParentProto);\r\n        if (hook) {\r\n            if (!hooks) {\r\n                hooks = [];\r\n            }\r\n            hooks[_DYN_PUSH /* @min:%2epush */](hook);\r\n        }\r\n    });\r\n    return hooks;\r\n}\r\n/**\r\n * Add an instrumentation hook to the provided named \"event\" for the target class / object, this doesn't check whether the\r\n * named \"event\" is in fact a function and just assigns the instrumentation hook to the target[evtName]\r\n * @param target - The target object\r\n * @param evtName - The name of the event\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n * @param checkParentProto - If the function doesn't exist on the target or it's prototype should it attempt to hook the parent's prototype\r\n */\r\nexport function InstrumentEvent(target, evtName, callbacks, checkPrototype, checkParentProto) {\r\n    if (target && evtName && callbacks) {\r\n        var owner = _getOwner(target, evtName, checkPrototype, checkParentProto) || target;\r\n        if (owner) {\r\n            return _createInstrumentHook(owner, evtName, owner[evtName], callbacks);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=InstrumentHooks.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\nexport var DEFAULT_BREEZE_PATH = \"/v2/track\";\r\nexport var strNotSpecified = \"not_specified\";\r\nexport var strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createValueMap } from \"@microsoft/applicationinsights-core-js\";\r\nexport var RequestHeaders = createValueMap({\r\n    requestContextHeader: [0 /* eRequestHeaders.requestContextHeader */, \"Request-Context\"],\r\n    requestContextTargetKey: [1 /* eRequestHeaders.requestContextTargetKey */, \"appId\"],\r\n    requestContextAppIdFormat: [2 /* eRequestHeaders.requestContextAppIdFormat */, \"appId=cid-v1:\"],\r\n    requestIdHeader: [3 /* eRequestHeaders.requestIdHeader */, \"Request-Id\"],\r\n    traceParentHeader: [4 /* eRequestHeaders.traceParentHeader */, \"traceparent\"],\r\n    traceStateHeader: [5 /* eRequestHeaders.traceStateHeader */, \"tracestate\"],\r\n    sdkContextHeader: [6 /* eRequestHeaders.sdkContextHeader */, \"Sdk-Context\"],\r\n    sdkContextHeaderAppIdRequest: [7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */, \"appId\"],\r\n    requestContextHeaderLowerCase: [8 /* eRequestHeaders.requestContextHeaderLowerCase */, \"request-context\"]\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_LENGTH = \"length\"; // Count: 41\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 6\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 9\r\nexport var _DYN_PUSH = \"push\"; // Count: 5\r\nexport var _DYN_REMOVE_ITEM = \"removeItem\"; // Count: 3\r\nexport var _DYN_NAME = \"name\"; // Count: 11\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 10\r\nexport var _DYN_COUNT = \"count\"; // Count: 8\r\nexport var _DYN_PRE_TRIGGER_DATE = \"preTriggerDate\"; // Count: 4\r\nexport var _DYN_DISABLED = \"disabled\"; // Count: 3\r\nexport var _DYN_INTERVAL = \"interval\"; // Count: 3\r\nexport var _DYN_DAYS_OF_MONTH = \"daysOfMonth\"; // Count: 3\r\nexport var _DYN_DATE = \"date\"; // Count: 5\r\nexport var _DYN_GET_UTCDATE = \"getUTCDate\"; // Count: 3\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 4\r\nexport var _DYN_PATHNAME = \"pathname\"; // Count: 4\r\nexport var _DYN_CORRELATION_HEADER_E0 = \"correlationHeaderExcludePatterns\"; // Count: 2\r\nexport var _DYN_EXTENSION_CONFIG = \"extensionConfig\"; // Count: 4\r\nexport var _DYN_EXCEPTIONS = \"exceptions\"; // Count: 6\r\nexport var _DYN_PARSED_STACK = \"parsedStack\"; // Count: 13\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 9\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 9\r\nexport var _DYN_SIZE_IN_BYTES = \"sizeInBytes\"; // Count: 11\r\nexport var _DYN_TYPE_NAME = \"typeName\"; // Count: 11\r\nexport var _DYN_SEVERITY_LEVEL = \"severityLevel\"; // Count: 5\r\nexport var _DYN_PROBLEM_GROUP = \"problemGroup\"; // Count: 3\r\nexport var _DYN_IS_MANUAL = \"isManual\"; // Count: 3\r\nexport var _DYN__CREATE_FROM_INTERFA1 = \"CreateFromInterface\"; // Count: 2\r\nexport var _DYN_ASSEMBLY = \"assembly\"; // Count: 7\r\nexport var _DYN_FILE_NAME = \"fileName\"; // Count: 8\r\nexport var _DYN_HAS_FULL_STACK = \"hasFullStack\"; // Count: 6\r\nexport var _DYN_LEVEL = \"level\"; // Count: 5\r\nexport var _DYN_METHOD = \"method\"; // Count: 7\r\nexport var _DYN_LINE = \"line\"; // Count: 6\r\nexport var _DYN_DURATION = \"duration\"; // Count: 4\r\nexport var _DYN_RECEIVED_RESPONSE = \"receivedResponse\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, getJSON, hasJSON, isObject, objForEachKey, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { asString, strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_STRINGIFY, _DYN_TO_STRING } from \"../../__DynamicConstants\";\r\nexport function dataSanitizeKeyAndAddUniqueness(logger, key, map) {\r\n    var origLength = key[_DYN_LENGTH /* @min:%2elength */];\r\n    var field = dataSanitizeKey(logger, key);\r\n    // validation truncated the length.  We need to add uniqueness\r\n    if (field[_DYN_LENGTH /* @min:%2elength */] !== origLength) {\r\n        var i = 0;\r\n        var uniqueField = field;\r\n        while (map[uniqueField] !== undefined) {\r\n            i++;\r\n            uniqueField = strSubstring(field, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ - 3) + dsPadNumber(i);\r\n        }\r\n        field = uniqueField;\r\n    }\r\n    return field;\r\n}\r\nexport function dataSanitizeKey(logger, name) {\r\n    var nameTrunc;\r\n    if (name) {\r\n        // Remove any leading or trailing whitespace\r\n        name = strTrim(asString(name));\r\n        // truncate the string to 150 chars\r\n        if (name[_DYN_LENGTH /* @min:%2elength */] > 150 /* DataSanitizerValues.MAX_NAME_LENGTH */) {\r\n            nameTrunc = strSubstring(name, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 57 /* _eInternalMessageId.NameTooLong */, \"name is too long.  It has been truncated to \" + 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ + \" characters.\", { name: name }, true);\r\n        }\r\n    }\r\n    return nameTrunc || name;\r\n}\r\nexport function dataSanitizeString(logger, value, maxLength) {\r\n    if (maxLength === void 0) { maxLength = 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; }\r\n    var valueTrunc;\r\n    if (value) {\r\n        maxLength = maxLength ? maxLength : 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; // in case default parameters dont work\r\n        value = strTrim(asString(value));\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            valueTrunc = strSubstring(value, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 61 /* _eInternalMessageId.StringValueTooLong */, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n        }\r\n    }\r\n    return valueTrunc || value;\r\n}\r\nexport function dataSanitizeUrl(logger, url) {\r\n    return dataSanitizeInput(logger, url, 2048 /* DataSanitizerValues.MAX_URL_LENGTH */, 66 /* _eInternalMessageId.UrlTooLong */);\r\n}\r\nexport function dataSanitizeMessage(logger, message) {\r\n    var messageTrunc;\r\n    if (message) {\r\n        if (message[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */) {\r\n            messageTrunc = strSubstring(message, 0, 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 56 /* _eInternalMessageId.MessageTruncated */, \"message is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */ + \" characters.\", { message: message }, true);\r\n        }\r\n    }\r\n    return messageTrunc || message;\r\n}\r\nexport function dataSanitizeException(logger, exception) {\r\n    var exceptionTrunc;\r\n    if (exception) {\r\n        // Make surte its a string\r\n        var value = \"\" + exception;\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */) {\r\n            exceptionTrunc = strSubstring(value, 0, 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 52 /* _eInternalMessageId.ExceptionTruncated */, \"exception is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */ + \" characters.\", { exception: exception }, true);\r\n        }\r\n    }\r\n    return exceptionTrunc || exception;\r\n}\r\nexport function dataSanitizeProperties(logger, properties) {\r\n    if (properties) {\r\n        var tempProps_1 = {};\r\n        objForEachKey(properties, function (prop, value) {\r\n            if (isObject(value) && hasJSON()) {\r\n                // Stringify any part C properties\r\n                try {\r\n                    value = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"custom property is not valid\", { exception: e }, true);\r\n                }\r\n            }\r\n            value = dataSanitizeString(logger, value, 8192 /* DataSanitizerValues.MAX_PROPERTY_LENGTH */);\r\n            prop = dataSanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);\r\n            tempProps_1[prop] = value;\r\n        });\r\n        properties = tempProps_1;\r\n    }\r\n    return properties;\r\n}\r\nexport function dataSanitizeMeasurements(logger, measurements) {\r\n    if (measurements) {\r\n        var tempMeasurements_1 = {};\r\n        objForEachKey(measurements, function (measure, value) {\r\n            measure = dataSanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);\r\n            tempMeasurements_1[measure] = value;\r\n        });\r\n        measurements = tempMeasurements_1;\r\n    }\r\n    return measurements;\r\n}\r\nexport function dataSanitizeId(logger, id) {\r\n    return id ? dataSanitizeInput(logger, id, 128 /* DataSanitizerValues.MAX_ID_LENGTH */, 69 /* _eInternalMessageId.IdTooLong */)[_DYN_TO_STRING /* @min:%2etoString */]() : id;\r\n}\r\nexport function dataSanitizeInput(logger, input, maxLength, _msgId) {\r\n    var inputTrunc;\r\n    if (input) {\r\n        input = strTrim(asString(input));\r\n        if (input[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            inputTrunc = strSubstring(input, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n        }\r\n    }\r\n    return inputTrunc || input;\r\n}\r\nexport function dsPadNumber(num) {\r\n    var s = \"00\" + num;\r\n    return strSubstr(s, s[_DYN_LENGTH /* @min:%2elength */] - 3);\r\n}\r\n//# sourceMappingURL=DataSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PATHNAME, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _document = getDocument() || {};\r\nvar _htmlAnchorIdx = 0;\r\n// Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs\r\n// Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates\r\nvar _htmlAnchorElement = [null, null, null, null, null];\r\nexport function urlParseUrl(url) {\r\n    var anchorIdx = _htmlAnchorIdx;\r\n    var anchorCache = _htmlAnchorElement;\r\n    var tempAnchor = anchorCache[anchorIdx];\r\n    if (!_document.createElement) {\r\n        // Always create the temp instance if createElement is not available\r\n        tempAnchor = { host: urlParseHost(url, true) };\r\n    }\r\n    else if (!anchorCache[anchorIdx]) {\r\n        // Create and cache the unattached anchor instance\r\n        tempAnchor = anchorCache[anchorIdx] = _document.createElement(\"a\");\r\n    }\r\n    tempAnchor.href = url;\r\n    // Move the cache index forward\r\n    anchorIdx++;\r\n    if (anchorIdx >= anchorCache[_DYN_LENGTH /* @min:%2elength */]) {\r\n        anchorIdx = 0;\r\n    }\r\n    _htmlAnchorIdx = anchorIdx;\r\n    return tempAnchor;\r\n}\r\nexport function urlGetAbsoluteUrl(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a.href;\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetPathName(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a[_DYN_PATHNAME /* @min:%2epathname */];\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetCompleteUrl(method, absoluteUrl) {\r\n    if (method) {\r\n        return method.toUpperCase() + \" \" + absoluteUrl;\r\n    }\r\n    return absoluteUrl;\r\n}\r\n// Fallback method to grab host from url if document.createElement method is not available\r\nexport function urlParseHost(url, inclPort) {\r\n    var fullHost = urlParseFullHost(url, inclPort) || \"\";\r\n    if (fullHost) {\r\n        var match = fullHost.match(/(www\\d{0,5}\\.)?([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 3 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            return match[2] + (match[3] || \"\");\r\n        }\r\n    }\r\n    return fullHost;\r\n}\r\nexport function urlParseFullHost(url, inclPort) {\r\n    var result = null;\r\n    if (url) {\r\n        var match = url.match(/(\\w{1,150}):\\/\\/([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 2 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            result = match[2] || \"\";\r\n            if (inclPort && match[_DYN_LENGTH /* @min:%2elength */] > 2) {\r\n                var protocol = (match[1] || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                var port = match[3] || \"\";\r\n                // IE includes the standard port so pass it off if it's the same as the protocol\r\n                if (protocol === \"http\" && port === \":80\") {\r\n                    port = \"\";\r\n                }\r\n                else if (protocol === \"https\" && port === \":443\") {\r\n                    port = \"\";\r\n                }\r\n                result += port;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=UrlHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dateNow, getPerformance, isNullOrUndefined, isValidSpanId, isValidTraceId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH } from \"./Constants\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { urlParseFullHost, urlParseUrl } from \"./UrlHelperFuncs\";\r\nimport { _DYN_CORRELATION_HEADER_E0, _DYN_LENGTH, _DYN_NAME, _DYN_PATHNAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\n// listing only non-geo specific locations\r\nvar _internalEndpoints = [\r\n    DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH,\r\n    \"https://breeze.aimon.applicationinsights.io\" + DEFAULT_BREEZE_PATH,\r\n    \"https://dc-int.services.visualstudio.com\" + DEFAULT_BREEZE_PATH\r\n];\r\nvar _correlationIdPrefix = \"cid-v1:\";\r\nexport function isInternalApplicationInsightsEndpoint(endpointUrl) {\r\n    return arrIndexOf(_internalEndpoints, endpointUrl[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) !== -1;\r\n}\r\nexport function correlationIdSetPrefix(prefix) {\r\n    _correlationIdPrefix = prefix;\r\n}\r\nexport function correlationIdGetPrefix() {\r\n    return _correlationIdPrefix;\r\n}\r\n/**\r\n * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n */\r\nexport function correlationIdCanIncludeCorrelationHeader(config, requestUrl, currentHost) {\r\n    if (!requestUrl || (config && config.disableCorrelationHeaders)) {\r\n        return false;\r\n    }\r\n    if (config && config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */]) {\r\n        for (var i = 0; i < config.correlationHeaderExcludePatterns[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */][i].test(requestUrl)) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    var requestHost = urlParseUrl(requestUrl).host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    if (requestHost && (strIndexOf(requestHost, \":443\") !== -1 || strIndexOf(requestHost, \":80\") !== -1)) {\r\n        // [Bug #1260] IE can include the port even for http and https URLs so if present\r\n        // try and parse it to remove if it matches the default protocol port\r\n        requestHost = (urlParseFullHost(requestUrl, true) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    }\r\n    if ((!config || !config.enableCorsCorrelation) && (requestHost && requestHost !== currentHost)) {\r\n        return false;\r\n    }\r\n    var includedDomains = config && config.correlationHeaderDomains;\r\n    if (includedDomains) {\r\n        var matchExists_1;\r\n        arrForEach(includedDomains, function (domain) {\r\n            var regex = new RegExp(domain.toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n            matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n        });\r\n        if (!matchExists_1) {\r\n            return false;\r\n        }\r\n    }\r\n    var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n    if (!excludedDomains || excludedDomains[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < excludedDomains[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n        if (regex.test(requestHost)) {\r\n            return false;\r\n        }\r\n    }\r\n    // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n    // Previously we always returned false for a falsy requestHost\r\n    return requestHost && requestHost[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\n/**\r\n * Combines target appId and target role name from response header.\r\n */\r\nexport function correlationIdGetCorrelationContext(responseHeader) {\r\n    if (responseHeader) {\r\n        var correlationId = correlationIdGetCorrelationContextValue(responseHeader, RequestHeaders[1 /* eRequestHeaders.requestContextTargetKey */]);\r\n        if (correlationId && correlationId !== _correlationIdPrefix) {\r\n            return correlationId;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Gets key from correlation response header\r\n */\r\nexport function correlationIdGetCorrelationContextValue(responseHeader, key) {\r\n    if (responseHeader) {\r\n        var keyValues = responseHeader[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        for (var i = 0; i < keyValues[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            var keyValue = keyValues[i][_DYN_SPLIT /* @min:%2esplit */](\"=\");\r\n            if (keyValue[_DYN_LENGTH /* @min:%2elength */] === 2 && keyValue[0] === key) {\r\n                return keyValue[1];\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName) {\r\n    var target, name = commandName, data = commandName;\r\n    if (absoluteUrl && absoluteUrl[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        var parsedUrl = urlParseUrl(absoluteUrl);\r\n        target = parsedUrl.host;\r\n        if (!name) {\r\n            if (parsedUrl[_DYN_PATHNAME /* @min:%2epathname */] != null) {\r\n                var pathName = (parsedUrl.pathname[_DYN_LENGTH /* @min:%2elength */] === 0) ? \"/\" : parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                if (pathName.charAt(0) !== \"/\") {\r\n                    pathName = \"/\" + pathName;\r\n                }\r\n                data = parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                name = dataSanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n            }\r\n            else {\r\n                name = dataSanitizeString(logger, absoluteUrl);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        target = commandName;\r\n        name = commandName;\r\n    }\r\n    return {\r\n        target: target,\r\n        name: name,\r\n        data: data\r\n    };\r\n}\r\nexport function dateTimeUtilsNow() {\r\n    // returns the window or webworker performance object\r\n    var perf = getPerformance();\r\n    if (perf && perf.now && perf.timing) {\r\n        var now = perf.now() + perf.timing.navigationStart;\r\n        // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback\r\n        if (now > 0) {\r\n            return now;\r\n        }\r\n    }\r\n    return dateNow();\r\n}\r\nexport function dateTimeUtilsDuration(start, end) {\r\n    var result = null;\r\n    if (start !== 0 && end !== 0 && !isNullOrUndefined(start) && !isNullOrUndefined(end)) {\r\n        result = end - start;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext from an optional telemetryTrace\r\n * @param telemetryTrace - The telemetryTrace instance that is being wrapped\r\n * @param parentCtx - An optional parent distributed trace instance, almost always undefined as this scenario is only used in the case of multiple property handlers.\r\n * @returns A new IDistributedTraceContext instance that is backed by the telemetryTrace or temporary object\r\n */\r\nexport function createDistributedTraceContextFromTrace(telemetryTrace, parentCtx) {\r\n    var trace = telemetryTrace || {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace.traceID;\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace.traceID = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace.parentID;\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace.parentID = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace.traceFlags;\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace.traceFlags = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Util.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\nexport var StorageType = createEnumStyle({\r\n    LocalStorage: 0 /* eStorageType.LocalStorage */,\r\n    SessionStorage: 1 /* eStorageType.SessionStorage */\r\n});\r\nexport var DistributedTracingModes = createEnumStyle({\r\n    AI: 0 /* eDistributedTracingModes.AI */,\r\n    AI_AND_W3C: 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    W3C: 2 /* eDistributedTracingModes.W3C */\r\n});\r\n/**\r\n * The EventPersistence contains a set of values that specify the event's persistence.\r\n */\r\nexport var EventPersistence = createEnumStyle({\r\n    /**\r\n     * Normal persistence.\r\n     */\r\n    Normal: 1 /* EventPersistenceValue.Normal */,\r\n    /**\r\n     * Critical persistence.\r\n     */\r\n    Critical: 2 /* EventPersistenceValue.Critical */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, dumpObj, getExceptionName, getGlobal, getGlobalInst, isNullOrUndefined, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { StorageType } from \"./Enums\";\r\nimport { _DYN_PUSH, _DYN_REMOVE_ITEM, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar _canUseLocalStorage = undefined;\r\nvar _canUseSessionStorage = undefined;\r\nvar _storagePrefix = \"\";\r\n/**\r\n * Gets the localStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getLocalStorageObject() {\r\n    if (utlCanUseLocalStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n * @param storageType - Type of storage\r\n * @return {Storage} Returns storage object verified that it is usable\r\n */\r\nfunction _getVerifiedStorageObject(storageType) {\r\n    try {\r\n        if (isNullOrUndefined(getGlobal())) {\r\n            return null;\r\n        }\r\n        var uid = (new Date)[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        var storage = getGlobalInst(storageType === StorageType.LocalStorage ? \"localStorage\" : \"sessionStorage\");\r\n        var name_1 = _storagePrefix + uid;\r\n        storage.setItem(name_1, uid);\r\n        var fail = storage.getItem(name_1) !== uid;\r\n        storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name_1);\r\n        if (!fail) {\r\n            return storage;\r\n        }\r\n    }\r\n    catch (exception) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Gets the sessionStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getSessionStorageObject() {\r\n    if (utlCanUseSessionStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Disables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlDisableStorage() {\r\n    _canUseLocalStorage = false;\r\n    _canUseSessionStorage = false;\r\n}\r\nexport function utlSetStoragePrefix(storagePrefix) {\r\n    _storagePrefix = storagePrefix || \"\";\r\n}\r\n/**\r\n * Re-enables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlEnableStorage() {\r\n    _canUseLocalStorage = utlCanUseLocalStorage(true);\r\n    _canUseSessionStorage = utlCanUseSessionStorage(true);\r\n}\r\n/**\r\n * Returns whether LocalStorage can be used, if the reset parameter is passed a true this will override\r\n * any previous disable calls.\r\n * @param reset - Should the usage be reset and determined only based on whether LocalStorage is available\r\n */\r\nexport function utlCanUseLocalStorage(reset) {\r\n    if (reset || _canUseLocalStorage === undefined) {\r\n        _canUseLocalStorage = !!_getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return _canUseLocalStorage;\r\n}\r\nexport function utlGetLocalStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 1 /* _eInternalMessageId.BrowserCannotReadLocalStorage */, \"Browser failed read of local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetLocalStorage(logger, name, data) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 3 /* _eInternalMessageId.BrowserCannotWriteLocalStorage */, \"Browser failed write to local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 5 /* _eInternalMessageId.BrowserFailedRemovalFromLocalStorage */, \"Browser failed removal of local storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlCanUseSessionStorage(reset) {\r\n    if (reset || _canUseSessionStorage === undefined) {\r\n        _canUseSessionStorage = !!_getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return _canUseSessionStorage;\r\n}\r\nexport function utlGetSessionStorageKeys() {\r\n    var keys = [];\r\n    if (utlCanUseSessionStorage()) {\r\n        objForEachKey(getGlobalInst(\"sessionStorage\"), function (key) {\r\n            keys[_DYN_PUSH /* @min:%2epush */](key);\r\n        });\r\n    }\r\n    return keys;\r\n}\r\nexport function utlGetSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 2 /* _eInternalMessageId.BrowserCannotReadSessionStorage */, \"Browser failed read of session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetSessionStorage(logger, name, data) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 4 /* _eInternalMessageId.BrowserCannotWriteSessionStorage */, \"Browser failed write to session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 6 /* _eInternalMessageId.BrowserFailedRemovalFromSessionStorage */, \"Browser failed removal of session storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=StorageHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { _throwInternal, arrIndexOf, isNotNullOrUndefined, isNullOrUndefined, onConfigChange, randomValue, safeGetLogger, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { arrForEach, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage } from \"./StorageHelperFuncs\";\r\nimport { _DYN_COUNT, _DYN_DATE, _DYN_DAYS_OF_MONTH, _DYN_DISABLED, _DYN_GET_UTCDATE, _DYN_INTERVAL, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PRE_TRIGGER_DATE, _DYN_PUSH, _DYN_STRINGIFY } from \"./__DynamicConstants\";\r\nvar THROTTLE_STORAGE_PREFIX = \"appInsightsThrottle\";\r\nvar ThrottleMgr = /** @class */ (function () {\r\n    function ThrottleMgr(core, namePrefix) {\r\n        var _self = this;\r\n        var _canUseLocalStorage;\r\n        var _logger;\r\n        var _config;\r\n        var _localStorageObj;\r\n        var _isTriggered; //_isTriggered is to make sure that we only trigger throttle once a day\r\n        var _namePrefix;\r\n        var _queue;\r\n        var _isReady = false;\r\n        var _isSpecificDaysGiven = false;\r\n        _initConfig();\r\n        // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n        _self[\"_getDbgPlgTargets\"] = function () {\r\n            return [_queue];\r\n        };\r\n        _self.getConfig = function () {\r\n            return _config;\r\n        };\r\n        /**\r\n         * Check if it is the correct day to send message.\r\n         * If _isTriggered is true, even if canThrottle returns true, message will not be sent,\r\n         * because we only allow triggering sendMessage() once a day.\r\n         * @returns if the current date is the valid date to send message\r\n         */\r\n        _self.canThrottle = function (msgId) {\r\n            var localObj = _getLocalStorageObjByKey(msgId);\r\n            var cfg = _getCfgByKey(msgId);\r\n            return _canThrottle(cfg, _canUseLocalStorage, localObj);\r\n        };\r\n        /**\r\n         * Check if throttle is triggered on current day(UTC)\r\n         * if canThrottle returns false, isTriggered will return false\r\n         * @returns if throttle is triggered on current day(UTC)\r\n         */\r\n        _self.isTriggered = function (msgId) {\r\n            return _isTrigger(msgId);\r\n        };\r\n        /**\r\n         * Before isReady set to true, all message will be stored in queue.\r\n         * Message will only be sent out after isReady set to true.\r\n         * Initial and default value: false\r\n         * @returns isReady state\r\n         */\r\n        _self.isReady = function () {\r\n            return _isReady;\r\n        };\r\n        /**\r\n         * Flush all message with given message key in queue with isReady state set to true.\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.flush = function (msgId) {\r\n            try {\r\n                var queue = _getQueueByKey(msgId);\r\n                if (queue && queue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var items = queue.slice(0);\r\n                    _queue[msgId] = [];\r\n                    arrForEach(items, function (item) {\r\n                        _flushMessage(item.msgID, item[_DYN_MESSAGE /* @min:%2emessage */], item.severity, false);\r\n                    });\r\n                    return true;\r\n                }\r\n            }\r\n            catch (err) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Flush all message in queue with isReady state set to true.\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.flushAll = function () {\r\n            try {\r\n                if (_queue) {\r\n                    var result_1 = true;\r\n                    objForEachKey(_queue, function (key) {\r\n                        var isFlushed = _self.flush(parseInt(key));\r\n                        result_1 = result_1 && isFlushed;\r\n                    });\r\n                    return result_1;\r\n                }\r\n            }\r\n            catch (err) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Set isReady State\r\n         * if isReady set to true, message queue will be flushed automatically.\r\n         * @param isReady isReady State\r\n         * @pa\r\n         * @returns if message queue is flushed\r\n         */\r\n        _self.onReadyState = function (isReady, flushAll) {\r\n            if (flushAll === void 0) { flushAll = true; }\r\n            _isReady = isNullOrUndefined(isReady) ? true : isReady;\r\n            if (_isReady && flushAll) {\r\n                return _self.flushAll();\r\n            }\r\n            return null;\r\n        };\r\n        _self.sendMessage = function (msgID, message, severity) {\r\n            return _flushMessage(msgID, message, severity, true);\r\n        };\r\n        function _flushMessage(msgID, message, severity, saveUnsentMsg) {\r\n            if (_isReady) {\r\n                var isSampledIn = _canSampledIn(msgID);\r\n                if (!isSampledIn) {\r\n                    return;\r\n                }\r\n                var cfg = _getCfgByKey(msgID);\r\n                var localStorageObj = _getLocalStorageObjByKey(msgID);\r\n                var canThrottle = _canThrottle(cfg, _canUseLocalStorage, localStorageObj);\r\n                var throttled = false;\r\n                var number = 0;\r\n                var isTriggered = _isTrigger(msgID);\r\n                try {\r\n                    if (canThrottle && !isTriggered) {\r\n                        number = Math.min(cfg.limit.maxSendNumber, localStorageObj[_DYN_COUNT /* @min:%2ecount */] + 1);\r\n                        localStorageObj[_DYN_COUNT /* @min:%2ecount */] = 0;\r\n                        throttled = true;\r\n                        _isTriggered[msgID] = true;\r\n                        localStorageObj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */] = new Date();\r\n                    }\r\n                    else {\r\n                        _isTriggered[msgID] = canThrottle;\r\n                        localStorageObj[_DYN_COUNT /* @min:%2ecount */] += 1;\r\n                    }\r\n                    var localStorageName = _getLocalStorageName(msgID);\r\n                    _resetLocalStorage(_logger, localStorageName, localStorageObj);\r\n                    for (var i = 0; i < number; i++) {\r\n                        _sendMessage(msgID, _logger, message, severity);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return {\r\n                    isThrottled: throttled,\r\n                    throttleNum: number\r\n                };\r\n            }\r\n            else {\r\n                if (!!saveUnsentMsg) {\r\n                    var queue = _getQueueByKey(msgID);\r\n                    queue[_DYN_PUSH /* @min:%2epush */]({\r\n                        msgID: msgID,\r\n                        message: message,\r\n                        severity: severity\r\n                    });\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        function _initConfig() {\r\n            _logger = safeGetLogger(core);\r\n            _isTriggered = {};\r\n            _localStorageObj = {};\r\n            _queue = {};\r\n            _config = {};\r\n            _setCfgByKey(109 /* _eInternalMessageId.DefaultThrottleMsgKey */);\r\n            _namePrefix = isNotNullOrUndefined(namePrefix) ? namePrefix : \"\";\r\n            core.addUnloadHook(onConfigChange(core.config, function (details) {\r\n                var coreConfig = details.cfg;\r\n                _canUseLocalStorage = utlCanUseLocalStorage();\r\n                var configMgr = coreConfig.throttleMgrCfg || {};\r\n                objForEachKey(configMgr, function (key, cfg) {\r\n                    _setCfgByKey(parseInt(key), cfg);\r\n                });\r\n            }));\r\n        }\r\n        function _getCfgByKey(msgID) {\r\n            return _config[msgID] || _config[109 /* _eInternalMessageId.DefaultThrottleMsgKey */];\r\n        }\r\n        function _setCfgByKey(msgID, config) {\r\n            var _a, _b;\r\n            try {\r\n                var cfg = config || {};\r\n                var curCfg = {};\r\n                curCfg[_DYN_DISABLED /* @min:%2edisabled */] = !!cfg[_DYN_DISABLED /* @min:%2edisabled */];\r\n                var configInterval = cfg[_DYN_INTERVAL /* @min:%2einterval */] || {};\r\n                _isSpecificDaysGiven = (configInterval === null || configInterval === void 0 ? void 0 : configInterval.daysOfMonth) && (configInterval === null || configInterval === void 0 ? void 0 : configInterval.daysOfMonth[_DYN_LENGTH /* @min:%2elength */]) > 0;\r\n                curCfg[_DYN_INTERVAL /* @min:%2einterval */] = _getIntervalConfig(configInterval);\r\n                var limit = {\r\n                    samplingRate: ((_a = cfg.limit) === null || _a === void 0 ? void 0 : _a.samplingRate) || 100,\r\n                    // dafault: every time sent only 1 event\r\n                    maxSendNumber: ((_b = cfg.limit) === null || _b === void 0 ? void 0 : _b.maxSendNumber) || 1\r\n                };\r\n                curCfg.limit = limit;\r\n                _config[msgID] = curCfg;\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n        }\r\n        function _getIntervalConfig(interval) {\r\n            interval = interval || {};\r\n            var monthInterval = interval === null || interval === void 0 ? void 0 : interval.monthInterval;\r\n            var dayInterval = interval === null || interval === void 0 ? void 0 : interval.dayInterval;\r\n            // default: send data every 3 month each year\r\n            if (isNullOrUndefined(monthInterval) && isNullOrUndefined(dayInterval)) {\r\n                interval.monthInterval = 3;\r\n                if (!_isSpecificDaysGiven) {\r\n                    // default: send data on 28th\r\n                    interval[_DYN_DAYS_OF_MONTH /* @min:%2edaysOfMonth */] = [28];\r\n                    _isSpecificDaysGiven = true;\r\n                }\r\n            }\r\n            interval = {\r\n                // dafault: sent every three months\r\n                monthInterval: interval === null || interval === void 0 ? void 0 : interval.monthInterval,\r\n                dayInterval: interval === null || interval === void 0 ? void 0 : interval.dayInterval,\r\n                daysOfMonth: interval === null || interval === void 0 ? void 0 : interval.daysOfMonth\r\n            };\r\n            return interval;\r\n        }\r\n        function _canThrottle(config, canUseLocalStorage, localStorageObj) {\r\n            if (config && !config[_DYN_DISABLED /* @min:%2edisabled */] && canUseLocalStorage && isNotNullOrUndefined(localStorageObj)) {\r\n                var curDate = _getThrottleDate();\r\n                var date = localStorageObj[_DYN_DATE /* @min:%2edate */];\r\n                var interval = config[_DYN_INTERVAL /* @min:%2einterval */];\r\n                var monthCheck = 1;\r\n                if (interval === null || interval === void 0 ? void 0 : interval.monthInterval) {\r\n                    var monthExpand = (curDate.getUTCFullYear() - date.getUTCFullYear()) * 12 + curDate.getUTCMonth() - date.getUTCMonth();\r\n                    monthCheck = _checkInterval(interval.monthInterval, 0, monthExpand);\r\n                }\r\n                var dayCheck = 1;\r\n                if (_isSpecificDaysGiven) {\r\n                    dayCheck = arrIndexOf(interval[_DYN_DAYS_OF_MONTH /* @min:%2edaysOfMonth */], curDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]());\r\n                }\r\n                else if (interval === null || interval === void 0 ? void 0 : interval.dayInterval) {\r\n                    var daySpan = Math.floor((curDate.getTime() - date.getTime()) / 86400000);\r\n                    dayCheck = _checkInterval(interval.dayInterval, 0, daySpan);\r\n                }\r\n                return monthCheck >= 0 && dayCheck >= 0;\r\n            }\r\n            return false;\r\n        }\r\n        function _getLocalStorageName(msgKey, prefix) {\r\n            var fix = isNotNullOrUndefined(prefix) ? prefix : \"\";\r\n            if (msgKey) {\r\n                return THROTTLE_STORAGE_PREFIX + fix + \"-\" + msgKey;\r\n            }\r\n            return null;\r\n        }\r\n        // returns if throttle is triggered on current Date\r\n        function _isTriggeredOnCurDate(preTriggerDate) {\r\n            try {\r\n                if (preTriggerDate) {\r\n                    var curDate = new Date();\r\n                    return preTriggerDate.getUTCFullYear() === curDate.getUTCFullYear() &&\r\n                        preTriggerDate.getUTCMonth() === curDate.getUTCMonth() &&\r\n                        preTriggerDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]() === curDate[_DYN_GET_UTCDATE /* @min:%2egetUTCDate */]();\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        // transfer local storage string value to object that identifies start date, current count and preTriggerDate\r\n        function _getLocalStorageObj(value, logger, storageName) {\r\n            try {\r\n                var storageObj = {\r\n                    date: _getThrottleDate(),\r\n                    count: 0\r\n                };\r\n                if (value) {\r\n                    var obj = JSON.parse(value);\r\n                    var curObj = {\r\n                        date: _getThrottleDate(obj[_DYN_DATE /* @min:%2edate */]) || storageObj[_DYN_DATE /* @min:%2edate */],\r\n                        count: obj[_DYN_COUNT /* @min:%2ecount */] || storageObj[_DYN_COUNT /* @min:%2ecount */],\r\n                        preTriggerDate: obj.preTriggerDate ? _getThrottleDate(obj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */]) : undefined\r\n                    };\r\n                    return curObj;\r\n                }\r\n                else {\r\n                    _resetLocalStorage(logger, storageName, storageObj);\r\n                    return storageObj;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        // if datestr is not defined, current date will be returned\r\n        function _getThrottleDate(dateStr) {\r\n            // if new Date() can't be created through the provided dateStr, null will be returned.\r\n            try {\r\n                if (dateStr) {\r\n                    var date = new Date(dateStr);\r\n                    //make sure it is a valid Date Object\r\n                    if (!isNaN(date.getDate())) {\r\n                        return date;\r\n                    }\r\n                }\r\n                else {\r\n                    return new Date();\r\n                }\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        function _resetLocalStorage(logger, storageName, obj) {\r\n            try {\r\n                return utlSetLocalStorage(logger, storageName, strTrim(JSON[_DYN_STRINGIFY /* @min:%2estringify */](obj)));\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        function _checkInterval(interval, start, current) {\r\n            if (interval <= 0) {\r\n                return 1;\r\n            }\r\n            // count from start year\r\n            return (current >= start) && (current - start) % interval == 0 ? Math.floor((current - start) / interval) + 1 : -1;\r\n        }\r\n        function _sendMessage(msgID, logger, message, severity) {\r\n            _throwInternal(logger, severity || 1 /* eLoggingSeverity.CRITICAL */, msgID, message);\r\n        }\r\n        // NOTE: config.limit.samplingRate is set to 4 decimal places,\r\n        // so config.limit.samplingRate = 1 means 0.0001%\r\n        function _canSampledIn(msgID) {\r\n            try {\r\n                var cfg = _getCfgByKey(msgID);\r\n                return randomValue(1000000) <= cfg.limit.samplingRate;\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return false;\r\n        }\r\n        function _getLocalStorageObjByKey(key) {\r\n            try {\r\n                var curObj = _localStorageObj[key];\r\n                if (!curObj) {\r\n                    var localStorageName = _getLocalStorageName(key, _namePrefix);\r\n                    curObj = _getLocalStorageObj(utlGetLocalStorage(_logger, localStorageName), _logger, localStorageName);\r\n                    _localStorageObj[key] = curObj;\r\n                }\r\n                return _localStorageObj[key];\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            return null;\r\n        }\r\n        function _isTrigger(key) {\r\n            var isTrigger = _isTriggered[key];\r\n            if (isNullOrUndefined(isTrigger)) {\r\n                isTrigger = false;\r\n                var localStorageObj = _getLocalStorageObjByKey(key);\r\n                if (localStorageObj) {\r\n                    isTrigger = _isTriggeredOnCurDate(localStorageObj[_DYN_PRE_TRIGGER_DATE /* @min:%2epreTriggerDate */]);\r\n                }\r\n                _isTriggered[key] = isTrigger;\r\n            }\r\n            return _isTriggered[key];\r\n        }\r\n        function _getQueueByKey(key) {\r\n            _queue = _queue || {};\r\n            if (isNullOrUndefined(_queue[key])) {\r\n                _queue[key] = [];\r\n            }\r\n            return _queue[key];\r\n        }\r\n    }\r\n    return ThrottleMgr;\r\n}());\r\nexport { ThrottleMgr };\r\n//# sourceMappingURL=ThrottleMgr.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strNotSpecified } from \"../../Constants\";\r\nimport { _DYN_NAME } from \"../../__DynamicConstants\";\r\nimport { dataSanitizeString } from \"./DataSanitizer\";\r\nvar Envelope = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = this;\r\n        var _self = this;\r\n        _self.ver = 1;\r\n        _self.sampleRate = 100.0;\r\n        _self.tags = {};\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self.data = data;\r\n        _self.time = toISOString(new Date());\r\n        _self.aiDataContract = {\r\n            time: 1 /* FieldType.Required */,\r\n            iKey: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? 4 /* FieldType.Hidden */ : 1 /* FieldType.Required */;\r\n            },\r\n            tags: 1 /* FieldType.Required */,\r\n            data: 1 /* FieldType.Required */\r\n        };\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Event = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}());\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, arrMap, isArray, isError, isFunction, isNullOrUndefined, isObject, isString, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getWindow, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_ASSEMBLY, _DYN_EXCEPTIONS, _DYN_FILE_NAME, _DYN_HAS_FULL_STACK, _DYN_IS_MANUAL, _DYN_LENGTH, _DYN_LEVEL, _DYN_LINE, _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_METHOD, _DYN_NAME, _DYN_PARSED_STACK, _DYN_PROBLEM_GROUP, _DYN_PROPERTIES, _DYN_PUSH, _DYN_SEVERITY_LEVEL, _DYN_SIZE_IN_BYTES, _DYN_SPLIT, _DYN_STRINGIFY, _DYN_TO_STRING, _DYN_TYPE_NAME, _DYN__CREATE_FROM_INTERFA1 } from \"../__DynamicConstants\";\r\nimport { dataSanitizeException, dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar NoMethod = \"<no_method>\";\r\nvar strError = \"error\";\r\nvar strStack = \"stack\";\r\nvar strStackDetails = \"stackDetails\";\r\nvar strErrorSrc = \"errorSrc\";\r\nvar strMessage = \"message\";\r\nvar strDescription = \"description\";\r\nfunction _stringify(value, convertToString) {\r\n    var result = value;\r\n    if (result && !isString(result)) {\r\n        if (JSON && JSON[_DYN_STRINGIFY /* @min:%2estringify */]) {\r\n            result = JSON[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            if (convertToString && (!result || result === \"{}\")) {\r\n                if (isFunction(value[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n                    result = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                }\r\n                else {\r\n                    result = \"\" + value;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result = \"\" + value + \" - (Missing JSON.stringify)\";\r\n        }\r\n    }\r\n    return result || \"\";\r\n}\r\nfunction _formatMessage(theEvent, errorType) {\r\n    var evtMessage = theEvent;\r\n    if (theEvent) {\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            evtMessage = theEvent[strMessage] || theEvent[strDescription] || evtMessage;\r\n        }\r\n        // Make sure the message is a string\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            // tslint:disable-next-line: prefer-conditional-expression\r\n            evtMessage = _stringify(evtMessage, true);\r\n        }\r\n        if (theEvent[\"filename\"]) {\r\n            // Looks like an event object with filename\r\n            evtMessage = evtMessage + \" @\" + (theEvent[\"filename\"] || \"\") + \":\" + (theEvent[\"lineno\"] || \"?\") + \":\" + (theEvent[\"colno\"] || \"?\");\r\n        }\r\n    }\r\n    // Automatically add the error type to the message if it does already appear to be present\r\n    if (errorType && errorType !== \"String\" && errorType !== \"Object\" && errorType !== \"Error\" && strIndexOf(evtMessage || \"\", errorType) === -1) {\r\n        evtMessage = errorType + \": \" + evtMessage;\r\n    }\r\n    return evtMessage || \"\";\r\n}\r\nfunction _isExceptionDetailsInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return \"hasFullStack\" in value && \"typeName\" in value;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isExceptionInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return (\"ver\" in value && \"exceptions\" in value && \"properties\" in value);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isStackDetails(details) {\r\n    return details && details.src && isString(details.src) && details.obj && isArray(details.obj);\r\n}\r\nfunction _convertStackObj(errorStack) {\r\n    var src = errorStack || \"\";\r\n    if (!isString(src)) {\r\n        if (isString(src[strStack])) {\r\n            src = src[strStack];\r\n        }\r\n        else {\r\n            src = \"\" + src;\r\n        }\r\n    }\r\n    var items = src[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    return {\r\n        src: src,\r\n        obj: items\r\n    };\r\n}\r\nfunction _getOperaStack(errorMessage) {\r\n    var stack = [];\r\n    var lines = errorMessage[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    for (var lp = 0; lp < lines[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        var entry = lines[lp];\r\n        if (lines[lp + 1]) {\r\n            entry += \"@\" + lines[lp + 1];\r\n            lp++;\r\n        }\r\n        stack[_DYN_PUSH /* @min:%2epush */](entry);\r\n    }\r\n    return {\r\n        src: errorMessage,\r\n        obj: stack\r\n    };\r\n}\r\nfunction _getStackFromErrorObj(errorObj) {\r\n    var details = null;\r\n    if (errorObj) {\r\n        try {\r\n            /* Using bracket notation is support older browsers (IE 7/8 -- dont remember the version) that throw when using dot\r\n            notation for undefined objects and we don't want to loose the error from being reported */\r\n            if (errorObj[strStack]) {\r\n                // Chrome/Firefox\r\n                details = _convertStackObj(errorObj[strStack]);\r\n            }\r\n            else if (errorObj[strError] && errorObj[strError][strStack]) {\r\n                // Edge error event provides the stack and error object\r\n                details = _convertStackObj(errorObj[strError][strStack]);\r\n            }\r\n            else if (errorObj[\"exception\"] && errorObj.exception[strStack]) {\r\n                details = _convertStackObj(errorObj.exception[strStack]);\r\n            }\r\n            else if (_isStackDetails(errorObj)) {\r\n                details = errorObj;\r\n            }\r\n            else if (_isStackDetails(errorObj[strStackDetails])) {\r\n                details = errorObj[strStackDetails];\r\n            }\r\n            else if (getWindow() && getWindow()[\"opera\"] && errorObj[strMessage]) {\r\n                // Opera\r\n                details = _getOperaStack(errorObj[_DYN_MESSAGE /* @min:%2emessage */]);\r\n            }\r\n            else if (errorObj[\"reason\"] && errorObj.reason[strStack]) {\r\n                // UnhandledPromiseRejection\r\n                details = _convertStackObj(errorObj.reason[strStack]);\r\n            }\r\n            else if (isString(errorObj)) {\r\n                details = _convertStackObj(errorObj);\r\n            }\r\n            else {\r\n                var evtMessage = errorObj[strMessage] || errorObj[strDescription] || \"\";\r\n                if (isString(errorObj[strErrorSrc])) {\r\n                    if (evtMessage) {\r\n                        evtMessage += \"\\n\";\r\n                    }\r\n                    evtMessage += \" from \" + errorObj[strErrorSrc];\r\n                }\r\n                if (evtMessage) {\r\n                    details = _convertStackObj(evtMessage);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // something unexpected happened so to avoid failing to report any error lets swallow the exception\r\n            // and fallback to the callee/caller method\r\n            details = _convertStackObj(e);\r\n        }\r\n    }\r\n    return details || {\r\n        src: \"\",\r\n        obj: null\r\n    };\r\n}\r\nfunction _formatStackTrace(stackDetails) {\r\n    var stack = \"\";\r\n    if (stackDetails) {\r\n        if (stackDetails.obj) {\r\n            arrForEach(stackDetails.obj, function (entry) {\r\n                stack += entry + \"\\n\";\r\n            });\r\n        }\r\n        else {\r\n            stack = stackDetails.src || \"\";\r\n        }\r\n    }\r\n    return stack;\r\n}\r\nfunction _parseStack(stack) {\r\n    var parsedStack;\r\n    var frames = stack.obj;\r\n    if (frames && frames[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        parsedStack = [];\r\n        var level_1 = 0;\r\n        var totalSizeInBytes_1 = 0;\r\n        arrForEach(frames, function (frame) {\r\n            var theFrame = frame[_DYN_TO_STRING /* @min:%2etoString */]();\r\n            if (_StackFrame.regex.test(theFrame)) {\r\n                var parsedFrame = new _StackFrame(theFrame, level_1++);\r\n                totalSizeInBytes_1 += parsedFrame[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                parsedStack[_DYN_PUSH /* @min:%2epush */](parsedFrame);\r\n            }\r\n        });\r\n        // DP Constraint - exception parsed stack must be < 32KB\r\n        // remove frames from the middle to meet the threshold\r\n        var exceptionParsedStackThreshold = 32 * 1024;\r\n        if (totalSizeInBytes_1 > exceptionParsedStackThreshold) {\r\n            var left = 0;\r\n            var right = parsedStack[_DYN_LENGTH /* @min:%2elength */] - 1;\r\n            var size = 0;\r\n            var acceptedLeft = left;\r\n            var acceptedRight = right;\r\n            while (left < right) {\r\n                // check size\r\n                var lSize = parsedStack[left][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                var rSize = parsedStack[right][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                size += lSize + rSize;\r\n                if (size > exceptionParsedStackThreshold) {\r\n                    // remove extra frames from the middle\r\n                    var howMany = acceptedRight - acceptedLeft + 1;\r\n                    parsedStack.splice(acceptedLeft, howMany);\r\n                    break;\r\n                }\r\n                // update pointers\r\n                acceptedLeft = left;\r\n                acceptedRight = right;\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n    }\r\n    return parsedStack;\r\n}\r\nfunction _getErrorType(errorType) {\r\n    // Gets the Error Type by passing the constructor (used to get the true type of native error object).\r\n    var typeName = \"\";\r\n    if (errorType) {\r\n        typeName = errorType.typeName || errorType[_DYN_NAME /* @min:%2ename */] || \"\";\r\n        if (!typeName) {\r\n            try {\r\n                var funcNameRegex = /function (.{1,200})\\(/;\r\n                var results = (funcNameRegex).exec((errorType).constructor[_DYN_TO_STRING /* @min:%2etoString */]());\r\n                typeName = (results && results[_DYN_LENGTH /* @min:%2elength */] > 1) ? results[1] : \"\";\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n            }\r\n        }\r\n    }\r\n    return typeName;\r\n}\r\n/**\r\n * Formats the provided errorObj for display and reporting, it may be a String, Object, integer or undefined depending on the browser.\r\n * @param errorObj - The supplied errorObj\r\n */\r\nexport function _formatErrorCode(errorObj) {\r\n    if (errorObj) {\r\n        try {\r\n            if (!isString(errorObj)) {\r\n                var errorType = _getErrorType(errorObj);\r\n                var result = _stringify(errorObj, false);\r\n                if (!result || result === \"{}\") {\r\n                    if (errorObj[strError]) {\r\n                        // Looks like an MS Error Event\r\n                        errorObj = errorObj[strError];\r\n                        errorType = _getErrorType(errorObj);\r\n                    }\r\n                    result = _stringify(errorObj, true);\r\n                }\r\n                if (strIndexOf(result, errorType) !== 0 && errorType !== \"String\") {\r\n                    return errorType + \":\" + result;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n        }\r\n    }\r\n    // Fallback to just letting the object format itself into a string\r\n    return \"\" + (errorObj || \"\");\r\n}\r\nvar Exception = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            exceptions: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n        if (!_isExceptionInternal(exception)) {\r\n            if (!properties) {\r\n                properties = {};\r\n            }\r\n            if (id) {\r\n                properties.id = id;\r\n            }\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = [new _ExceptionDetails(logger, exception, properties)];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n            }\r\n            if (id) {\r\n                _self.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */] || [];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = exception[_DYN_PROPERTIES /* @min:%2eproperties */];\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = exception[_DYN_MEASUREMENTS /* @min:%2emeasurements */];\r\n            if (exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */]) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */];\r\n            }\r\n            if (exception.id) {\r\n                _self.id = exception.id;\r\n                exception[_DYN_PROPERTIES /* @min:%2eproperties */].id = exception.id;\r\n            }\r\n            if (exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */]) {\r\n                _self[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */] = exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */];\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!isNullOrUndefined(exception[_DYN_IS_MANUAL /* @min:%2eisManual */])) {\r\n                _self[_DYN_IS_MANUAL /* @min:%2eisManual */] = exception[_DYN_IS_MANUAL /* @min:%2eisManual */];\r\n            }\r\n        }\r\n    }\r\n    Exception.CreateAutoException = function (message, url, lineNumber, columnNumber, error, evt, stack, errorSrc) {\r\n        var _a;\r\n        var errorType = _getErrorType(error || evt || message);\r\n        return _a = {},\r\n            _a[_DYN_MESSAGE /* @min:message */] = _formatMessage(message, errorType),\r\n            _a.url = url,\r\n            _a.lineNumber = lineNumber,\r\n            _a.columnNumber = columnNumber,\r\n            _a.error = _formatErrorCode(error || evt || message),\r\n            _a.evt = _formatErrorCode(evt || message),\r\n            _a[_DYN_TYPE_NAME /* @min:typeName */] = errorType,\r\n            _a.stackDetails = _getStackFromErrorObj(stack || error || evt),\r\n            _a.errorSrc = errorSrc,\r\n            _a;\r\n    };\r\n    Exception.CreateFromInterface = function (logger, exception, properties, measurements) {\r\n        var exceptions = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */]\r\n            && arrMap(exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */], function (ex) { return _ExceptionDetails[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](logger, ex); });\r\n        var exceptionData = new Exception(logger, __assign(__assign({}, exception), { exceptions: exceptions }), properties, measurements);\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a;\r\n        var _b = this, exceptions = _b.exceptions, properties = _b.properties, measurements = _b.measurements, severityLevel = _b.severityLevel, problemGroup = _b.problemGroup, id = _b.id, isManual = _b.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return _a = {\r\n                ver: \"4.0\"\r\n            },\r\n            _a[_DYN_EXCEPTIONS /* @min:exceptions */] = exceptionDetailsInterface,\r\n            _a.severityLevel = severityLevel,\r\n            _a.properties = properties,\r\n            _a.measurements = measurements,\r\n            _a.problemGroup = problemGroup,\r\n            _a.id = id,\r\n            _a.isManual = isManual,\r\n            _a;\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        var _a;\r\n        return {\r\n            exceptions: [\r\n                (_a = {},\r\n                    _a[_DYN_HAS_FULL_STACK /* @min:hasFullStack */] = true,\r\n                    _a.message = message,\r\n                    _a.stack = details,\r\n                    _a.typeName = typeName,\r\n                    _a)\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    Exception.formatError = _formatErrorCode;\r\n    return Exception;\r\n}());\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function () {\r\n    function _ExceptionDetails(logger, exception, properties) {\r\n        this.aiDataContract = {\r\n            id: 0 /* FieldType.Default */,\r\n            outerId: 0 /* FieldType.Default */,\r\n            typeName: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            hasFullStack: 0 /* FieldType.Default */,\r\n            stack: 0 /* FieldType.Default */,\r\n            parsedStack: 2 /* FieldType.Array */\r\n        };\r\n        var _self = this;\r\n        if (!_isExceptionDetailsInternal(exception)) {\r\n            var error = exception;\r\n            var evt = error && error.evt;\r\n            if (!isError(error)) {\r\n                error = error[strError] || evt || error;\r\n            }\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = dataSanitizeString(logger, _getErrorType(error)) || strNotSpecified;\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, _formatMessage(exception || error, _self[_DYN_TYPE_NAME /* @min:%2etypeName */])) || strNotSpecified;\r\n            var stack = exception[strStackDetails] || _getStackFromErrorObj(exception);\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = _parseStack(stack);\r\n            // after parsedStack is inited, iterate over each frame object, sanitize its assembly field\r\n            if (isArray(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */])) {\r\n                arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) {\r\n                    frame[_DYN_ASSEMBLY /* @min:%2eassembly */] = dataSanitizeString(logger, frame[_DYN_ASSEMBLY /* @min:%2eassembly */]);\r\n                    frame[_DYN_FILE_NAME /* @min:%2efileName */] = dataSanitizeString(logger, frame[_DYN_FILE_NAME /* @min:%2efileName */]);\r\n                });\r\n            }\r\n            _self[strStack] = dataSanitizeException(logger, _formatStackTrace(stack));\r\n            _self.hasFullStack = isArray(_self.parsedStack) && _self.parsedStack[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n            if (properties) {\r\n                properties[_DYN_TYPE_NAME /* @min:%2etypeName */] = properties[_DYN_TYPE_NAME /* @min:%2etypeName */] || _self[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = exception[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = exception[_DYN_MESSAGE /* @min:%2emessage */];\r\n            _self[strStack] = exception[strStack];\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] || [];\r\n            _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */] = exception[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */];\r\n        }\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var _a;\r\n        var _self = this;\r\n        var parsedStack = _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = (_a = {\r\n                id: _self.id,\r\n                outerId: _self.outerId,\r\n                typeName: _self[_DYN_TYPE_NAME /* @min:%2etypeName */],\r\n                message: _self[_DYN_MESSAGE /* @min:%2emessage */],\r\n                hasFullStack: _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */],\r\n                stack: _self[strStack]\r\n            },\r\n            _a[_DYN_PARSED_STACK /* @min:parsedStack */] = parsedStack || undefined,\r\n            _a);\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return _StackFrame[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](frame); }))\r\n            || exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */];\r\n        var exceptionDetails = new _ExceptionDetails(logger, __assign(__assign({}, exception), { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    return _ExceptionDetails;\r\n}());\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function () {\r\n    function _StackFrame(sourceFrame, level) {\r\n        this.aiDataContract = {\r\n            level: 1 /* FieldType.Required */,\r\n            method: 1 /* FieldType.Required */,\r\n            assembly: 0 /* FieldType.Default */,\r\n            fileName: 0 /* FieldType.Default */,\r\n            line: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        // Not converting this to isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = level;\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = NoMethod;\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = strTrim(frame);\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = \"\";\r\n            _self[_DYN_LINE /* @min:%2eline */] = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches[_DYN_LENGTH /* @min:%2elength */] >= 5) {\r\n                _self[_DYN_METHOD /* @min:%2emethod */] = strTrim(matches[2]) || _self[_DYN_METHOD /* @min:%2emethod */];\r\n                _self[_DYN_FILE_NAME /* @min:%2efileName */] = strTrim(matches[4]);\r\n                _self[_DYN_LINE /* @min:%2eline */] = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = sourceFrame[_DYN_LEVEL /* @min:%2elevel */];\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = sourceFrame[_DYN_METHOD /* @min:%2emethod */];\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = sourceFrame[_DYN_ASSEMBLY /* @min:%2eassembly */];\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = sourceFrame[_DYN_FILE_NAME /* @min:%2efileName */];\r\n            _self[_DYN_LINE /* @min:%2eline */] = sourceFrame[_DYN_LINE /* @min:%2eline */];\r\n            _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        }\r\n        _self.sizeInBytes += _self.method[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.fileName[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.assembly[_DYN_LENGTH /* @min:%2elength */];\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] += _StackFrame.baseSize;\r\n        _self.sizeInBytes += _self.level.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.line.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        var _self = this;\r\n        return {\r\n            level: _self[_DYN_LEVEL /* @min:%2elevel */],\r\n            method: _self[_DYN_METHOD /* @min:%2emethod */],\r\n            assembly: _self[_DYN_ASSEMBLY /* @min:%2eassembly */],\r\n            fileName: _self[_DYN_FILE_NAME /* @min:%2efileName */],\r\n            line: _self[_DYN_LINE /* @min:%2eline */]\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?[\\s]{0,50}([^\\@\\()]+?)[\\s]{0,50}(\\@|\\()([^\\(\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}());\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            name: 1 /* FieldType.Required */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 1 /* FieldType.Required */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */\r\n        };\r\n        /**\r\n         * Metric type. Single measurement or the aggregated value.\r\n         */\r\n        this.kind = 0 /* DataPointType.Measurement */;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_COUNT, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { DataPoint } from \"./Common/DataPoint\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Metric = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, stdDev, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            metrics: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        var dataPoint = new DataPoint();\r\n        dataPoint[_DYN_COUNT /* @min:%2ecount */] = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        dataPoint.value = value;\r\n        dataPoint.stdDev = isNaN(stdDev) || stdDev === null ? undefined : stdDev;\r\n        _self.metrics = [dataPoint];\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}());\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar strEmpty = \"\";\r\nexport function stringToBoolOrDefault(str, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = false; }\r\n    if (str === undefined || str === null) {\r\n        return defaultValue;\r\n    }\r\n    return str.toString()[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Convert ms to c# time span format\r\n */\r\nexport function msToTimeSpan(totalms) {\r\n    if (isNaN(totalms) || totalms < 0) {\r\n        totalms = 0;\r\n    }\r\n    totalms = Math.round(totalms);\r\n    var ms = strEmpty + totalms % 1000;\r\n    var sec = strEmpty + Math.floor(totalms / 1000) % 60;\r\n    var min = strEmpty + Math.floor(totalms / (1000 * 60)) % 60;\r\n    var hour = strEmpty + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n    var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n    ms = ms[_DYN_LENGTH /* @min:%2elength */] === 1 ? \"00\" + ms : ms[_DYN_LENGTH /* @min:%2elength */] === 2 ? \"0\" + ms : ms;\r\n    sec = sec[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + sec : sec;\r\n    min = min[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + min : min;\r\n    hour = hour[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + hour : hour;\r\n    return (days > 0 ? days + \".\" : strEmpty) + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n}\r\nexport function getExtensionByName(extensions, identifier) {\r\n    var extension = null;\r\n    arrForEach(extensions, function (value) {\r\n        if (value.identifier === identifier) {\r\n            extension = value;\r\n            return -1;\r\n        }\r\n    });\r\n    return extension;\r\n}\r\nexport function isCrossOriginError(message, url, lineNumber, columnNumber, error) {\r\n    return !error && isString(message) && (message === \"Script error.\" || message === \"Script error\");\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeId, dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageView = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            id: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = dataSanitizeId(logger, id);\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(durationMs);\r\n        }\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}());\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { AjaxHelperParseDependencyPath } from \"../Util\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar RemoteDependencyData = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        this.aiDataContract = {\r\n            id: 1 /* FieldType.Required */,\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            resultCode: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            success: 0 /* FieldType.Default */,\r\n            data: 0 /* FieldType.Default */,\r\n            target: 0 /* FieldType.Default */,\r\n            type: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 0 /* FieldType.Default */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */,\r\n            dependencyKind: 0 /* FieldType.Default */,\r\n            dependencySource: 0 /* FieldType.Default */,\r\n            commandName: 0 /* FieldType.Default */,\r\n            dependencyTypeName: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = id;\r\n        _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(value);\r\n        _self.success = success;\r\n        _self.resultCode = resultCode + \"\";\r\n        _self.type = dataSanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _self.data = dataSanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _self.target = dataSanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _self.target = \"\".concat(_self.target, \" | \").concat(correlationContext);\r\n        }\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, dependencyFields[_DYN_NAME /* @min:%2ename */]);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}());\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_PROPERTIES, _DYN_SEVERITY_LEVEL } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties } from \"./Common/DataSanitizer\";\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        message = message || strNotSpecified;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, message);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n        }\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}());\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES, _DYN_RECEIVED_RESPONSE } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageViewPerformance = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            perfTotal: 0 /* FieldType.Default */,\r\n            networkConnect: 0 /* FieldType.Default */,\r\n            sentRequest: 0 /* FieldType.Default */,\r\n            receivedResponse: 0 /* FieldType.Default */,\r\n            domProcessing: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _self.domProcessing = cs4BaseData.domProcessing;\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = cs4BaseData[_DYN_DURATION /* @min:%2eduration */];\r\n            _self.networkConnect = cs4BaseData.networkConnect;\r\n            _self.perfTotal = cs4BaseData.perfTotal;\r\n            _self[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */] = cs4BaseData[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */];\r\n            _self.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}());\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Data = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            baseType: 1 /* FieldType.Required */,\r\n            baseData: 1 /* FieldType.Required */\r\n        };\r\n        this.baseType = baseType;\r\n        this.baseData = data;\r\n    }\r\n    return Data;\r\n}());\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { createClassFromInterface } from \"@microsoft/applicationinsights-core-js\";\r\nfunction _aiNameFunc(baseName) {\r\n    var aiName = \"ai.\" + baseName + \".\";\r\n    return function (name) {\r\n        return aiName + name;\r\n    };\r\n}\r\nvar _aiApplication = _aiNameFunc(\"application\");\r\nvar _aiDevice = _aiNameFunc(\"device\");\r\nvar _aiLocation = _aiNameFunc(\"location\");\r\nvar _aiOperation = _aiNameFunc(\"operation\");\r\nvar _aiSession = _aiNameFunc(\"session\");\r\nvar _aiUser = _aiNameFunc(\"user\");\r\nvar _aiCloud = _aiNameFunc(\"cloud\");\r\nvar _aiInternal = _aiNameFunc(\"internal\");\r\nvar ContextTagKeys = /** @class */ (function (_super) {\r\n    __extends(ContextTagKeys, _super);\r\n    function ContextTagKeys() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return ContextTagKeys;\r\n}(createClassFromInterface({\r\n    applicationVersion: _aiApplication(\"ver\"),\r\n    applicationBuild: _aiApplication(\"build\"),\r\n    applicationTypeId: _aiApplication(\"typeId\"),\r\n    applicationId: _aiApplication(\"applicationId\"),\r\n    applicationLayer: _aiApplication(\"layer\"),\r\n    deviceId: _aiDevice(\"id\"),\r\n    deviceIp: _aiDevice(\"ip\"),\r\n    deviceLanguage: _aiDevice(\"language\"),\r\n    deviceLocale: _aiDevice(\"locale\"),\r\n    deviceModel: _aiDevice(\"model\"),\r\n    deviceFriendlyName: _aiDevice(\"friendlyName\"),\r\n    deviceNetwork: _aiDevice(\"network\"),\r\n    deviceNetworkName: _aiDevice(\"networkName\"),\r\n    deviceOEMName: _aiDevice(\"oemName\"),\r\n    deviceOS: _aiDevice(\"os\"),\r\n    deviceOSVersion: _aiDevice(\"osVersion\"),\r\n    deviceRoleInstance: _aiDevice(\"roleInstance\"),\r\n    deviceRoleName: _aiDevice(\"roleName\"),\r\n    deviceScreenResolution: _aiDevice(\"screenResolution\"),\r\n    deviceType: _aiDevice(\"type\"),\r\n    deviceMachineName: _aiDevice(\"machineName\"),\r\n    deviceVMName: _aiDevice(\"vmName\"),\r\n    deviceBrowser: _aiDevice(\"browser\"),\r\n    deviceBrowserVersion: _aiDevice(\"browserVersion\"),\r\n    locationIp: _aiLocation(\"ip\"),\r\n    locationCountry: _aiLocation(\"country\"),\r\n    locationProvince: _aiLocation(\"province\"),\r\n    locationCity: _aiLocation(\"city\"),\r\n    operationId: _aiOperation(\"id\"),\r\n    operationName: _aiOperation(\"name\"),\r\n    operationParentId: _aiOperation(\"parentId\"),\r\n    operationRootId: _aiOperation(\"rootId\"),\r\n    operationSyntheticSource: _aiOperation(\"syntheticSource\"),\r\n    operationCorrelationVector: _aiOperation(\"correlationVector\"),\r\n    sessionId: _aiSession(\"id\"),\r\n    sessionIsFirst: _aiSession(\"isFirst\"),\r\n    sessionIsNew: _aiSession(\"isNew\"),\r\n    userAccountAcquisitionDate: _aiUser(\"accountAcquisitionDate\"),\r\n    userAccountId: _aiUser(\"accountId\"),\r\n    userAgent: _aiUser(\"userAgent\"),\r\n    userId: _aiUser(\"id\"),\r\n    userStoreRegion: _aiUser(\"storeRegion\"),\r\n    userAuthUserId: _aiUser(\"authUserId\"),\r\n    userAnonymousUserAcquisitionDate: _aiUser(\"anonUserAcquisitionDate\"),\r\n    userAuthenticatedUserAcquisitionDate: _aiUser(\"authUserAcquisitionDate\"),\r\n    cloudName: _aiCloud(\"name\"),\r\n    cloudRole: _aiCloud(\"role\"),\r\n    cloudRoleVer: _aiCloud(\"roleVer\"),\r\n    cloudRoleInstance: _aiCloud(\"roleInstance\"),\r\n    cloudEnvironment: _aiCloud(\"environment\"),\r\n    cloudLocation: _aiCloud(\"location\"),\r\n    cloudDeploymentUnit: _aiCloud(\"deploymentUnit\"),\r\n    internalNodeName: _aiInternal(\"nodeName\"),\r\n    internalSdkVersion: _aiInternal(\"sdkVersion\"),\r\n    internalAgentVersion: _aiInternal(\"agentVersion\"),\r\n    internalSnippet: _aiInternal(\"snippet\"),\r\n    internalSdkSrc: _aiInternal(\"sdkSrc\")\r\n})));\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isNullOrUndefined, objForEachKey, throwError, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIkey, strNotSpecified } from \"./Constants\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { _DYN_NAME } from \"./__DynamicConstants\";\r\n/**\r\n * Create a telemetry item that the 1DS channel understands\r\n * @param item - domain specific properties; part B\r\n * @param baseType - telemetry item type. ie PageViewData\r\n * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n * @param customProperties - user defined custom properties; part C\r\n * @param systemProperties - system properties that are added to the context; part A\r\n * @returns ITelemetryItem that is sent to channel\r\n */\r\nexport function createTelemetryItem(item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n    var _a;\r\n    envelopeName = dataSanitizeString(logger, envelopeName) || strNotSpecified;\r\n    if (isNullOrUndefined(item) ||\r\n        isNullOrUndefined(baseType) ||\r\n        isNullOrUndefined(envelopeName)) {\r\n        throwError(\"Input doesn't contain all required fields\");\r\n    }\r\n    var iKey = \"\";\r\n    if (item[strIkey]) {\r\n        iKey = item[strIkey];\r\n        delete item[strIkey];\r\n    }\r\n    var telemetryItem = (_a = {},\r\n        _a[_DYN_NAME /* @min:name */] = envelopeName,\r\n        _a.time = toISOString(new Date()),\r\n        _a.iKey = iKey,\r\n        _a.ext = systemProperties ? systemProperties : {},\r\n        _a.tags = [],\r\n        _a.data = {},\r\n        _a.baseType = baseType,\r\n        _a.baseData = item // Part B\r\n    ,\r\n        _a);\r\n    // Part C\r\n    if (!isNullOrUndefined(customProperties)) {\r\n        objForEachKey(customProperties, function (prop, value) {\r\n            telemetryItem.data[prop] = value;\r\n        });\r\n    }\r\n    return telemetryItem;\r\n}\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item - domain specific properties; part B\r\n     * @param baseType - telemetry item type. ie PageViewData\r\n     * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties - user defined custom properties; part C\r\n     * @param systemProperties - system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = createTelemetryItem;\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { ContextTagKeys } from \"./Contracts/ContextTagKeys\";\r\nexport var Extensions = {\r\n    UserExt: \"user\",\r\n    DeviceExt: \"device\",\r\n    TraceExt: \"trace\",\r\n    WebExt: \"web\",\r\n    AppExt: \"app\",\r\n    OSExt: \"os\",\r\n    SessionExt: \"ses\",\r\n    SDKExt: \"sdk\"\r\n};\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isFunction } from \"@microsoft/applicationinsights-core-js\";\r\nexport function createDomEvent(eventName) {\r\n    var event = null;\r\n    if (isFunction(Event)) { // Use Event constructor when available\r\n        event = new Event(eventName);\r\n    }\r\n    else { // Event has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"Event\");\r\n            event.initEvent(eventName, true, true);\r\n        }\r\n    }\r\n    return event;\r\n}\r\n//# sourceMappingURL=DomHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, createUniqueNamespace, eventOff, eventOn, getDocument, getNavigator, getWindow, isNullOrUndefined, isUndefined, mergeEvtNamespace } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_PUSH } from \"./__DynamicConstants\";\r\nfunction _disableEvents(target, evtNamespace) {\r\n    eventOff(target, null, null, evtNamespace);\r\n}\r\n/**\r\n * Create a new OfflineListener instance to monitor browser online / offline events\r\n * @param parentEvtNamespace - The parent event namespace to append to any specific events for this instance\r\n */\r\nexport function createOfflineListener(parentEvtNamespace) {\r\n    var _document = getDocument();\r\n    var _navigator = getNavigator(); // Gets the window.navigator or workerNavigator depending on the global\r\n    var _isListening = false;\r\n    var listenerList = [];\r\n    // Set the initial state\r\n    // rState is changed by the browser, both via events and when we check the navigator.onLine property\r\n    var rState = 1 /* eOfflineValue.Online */;\r\n    if (_navigator && !isNullOrUndefined(_navigator.onLine) && !_navigator.onLine) { // navigator.onLine is undefined in react-native\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n    }\r\n    // ustate is changed by the user calling setOnlineState\r\n    var uState = 0 /* eOfflineValue.Unknown */;\r\n    // current state would be updated each time rState or uState is changed\r\n    // it is a resolved value of rState and uState\r\n    var _currentState = calCurrentState();\r\n    var _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"OfflineListener\"), parentEvtNamespace);\r\n    try {\r\n        if (_enableEvents(getWindow())) {\r\n            _isListening = true;\r\n        }\r\n        if (_document) {\r\n            // Also attach to the document.body or document\r\n            var target = _document.body || _document;\r\n            if (target.ononline) {\r\n                if (_enableEvents(target)) {\r\n                    _isListening = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // this makes react-native less angry\r\n        _isListening = false;\r\n    }\r\n    function _enableEvents(target) {\r\n        var enabled = false;\r\n        if (target) {\r\n            enabled = eventOn(target, \"online\", _setOnline, _evtNamespace);\r\n            if (enabled) {\r\n                eventOn(target, \"offline\", _setOffline, _evtNamespace);\r\n            }\r\n        }\r\n        return enabled;\r\n    }\r\n    function _isOnline() {\r\n        return _currentState;\r\n    }\r\n    function calCurrentState() {\r\n        if (uState === 2 /* eOfflineValue.Offline */ || rState === 2 /* eOfflineValue.Offline */) {\r\n            return false;\r\n        }\r\n        return true; // if both unknown, then we assume the network is good\r\n    }\r\n    function listnerNoticeCheck() {\r\n        // we were offline and are now online or we were online and now offline\r\n        var newState = calCurrentState();\r\n        if (_currentState !== newState) {\r\n            _currentState = newState; // use the resolved state to update\r\n            // send all the callbacks with the current state\r\n            arrForEach(listenerList, function (callback) {\r\n                var offlineState = {\r\n                    isOnline: _currentState,\r\n                    rState: rState,\r\n                    uState: uState\r\n                };\r\n                try {\r\n                    callback(offlineState);\r\n                }\r\n                catch (e) {\r\n                    // Do nothing, just making sure we run all of the callbacks\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function setOnlineState(newState) {\r\n        uState = newState;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOnline() {\r\n        rState = 1 /* eOfflineValue.Online */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOffline() {\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _unload() {\r\n        var win = getWindow();\r\n        if (win && _isListening) {\r\n            _disableEvents(win, _evtNamespace);\r\n            if (_document) {\r\n                // Also attach to the document.body or document\r\n                var target = _document.body || _document;\r\n                if (!isUndefined(target.ononline)) {\r\n                    _disableEvents(target, _evtNamespace);\r\n                }\r\n            }\r\n            _isListening = false;\r\n        }\r\n    }\r\n    function addListener(callback) {\r\n        listenerList[_DYN_PUSH /* @min:%2epush */](callback);\r\n        // Define rm as an instance of IUnloadHook\r\n        return {\r\n            rm: function () {\r\n                var index = listenerList.indexOf(callback);\r\n                if (index > -1) {\r\n                    return listenerList.splice(index, 1);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    return {\r\n        isOnline: _isOnline,\r\n        isListening: function () { return _isListening; },\r\n        unload: _unload,\r\n        addListener: addListener,\r\n        setOnlineState: setOnlineState\r\n    };\r\n}\r\n//# sourceMappingURL=Offline.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { correlationIdSetPrefix, correlationIdGetPrefix, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, correlationIdGetCorrelationContextValue, dateTimeUtilsNow, dateTimeUtilsDuration, isInternalApplicationInsightsEndpoint, createDistributedTraceContextFromTrace } from \"./Util\";\r\nexport { ThrottleMgr } from \"./ThrottleMgr\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/ContextTagKeys\";\r\nexport { dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator, createTelemetryItem } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes, EventPersistence } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported, createTraceParent, parseTraceParent, isValidTraceId, isValidSpanId, isValidTraceParent, isSampledFlag, formatTraceParent, findW3cTraceParent } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlEnableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage, utlSetStoragePrefix } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport { createOfflineListener } from \"./Offline\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 4\r\nexport var _DYN_IS_STORAGE_USE_DISAB0 = \"isStorageUseDisabled\"; // Count: 3\r\nexport var _DYN__ADD_HOOK = \"_addHook\"; // Count: 6\r\nexport var _DYN_CORE = \"core\"; // Count: 7\r\nexport var _DYN_DATA_TYPE = \"dataType\"; // Count: 8\r\nexport var _DYN_ENVELOPE_TYPE = \"envelopeType\"; // Count: 7\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 13\r\nexport var _DYN_TRACK = \"track\"; // Count: 7\r\nexport var _DYN_TRACK_PAGE_VIEW = \"trackPageView\"; // Count: 4\r\nexport var _DYN_TRACK_PREVIOUS_PAGE_1 = \"trackPreviousPageVisit\"; // Count: 3\r\nexport var _DYN_SEND_PAGE_VIEW_INTER2 = \"sendPageViewInternal\"; // Count: 7\r\nexport var _DYN_START_TIME = \"startTime\"; // Count: 6\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 3\r\nexport var _DYN_DURATION = \"duration\"; // Count: 12\r\nexport var _DYN_SEND_PAGE_VIEW_PERFO3 = \"sendPageViewPerformanceInternal\"; // Count: 3\r\nexport var _DYN_POPULATE_PAGE_VIEW_P4 = \"populatePageViewPerformanceEvent\"; // Count: 3\r\nexport var _DYN_HREF = \"href\"; // Count: 6\r\nexport var _DYN_SEND_EXCEPTION_INTER5 = \"sendExceptionInternal\"; // Count: 2\r\nexport var _DYN_EXCEPTION = \"exception\"; // Count: 3\r\nexport var _DYN_ERROR = \"error\"; // Count: 5\r\nexport var _DYN__ONERROR = \"_onerror\"; // Count: 3\r\nexport var _DYN_ERROR_SRC = \"errorSrc\"; // Count: 3\r\nexport var _DYN_LINE_NUMBER = \"lineNumber\"; // Count: 5\r\nexport var _DYN_COLUMN_NUMBER = \"columnNumber\"; // Count: 5\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 4\r\nexport var _DYN__CREATE_AUTO_EXCEPTI6 = \"CreateAutoException\"; // Count: 3\r\nexport var _DYN_ADD_TELEMETRY_INITIA7 = \"addTelemetryInitializer\"; // Count: 4\r\nexport var _DYN_OVERRIDE_PAGE_VIEW_D8 = \"overridePageViewDuration\"; // Count: 2\r\nexport var _DYN_AUTO_TRACK_PAGE_VISI9 = \"autoTrackPageVisitTime\"; // Count: 2\r\nexport var _DYN_IS_BROWSER_LINK_TRAC10 = \"isBrowserLinkTrackingEnabled\"; // Count: 2\r\nexport var _DYN_LENGTH = \"length\"; // Count: 5\r\nexport var _DYN_ENABLE_AUTO_ROUTE_TR11 = \"enableAutoRouteTracking\"; // Count: 2\r\nexport var _DYN_ENABLE_UNHANDLED_PRO12 = \"enableUnhandledPromiseRejectionTracking\"; // Count: 2\r\nexport var _DYN_AUTO_UNHANDLED_PROMI13 = \"autoUnhandledPromiseInstrumented\"; // Count: 3\r\nexport var _DYN_GET_ENTRIES_BY_TYPE = \"getEntriesByType\"; // Count: 5\r\nexport var _DYN_IS_PERFORMANCE_TIMIN14 = \"isPerformanceTimingSupported\"; // Count: 2\r\nexport var _DYN_GET_PERFORMANCE_TIMI15 = \"getPerformanceTiming\"; // Count: 2\r\nexport var _DYN_NAVIGATION_START = \"navigationStart\"; // Count: 4\r\nexport var _DYN_SHOULD_COLLECT_DURAT16 = \"shouldCollectDuration\"; // Count: 3\r\nexport var _DYN_IS_PERFORMANCE_TIMIN17 = \"isPerformanceTimingDataReady\"; // Count: 2\r\nexport var _DYN_RESPONSE_START = \"responseStart\"; // Count: 5\r\nexport var _DYN_REQUEST_START = \"requestStart\"; // Count: 3\r\nexport var _DYN_LOAD_EVENT_END = \"loadEventEnd\"; // Count: 4\r\nexport var _DYN_RESPONSE_END = \"responseEnd\"; // Count: 5\r\nexport var _DYN_CONNECT_END = \"connectEnd\"; // Count: 4\r\nexport var _DYN_PAGE_VISIT_START_TIM18 = \"pageVisitStartTime\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dateTimeUtilsDuration } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, arrForEach, dumpObj, getDocument, getExceptionName, getLocation, isNullOrUndefined } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getPerformance, isUndefined, isWebWorker, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DURATION, _DYN_GET_ENTRIES_BY_TYPE, _DYN_GET_PERFORMANCE_TIMI15, _DYN_HREF, _DYN_IS_PERFORMANCE_TIMIN14, _DYN_IS_PERFORMANCE_TIMIN17, _DYN_LENGTH, _DYN_NAVIGATION_START, _DYN_POPULATE_PAGE_VIEW_P4, _DYN_PROPERTIES, _DYN_SEND_PAGE_VIEW_INTER2, _DYN_SEND_PAGE_VIEW_PERFO3, _DYN_SHOULD_COLLECT_DURAT16, _DYN_START_TIME, _DYN_TRACK_PAGE_VIEW } from \"../../__DynamicConstants\";\r\n/**\r\n * Class encapsulates sending page views and page view performance telemetry.\r\n */\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        dynamicProto(PageViewManager, this, function (_self) {\r\n            var queueTimer = null;\r\n            var itemQueue = [];\r\n            var pageViewPerformanceSent = false;\r\n            var firstPageViewSent = false;\r\n            var _logger;\r\n            if (core) {\r\n                _logger = core.logger;\r\n            }\r\n            function _flushChannels(isAsync) {\r\n                if (core) {\r\n                    core.flush(isAsync, function () {\r\n                        // Event flushed, callback added to prevent promise creation\r\n                    });\r\n                }\r\n            }\r\n            function _startTimer() {\r\n                if (!queueTimer) {\r\n                    queueTimer = scheduleTimeout((function () {\r\n                        queueTimer = null;\r\n                        var allItems = itemQueue.slice(0);\r\n                        var doFlush = false;\r\n                        itemQueue = [];\r\n                        arrForEach(allItems, function (item) {\r\n                            if (!item()) {\r\n                                // Not processed so rescheduled\r\n                                itemQueue.push(item);\r\n                            }\r\n                            else {\r\n                                doFlush = true;\r\n                            }\r\n                        });\r\n                        if (itemQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            _startTimer();\r\n                        }\r\n                        if (doFlush) {\r\n                            // We process at least one item so flush the queue\r\n                            _flushChannels(true);\r\n                        }\r\n                    }), 100);\r\n                }\r\n            }\r\n            function _addQueue(cb) {\r\n                itemQueue.push(cb);\r\n                _startTimer();\r\n            }\r\n            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */] = function (pageView, customProperties) {\r\n                var name = pageView.name;\r\n                if (isNullOrUndefined(name) || typeof name !== \"string\") {\r\n                    var doc = getDocument();\r\n                    name = pageView.name = doc && doc.title || \"\";\r\n                }\r\n                var uri = pageView.uri;\r\n                if (isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n                    var location_1 = getLocation();\r\n                    uri = pageView.uri = location_1 && location_1[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                }\r\n                if (!firstPageViewSent) {\r\n                    var perf = getPerformance();\r\n                    // Access the performance timing object\r\n                    var navigationEntries = (perf && perf[_DYN_GET_ENTRIES_BY_TYPE /* @min:%2egetEntriesByType */] && perf[_DYN_GET_ENTRIES_BY_TYPE /* @min:%2egetEntriesByType */](\"navigation\"));\r\n                    // Edge Case the navigation Entries may return an empty array and the timeOrigin is not supported on IE\r\n                    if (navigationEntries && navigationEntries[0] && !isUndefined(perf.timeOrigin)) {\r\n                        // Get the value of loadEventStart\r\n                        var loadEventStart = navigationEntries[0].loadEventStart;\r\n                        pageView[_DYN_START_TIME /* @min:%2estartTime */] = new Date(perf.timeOrigin + loadEventStart);\r\n                    }\r\n                    else {\r\n                        // calculate the start time manually\r\n                        var duration_1 = ((customProperties || pageView[_DYN_PROPERTIES /* @min:%2eproperties */] || {})[_DYN_DURATION /* @min:%2eduration */] || 0);\r\n                        pageView[_DYN_START_TIME /* @min:%2estartTime */] = new Date(new Date().getTime() - duration_1);\r\n                    }\r\n                    firstPageViewSent = true;\r\n                }\r\n                // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n                // do not provide the duration, set duration to undefined\r\n                // Also this is case 4\r\n                if (!pageViewPerformanceManager[_DYN_IS_PERFORMANCE_TIMIN14 /* @min:%2eisPerformanceTimingSupported */]()) {\r\n                    appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                    _flushChannels(true);\r\n                    if (!isWebWorker()) {\r\n                        // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 25 /* _eInternalMessageId.NavigationTimingNotSupported */, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n                    }\r\n                    return;\r\n                }\r\n                var pageViewSent = false;\r\n                var customDuration;\r\n                // if the performance timing is supported by the browser, calculate the custom duration\r\n                var start = pageViewPerformanceManager[_DYN_GET_PERFORMANCE_TIMI15 /* @min:%2egetPerformanceTiming */]()[_DYN_NAVIGATION_START /* @min:%2enavigationStart */];\r\n                if (start > 0) {\r\n                    customDuration = dateTimeUtilsDuration(start, +new Date);\r\n                    if (!pageViewPerformanceManager[_DYN_SHOULD_COLLECT_DURAT16 /* @min:%2eshouldCollectDuration */](customDuration)) {\r\n                        customDuration = undefined;\r\n                    }\r\n                }\r\n                // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n                // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n                var duration;\r\n                if (!isNullOrUndefined(customProperties) &&\r\n                    !isNullOrUndefined(customProperties[_DYN_DURATION /* @min:%2eduration */])) {\r\n                    duration = customProperties[_DYN_DURATION /* @min:%2eduration */];\r\n                }\r\n                if (overridePageViewDuration || !isNaN(duration)) {\r\n                    if (isNaN(duration)) {\r\n                        // case 3\r\n                        if (!customProperties) {\r\n                            customProperties = {};\r\n                        }\r\n                        customProperties[_DYN_DURATION /* @min:%2eduration */] = customDuration;\r\n                    }\r\n                    // case 2\r\n                    appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                    _flushChannels(true);\r\n                    pageViewSent = true;\r\n                }\r\n                // now try to send the page view performance telemetry\r\n                var maxDurationLimit = 60000;\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                // Queue the event for processing\r\n                _addQueue(function () {\r\n                    var processed = false;\r\n                    try {\r\n                        if (pageViewPerformanceManager[_DYN_IS_PERFORMANCE_TIMIN17 /* @min:%2eisPerformanceTimingDataReady */]()) {\r\n                            processed = true;\r\n                            var pageViewPerformance = {\r\n                                name: name,\r\n                                uri: uri\r\n                            };\r\n                            pageViewPerformanceManager[_DYN_POPULATE_PAGE_VIEW_P4 /* @min:%2epopulatePageViewPerformanceEvent */](pageViewPerformance);\r\n                            if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                                // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                                // That's the best value we can get that makes sense.\r\n                                customProperties[_DYN_DURATION /* @min:%2eduration */] = customDuration;\r\n                                appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                            }\r\n                            else {\r\n                                if (!pageViewSent) {\r\n                                    customProperties[_DYN_DURATION /* @min:%2eduration */] = pageViewPerformance.durationMs;\r\n                                    appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                                }\r\n                                if (!pageViewPerformanceSent) {\r\n                                    appInsights[_DYN_SEND_PAGE_VIEW_PERFO3 /* @min:%2esendPageViewPerformanceInternal */](pageViewPerformance, customProperties);\r\n                                    pageViewPerformanceSent = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (start > 0 && dateTimeUtilsDuration(start, +new Date) > maxDurationLimit) {\r\n                            // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                            // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                            processed = true;\r\n                            if (!pageViewSent) {\r\n                                customProperties[_DYN_DURATION /* @min:%2eduration */] = maxDurationLimit;\r\n                                appInsights[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageView, customProperties);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 38 /* _eInternalMessageId.TrackPVFailedCalc */, \"trackPageView failed on page load calculation: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                    return processed;\r\n                });\r\n            };\r\n            _self.teardown = function (unloadCtx, unloadState) {\r\n                if (queueTimer) {\r\n                    queueTimer.cancel();\r\n                    queueTimer = null;\r\n                    var allItems = itemQueue.slice(0);\r\n                    var doFlush_1 = false;\r\n                    itemQueue = [];\r\n                    arrForEach(allItems, function (item) {\r\n                        if (item()) {\r\n                            doFlush_1 = true;\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PageViewManager.prototype.trackPageView.\r\n// Removed Stub for PageViewManager.prototype.teardown.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PageViewManager.__ieDyn=1;\n\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dateTimeUtilsDuration, msToTimeSpan } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, getNavigator, getPerformance, safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_CONNECT_END, _DYN_DURATION, _DYN_GET_ENTRIES_BY_TYPE, _DYN_GET_PERFORMANCE_TIMI15, _DYN_IS_PERFORMANCE_TIMIN14, _DYN_IS_PERFORMANCE_TIMIN17, _DYN_LENGTH, _DYN_LOAD_EVENT_END, _DYN_NAVIGATION_START, _DYN_POPULATE_PAGE_VIEW_P4, _DYN_REQUEST_START, _DYN_RESPONSE_END, _DYN_RESPONSE_START, _DYN_SHOULD_COLLECT_DURAT16, _DYN_START_TIME } from \"../../__DynamicConstants\";\r\nvar MAX_DURATION_ALLOWED = 3600000; // 1h\r\nvar botAgentNames = [\"googlebot\", \"adsbot-google\", \"apis-google\", \"mediapartners-google\"];\r\nfunction _isPerformanceTimingSupported() {\r\n    var perf = getPerformance();\r\n    return perf && !!perf.timing;\r\n}\r\nfunction _isPerformanceNavigationTimingSupported() {\r\n    var perf = getPerformance();\r\n    return perf && perf.getEntriesByType && perf.getEntriesByType(\"navigation\")[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\nfunction _isPerformanceTimingDataReady() {\r\n    var perf = getPerformance();\r\n    var timing = perf ? perf.timing : 0;\r\n    return timing\r\n        && timing.domainLookupStart > 0\r\n        && timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */] > 0\r\n        && timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */] > 0\r\n        && timing[_DYN_REQUEST_START /* @min:%2erequestStart */] > 0\r\n        && timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */] > 0\r\n        && timing[_DYN_RESPONSE_END /* @min:%2eresponseEnd */] > 0\r\n        && timing[_DYN_CONNECT_END /* @min:%2econnectEnd */] > 0\r\n        && timing.domLoading > 0;\r\n}\r\nfunction _getPerformanceTiming() {\r\n    if (_isPerformanceTimingSupported()) {\r\n        return getPerformance().timing;\r\n    }\r\n    return null;\r\n}\r\nfunction _getPerformanceNavigationTiming() {\r\n    if (_isPerformanceNavigationTimingSupported()) {\r\n        return getPerformance()[_DYN_GET_ENTRIES_BY_TYPE /* @min:%2egetEntriesByType */](\"navigation\")[0];\r\n    }\r\n    return null;\r\n}\r\n/**\r\n* This method tells if given durations should be excluded from collection.\r\n*/\r\nfunction _shouldCollectDuration() {\r\n    var durations = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        durations[_i] = arguments[_i];\r\n    }\r\n    var _navigator = getNavigator() || {};\r\n    // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n    var userAgent = _navigator.userAgent;\r\n    var isGoogleBot = false;\r\n    if (userAgent) {\r\n        for (var i = 0; i < botAgentNames[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            isGoogleBot = isGoogleBot || strIndexOf(userAgent.toLowerCase(), botAgentNames[i]) !== -1;\r\n        }\r\n    }\r\n    if (isGoogleBot) {\r\n        // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n        return false;\r\n    }\r\n    else {\r\n        // for other page views, don't report if it's outside of a reasonable range\r\n        for (var i = 0; i < durations[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (durations[i] < 0 || durations[i] >= MAX_DURATION_ALLOWED) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Class encapsulates sending page view performance telemetry.\r\n */\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        var _logger = safeGetLogger(core);\r\n        dynamicProto(PageViewPerformanceManager, this, function (_self) {\r\n            _self[_DYN_POPULATE_PAGE_VIEW_P4 /* @min:%2epopulatePageViewPerformanceEvent */] = function (pageViewPerformance) {\r\n                pageViewPerformance.isValid = false;\r\n                /*\r\n                 * http://www.w3.org/TR/navigation-timing/#processing-model\r\n                 *  |-navigationStart\r\n                 *  |             |-connectEnd\r\n                 *  |             ||-requestStart\r\n                 *  |             ||             |-responseStart\r\n                 *  |             ||             |              |-responseEnd\r\n                 *  |             ||             |              |\r\n                 *  |             ||             |              |         |-loadEventEnd\r\n                 *  |---network---||---request---|---response---|---dom---|\r\n                 *  |--------------------------total----------------------|\r\n                 *\r\n                 *  total = The difference between the load event of the current document is completed and the first recorded timestamp of the performance entry : https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings#duration\r\n                 *  network = Redirect time + App Cache + DNS lookup time + TCP connection time\r\n                 *  request = Request time : https://developer.mozilla.org/en-US/docs/Web/Performance/Navigation_and_resource_timings#request_time\r\n                 *  response = Response time\r\n                 *  dom = Document load time : https://html.spec.whatwg.org/multipage/dom.html#document-load-timing-info\r\n                 *      = Document processing time : https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/#document_processing\r\n                 *      + Loading time : https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/#loading\r\n                 */\r\n                var navigationTiming = _getPerformanceNavigationTiming();\r\n                var timing = _getPerformanceTiming();\r\n                var total = 0;\r\n                var network = 0;\r\n                var request = 0;\r\n                var response = 0;\r\n                var dom = 0;\r\n                if (navigationTiming || timing) {\r\n                    if (navigationTiming) {\r\n                        total = navigationTiming[_DYN_DURATION /* @min:%2eduration */];\r\n                        /**\r\n                         * support both cases:\r\n                         * - startTime is always zero: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming\r\n                         * - for older browsers where the startTime is not zero\r\n                         */\r\n                        network = navigationTiming[_DYN_START_TIME /* @min:%2estartTime */] === 0 ? navigationTiming[_DYN_CONNECT_END /* @min:%2econnectEnd */] : dateTimeUtilsDuration(navigationTiming[_DYN_START_TIME /* @min:%2estartTime */], navigationTiming[_DYN_CONNECT_END /* @min:%2econnectEnd */]);\r\n                        request = dateTimeUtilsDuration(navigationTiming.requestStart, navigationTiming[_DYN_RESPONSE_START /* @min:%2eresponseStart */]);\r\n                        response = dateTimeUtilsDuration(navigationTiming[_DYN_RESPONSE_START /* @min:%2eresponseStart */], navigationTiming[_DYN_RESPONSE_END /* @min:%2eresponseEnd */]);\r\n                        dom = dateTimeUtilsDuration(navigationTiming.responseEnd, navigationTiming[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                    }\r\n                    else {\r\n                        total = dateTimeUtilsDuration(timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */], timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                        network = dateTimeUtilsDuration(timing[_DYN_NAVIGATION_START /* @min:%2enavigationStart */], timing[_DYN_CONNECT_END /* @min:%2econnectEnd */]);\r\n                        request = dateTimeUtilsDuration(timing.requestStart, timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */]);\r\n                        response = dateTimeUtilsDuration(timing[_DYN_RESPONSE_START /* @min:%2eresponseStart */], timing[_DYN_RESPONSE_END /* @min:%2eresponseEnd */]);\r\n                        dom = dateTimeUtilsDuration(timing.responseEnd, timing[_DYN_LOAD_EVENT_END /* @min:%2eloadEventEnd */]);\r\n                    }\r\n                    if (total === 0) {\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 10 /* _eInternalMessageId.ErrorPVCalc */, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else if (!_self[_DYN_SHOULD_COLLECT_DURAT16 /* @min:%2eshouldCollectDuration */](total, network, request, response, dom)) {\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 45 /* _eInternalMessageId.InvalidDurationValue */, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                        // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                        // in this case, don't report client performance from this page\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 8 /* _eInternalMessageId.ClientPerformanceMathError */, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                    }\r\n                    else {\r\n                        pageViewPerformance.durationMs = total;\r\n                        // // convert to timespans\r\n                        pageViewPerformance.perfTotal = pageViewPerformance[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(total);\r\n                        pageViewPerformance.networkConnect = msToTimeSpan(network);\r\n                        pageViewPerformance.sentRequest = msToTimeSpan(request);\r\n                        pageViewPerformance.receivedResponse = msToTimeSpan(response);\r\n                        pageViewPerformance.domProcessing = msToTimeSpan(dom);\r\n                        pageViewPerformance.isValid = true;\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_GET_PERFORMANCE_TIMI15 /* @min:%2egetPerformanceTiming */] = _getPerformanceTiming;\r\n            _self[_DYN_IS_PERFORMANCE_TIMIN14 /* @min:%2eisPerformanceTimingSupported */] = _isPerformanceTimingSupported;\r\n            _self[_DYN_IS_PERFORMANCE_TIMIN17 /* @min:%2eisPerformanceTimingDataReady */] = _isPerformanceTimingDataReady;\r\n            _self[_DYN_SHOULD_COLLECT_DURAT16 /* @min:%2eshouldCollectDuration */] = _shouldCollectDuration;\r\n        });\r\n    }\r\n// Removed Stub for PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent.\r\n// Removed Stub for PageViewPerformanceManager.prototype.getPerformanceTiming.\r\n// Removed Stub for PageViewPerformanceManager.prototype.isPerformanceTimingSupported.\r\n// Removed Stub for PageViewPerformanceManager.prototype.isPerformanceTimingDataReady.\r\n// Removed Stub for PageViewPerformanceManager.prototype.shouldCollectDuration.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PageViewPerformanceManager.__ieDyn=1;\n\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* ApplicationInsights.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nvar _a;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AnalyticsPluginIdentifier, Event as EventTelemetry, Exception, Metric, PageView, PageViewPerformance, PropertiesPluginIdentifier, RemoteDependencyData, Trace, createDistributedTraceContextFromTrace, createDomEvent, createTelemetryItem, dataSanitizeString, isCrossOriginError, strNotSpecified, utlDisableStorage, utlEnableStorage, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, InstrumentEvent, arrForEach, cfgDfBoolean, cfgDfSet, cfgDfString, cfgDfValidate, createProcessTelemetryContext, createUniqueNamespace, dumpObj, eventOff, eventOn, generateW3CId, getDocument, getExceptionName, getHistory, getLocation, getWindow, hasHistory, hasWindow, isFunction, isNullOrUndefined, isString, isUndefined, mergeEvtNamespace, onConfigChange, safeGetCookieMgr, strUndefined, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isError, objDeepFreeze, objDefine, scheduleTimeout, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ADD_TELEMETRY_INITIA7, _DYN_AUTO_TRACK_PAGE_VISI9, _DYN_AUTO_UNHANDLED_PROMI13, _DYN_COLUMN_NUMBER, _DYN_CORE, _DYN_DATA_TYPE, _DYN_DIAG_LOG, _DYN_DURATION, _DYN_ENABLE_AUTO_ROUTE_TR11, _DYN_ENABLE_UNHANDLED_PRO12, _DYN_ENVELOPE_TYPE, _DYN_ERROR, _DYN_ERROR_SRC, _DYN_EXCEPTION, _DYN_HREF, _DYN_IS_BROWSER_LINK_TRAC10, _DYN_IS_STORAGE_USE_DISAB0, _DYN_LENGTH, _DYN_LINE_NUMBER, _DYN_MESSAGE, _DYN_OVERRIDE_PAGE_VIEW_D8, _DYN_POPULATE_PAGE_VIEW_P4, _DYN_PROPERTIES, _DYN_SEND_EXCEPTION_INTER5, _DYN_SEND_PAGE_VIEW_INTER2, _DYN_SEND_PAGE_VIEW_PERFO3, _DYN_START_TIME, _DYN_TO_STRING, _DYN_TRACK, _DYN_TRACK_PAGE_VIEW, _DYN_TRACK_PREVIOUS_PAGE_1, _DYN__ADD_HOOK, _DYN__CREATE_AUTO_EXCEPTI6, _DYN__ONERROR } from \"../__DynamicConstants\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageViewPerformanceManager } from \"./Telemetry/PageViewPerformanceManager\";\r\nimport { PageVisitTimeManager } from \"./Telemetry/PageVisitTimeManager\";\r\nimport { Timing } from \"./Timing\";\r\nvar strEvent = \"event\";\r\nfunction _dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n    }\r\n}\r\nfunction _getReason(error) {\r\n    if (error && error.reason) {\r\n        var reason = error.reason;\r\n        if (!isString(reason) && isFunction(reason[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n            return reason[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        }\r\n        return dumpObj(reason);\r\n    }\r\n    // Pass the original object down which will eventually get evaluated for any message or description\r\n    return error || \"\";\r\n}\r\nvar MinMilliSeconds = 60000;\r\nvar defaultValues = objDeepFreeze((_a = {\r\n        sessionRenewalMs: cfgDfSet(_chkConfigMilliseconds, 30 * 60 * 1000),\r\n        sessionExpirationMs: cfgDfSet(_chkConfigMilliseconds, 24 * 60 * 60 * 1000),\r\n        disableExceptionTracking: cfgDfBoolean()\r\n    },\r\n    _a[_DYN_AUTO_TRACK_PAGE_VISI9 /* @min:autoTrackPageVisitTime */] = cfgDfBoolean(),\r\n    _a[_DYN_OVERRIDE_PAGE_VIEW_D8 /* @min:overridePageViewDuration */] = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_UNHANDLED_PRO12 /* @min:enableUnhandledPromiseRejectionTracking */] = cfgDfBoolean(),\r\n    _a[_DYN_AUTO_UNHANDLED_PROMI13 /* @min:autoUnhandledPromiseInstrumented */] = false,\r\n    _a.samplingPercentage = cfgDfValidate(_chkSampling, 100),\r\n    _a[_DYN_IS_STORAGE_USE_DISAB0 /* @min:isStorageUseDisabled */] = cfgDfBoolean(),\r\n    _a[_DYN_IS_BROWSER_LINK_TRAC10 /* @min:isBrowserLinkTrackingEnabled */] = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_AUTO_ROUTE_TR11 /* @min:enableAutoRouteTracking */] = cfgDfBoolean(),\r\n    _a.namePrefix = cfgDfString(),\r\n    _a.enableDebug = cfgDfBoolean(),\r\n    _a.disableFlushOnBeforeUnload = cfgDfBoolean(),\r\n    _a.disableFlushOnUnload = cfgDfBoolean(false, \"disableFlushOnBeforeUnload\"),\r\n    _a));\r\nfunction _chkConfigMilliseconds(value, defValue) {\r\n    value = value || defValue;\r\n    if (value < MinMilliSeconds) {\r\n        value = MinMilliSeconds;\r\n    }\r\n    return +value;\r\n}\r\nfunction _chkSampling(value) {\r\n    return !isNaN(value) && value > 0 && value <= 100;\r\n}\r\nfunction _updateStorageUsage(extConfig) {\r\n    // Not resetting the storage usage as someone may have manually called utlDisableStorage, so this will only\r\n    // reset based if the configuration option is provided\r\n    if (!isUndefined(extConfig[_DYN_IS_STORAGE_USE_DISAB0 /* @min:%2eisStorageUseDisabled */])) {\r\n        if (extConfig[_DYN_IS_STORAGE_USE_DISAB0 /* @min:%2eisStorageUseDisabled */]) {\r\n            utlDisableStorage();\r\n        }\r\n        else {\r\n            utlEnableStorage();\r\n        }\r\n    }\r\n}\r\nvar AnalyticsPlugin = /** @class */ (function (_super) {\r\n    __extends(AnalyticsPlugin, _super);\r\n    function AnalyticsPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = AnalyticsPluginIdentifier; // do not change name or priority\r\n        _this.priority = 180; // take from reserved priority range 100- 200\r\n        _this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place\r\n        var _eventTracking;\r\n        var _pageTracking;\r\n        var _pageViewManager;\r\n        var _pageViewPerformanceManager;\r\n        var _pageVisitTimeManager;\r\n        var _preInitTelemetryInitializers;\r\n        var _isBrowserLinkTrackingEnabled;\r\n        var _browserLinkInitializerAdded;\r\n        var _enableAutoRouteTracking;\r\n        var _historyListenerAdded;\r\n        var _disableExceptionTracking;\r\n        var _autoExceptionInstrumented;\r\n        var _enableUnhandledPromiseRejectionTracking;\r\n        var _autoUnhandledPromiseInstrumented;\r\n        var _extConfig;\r\n        var _autoTrackPageVisitTime;\r\n        // Counts number of trackAjax invocations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        var _trackAjaxAttempts = 0;\r\n        // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n        var _prevUri; // Assigned in the constructor\r\n        var _currUri;\r\n        var _evtNamespace;\r\n        dynamicProto(AnalyticsPlugin, _this, function (_self, _base) {\r\n            var _addHook = _base[_DYN__ADD_HOOK /* @min:%2e_addHook */];\r\n            _initDefaults();\r\n            _self.getCookieMgr = function () {\r\n                return safeGetCookieMgr(_self[_DYN_CORE /* @min:%2ecore */]);\r\n            };\r\n            _self.processTelemetry = function (env, itemCtx) {\r\n                _self.processNext(env, itemCtx);\r\n            };\r\n            _self.trackEvent = function (event, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(event, EventTelemetry[_DYN_DATA_TYPE /* @min:%2edataType */], EventTelemetry[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(2 /* eLoggingSeverity.WARNING */, 39 /* _eInternalMessageId.TrackTraceFailed */, \"trackTrace failed, trace will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n             * @param   name    A string that identifies this event uniquely within the document.\r\n             */\r\n            _self.startTrackEvent = function (name) {\r\n                try {\r\n                    _eventTracking.start(name);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 29 /* _eInternalMessageId.StartTrackEventFailed */, \"startTrackEvent failed, event will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Log an extended event that you started timing with `startTrackEvent`.\r\n             * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n             * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n             * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n             */\r\n            _self.stopTrackEvent = function (name, properties, measurements) {\r\n                try {\r\n                    _eventTracking.stop(name, undefined, properties, measurements);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 30 /* _eInternalMessageId.StopTrackEventFailed */, \"stopTrackEvent failed, event will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Log a diagnostic message\r\n             * @param trace\r\n             * @param ICustomProperties.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackTrace = function (trace, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(trace, Trace[_DYN_DATA_TYPE /* @min:%2edataType */], Trace[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(2 /* eLoggingSeverity.WARNING */, 39 /* _eInternalMessageId.TrackTraceFailed */, \"trackTrace failed, trace will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Log a numeric value that is not associated with a specific event. Typically\r\n             * used to send regular reports of performance indicators. To send single measurement, just\r\n             * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n             * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n             * and sending the resulting average at intervals\r\n             * @param metric - input object argument. Only name and average are mandatory.\r\n             * @param } customProperties additional data used to filter metrics in the\r\n             * portal. Defaults to empty.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackMetric = function (metric, customProperties) {\r\n                try {\r\n                    var telemetryItem = createTelemetryItem(metric, Metric[_DYN_DATA_TYPE /* @min:%2edataType */], Metric[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 36 /* _eInternalMessageId.TrackMetricFailed */, \"trackMetric failed, metric will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Logs that a page or other item was viewed.\r\n             * @param IPageViewTelemetry - The string you used as the name in startTrackPage. Defaults to the document title.\r\n             * @param customProperties - Additional data used to filter events and metrics. Defaults to empty.\r\n             * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n             */\r\n            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */] = function (pageView, customProperties) {\r\n                try {\r\n                    var inPv = pageView || {};\r\n                    _pageViewManager[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */](inPv, __assign(__assign(__assign({}, inPv.properties), inPv.measurements), customProperties));\r\n                    if (_autoTrackPageVisitTime) {\r\n                        _pageVisitTimeManager[_DYN_TRACK_PREVIOUS_PAGE_1 /* @min:%2etrackPreviousPageVisit */](inPv.name, inPv.uri);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 37 /* _eInternalMessageId.TrackPVFailed */, \"trackPageView failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n             * @param pageView - Page view item to be sent\r\n             * @param properties - Custom properties (Part C) that a user can add to the telemetry item\r\n             * @param systemProperties - System level properties (Part A) that a user can add to the telemetry item\r\n             */\r\n            _self[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */] = function (pageView, properties, systemProperties) {\r\n                var doc = getDocument();\r\n                if (doc) {\r\n                    pageView.refUri = pageView.refUri === undefined ? doc.referrer : pageView.refUri;\r\n                }\r\n                if (isNullOrUndefined(pageView[_DYN_START_TIME /* @min:%2estartTime */])) {\r\n                    // calculate the start time manually\r\n                    var duration = ((properties || pageView[_DYN_PROPERTIES /* @min:%2eproperties */] || {})[_DYN_DURATION /* @min:%2eduration */] || 0);\r\n                    pageView[_DYN_START_TIME /* @min:%2estartTime */] = new Date(new Date().getTime() - duration);\r\n                }\r\n                var telemetryItem = createTelemetryItem(pageView, PageView[_DYN_DATA_TYPE /* @min:%2edataType */], PageView[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n                // reset ajaxes counter\r\n                _trackAjaxAttempts = 0;\r\n            };\r\n            /**\r\n             * @ignore INTERNAL ONLY\r\n             * @param pageViewPerformance\r\n             * @param properties\r\n             */\r\n            _self[_DYN_SEND_PAGE_VIEW_PERFO3 /* @min:%2esendPageViewPerformanceInternal */] = function (pageViewPerformance, properties, systemProperties) {\r\n                var telemetryItem = createTelemetryItem(pageViewPerformance, PageViewPerformance[_DYN_DATA_TYPE /* @min:%2edataType */], PageViewPerformance[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            };\r\n            /**\r\n             * Send browser performance metrics.\r\n             * @param pageViewPerformance\r\n             * @param customProperties\r\n             */\r\n            _self.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n                var inPvp = pageViewPerformance || {};\r\n                try {\r\n                    _pageViewPerformanceManager[_DYN_POPULATE_PAGE_VIEW_P4 /* @min:%2epopulatePageViewPerformanceEvent */](inPvp);\r\n                    _self[_DYN_SEND_PAGE_VIEW_PERFO3 /* @min:%2esendPageViewPerformanceInternal */](inPvp, customProperties);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 37 /* _eInternalMessageId.TrackPVFailed */, \"trackPageViewPerformance failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n             * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n             * and send the event.\r\n             * @param name - A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n             */\r\n            _self.startTrackPage = function (name) {\r\n                try {\r\n                    if (typeof name !== \"string\") {\r\n                        var doc = getDocument();\r\n                        name = doc && doc.title || \"\";\r\n                    }\r\n                    _pageTracking.start(name);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 31 /* _eInternalMessageId.StartTrackFailed */, \"startTrackPage failed, page view may not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n             * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n             * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n             * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n             * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n             * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n             */\r\n            _self.stopTrackPage = function (name, url, properties, measurement) {\r\n                try {\r\n                    if (typeof name !== \"string\") {\r\n                        var doc = getDocument();\r\n                        name = doc && doc.title || \"\";\r\n                    }\r\n                    if (typeof url !== \"string\") {\r\n                        var loc = getLocation();\r\n                        url = loc && loc[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    _pageTracking.stop(name, url, properties, measurement);\r\n                    if (_autoTrackPageVisitTime) {\r\n                        _pageVisitTimeManager[_DYN_TRACK_PREVIOUS_PAGE_1 /* @min:%2etrackPreviousPageVisit */](name, url);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 32 /* _eInternalMessageId.StopTrackFailed */, \"stopTrackPage failed, page view will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n            * @ignore INTERNAL ONLY\r\n            * @param exception\r\n            * @param properties\r\n            * @param systemProperties\r\n            */\r\n            _self[_DYN_SEND_EXCEPTION_INTER5 /* @min:%2esendExceptionInternal */] = function (exception, customProperties, systemProperties) {\r\n                // Adding additional edge cases to handle\r\n                // - Not passing anything (null / undefined)\r\n                var theError = (exception && (exception[_DYN_EXCEPTION /* @min:%2eexception */] || exception[_DYN_ERROR /* @min:%2eerror */])) ||\r\n                    // - Handle someone calling trackException based of v1 API where the exception was the Error\r\n                    isError(exception) && exception ||\r\n                    // - Handles no error being defined and instead of creating a new Error() instance attempt to map so any stacktrace\r\n                    //   is preserved and does not list ApplicationInsights code as the source\r\n                    { name: (exception && typeof exception), message: exception || strNotSpecified };\r\n                // If no exception object was passed assign to an empty object to avoid internal exceptions\r\n                exception = exception || {};\r\n                var exceptionPartB = new Exception(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), theError, exception[_DYN_PROPERTIES /* @min:%2eproperties */] || customProperties, exception.measurements, exception.severityLevel, exception.id).toInterface();\r\n                var telemetryItem = createTelemetryItem(exceptionPartB, Exception[_DYN_DATA_TYPE /* @min:%2edataType */], Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), customProperties, systemProperties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            };\r\n            /**\r\n             * Log an exception you have caught.\r\n             *\r\n             * @param exception -   Object which contains exception to be sent\r\n             * @param } customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n             *\r\n             * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self.trackException = function (exception, customProperties) {\r\n                if (exception && !exception[_DYN_EXCEPTION /* @min:%2eexception */] && exception[_DYN_ERROR /* @min:%2eerror */]) {\r\n                    exception[_DYN_EXCEPTION /* @min:%2eexception */] = exception[_DYN_ERROR /* @min:%2eerror */];\r\n                }\r\n                try {\r\n                    _self[_DYN_SEND_EXCEPTION_INTER5 /* @min:%2esendExceptionInternal */](exception, customProperties);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 35 /* _eInternalMessageId.TrackExceptionFailed */, \"trackException failed, exception will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n            };\r\n            /**\r\n             * @description Custom error handler for Application Insights Analytics\r\n             * @param exception\r\n             * @memberof ApplicationInsights\r\n             */\r\n            _self[_DYN__ONERROR /* @min:%2e_onerror */] = function (exception) {\r\n                var error = exception && exception[_DYN_ERROR /* @min:%2eerror */];\r\n                var evt = exception && exception.evt;\r\n                try {\r\n                    if (!evt) {\r\n                        var _window = getWindow();\r\n                        if (_window) {\r\n                            evt = _window[strEvent];\r\n                        }\r\n                    }\r\n                    var url = (exception && exception.url) || (getDocument() || {}).URL;\r\n                    // If no error source is provided assume the default window.onerror handler\r\n                    var errorSrc = exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */] || \"window.onerror@\" + url + \":\" + (exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0) + \":\" + (exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0);\r\n                    var properties = {\r\n                        errorSrc: errorSrc,\r\n                        url: url,\r\n                        lineNumber: exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0,\r\n                        columnNumber: exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0,\r\n                        message: exception[_DYN_MESSAGE /* @min:%2emessage */]\r\n                    };\r\n                    if (isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception[_DYN_ERROR /* @min:%2eerror */])) {\r\n                        _sendCORSException(Exception[_DYN__CREATE_AUTO_EXCEPTI6 /* @min:%2eCreateAutoException */](\"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\", url, exception[_DYN_LINE_NUMBER /* @min:%2elineNumber */] || 0, exception[_DYN_COLUMN_NUMBER /* @min:%2ecolumnNumber */] || 0, error, evt, null, errorSrc), properties);\r\n                    }\r\n                    else {\r\n                        if (!exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */]) {\r\n                            exception[_DYN_ERROR_SRC /* @min:%2eerrorSrc */] = errorSrc;\r\n                        }\r\n                        _self.trackException({ exception: exception, severityLevel: 3 /* eSeverityLevel.Error */ }, properties);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    var errorString = error ? (error.name + \", \" + error[_DYN_MESSAGE /* @min:%2emessage */]) : \"null\";\r\n                    _throwInternal(1 /* eLoggingSeverity.CRITICAL */, 11 /* _eInternalMessageId.ExceptionWhileLoggingError */, \"_onError threw exception while logging error, error will not be collected: \"\r\n                        + getExceptionName(e), { exception: dumpObj(e), errorString: errorString });\r\n                }\r\n            };\r\n            _self[_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */] = function (telemetryInitializer) {\r\n                if (_self[_DYN_CORE /* @min:%2ecore */]) {\r\n                    // Just add to the core\r\n                    return _self[_DYN_CORE /* @min:%2ecore */][_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */](telemetryInitializer);\r\n                }\r\n                // Handle \"pre-initialization\" telemetry initializers (for backward compatibility)\r\n                if (!_preInitTelemetryInitializers) {\r\n                    _preInitTelemetryInitializers = [];\r\n                }\r\n                _preInitTelemetryInitializers.push(telemetryInitializer);\r\n            };\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                if (_self.isInitialized()) {\r\n                    return;\r\n                }\r\n                if (isNullOrUndefined(core)) {\r\n                    throwError(\"Error initializing\");\r\n                }\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                try {\r\n                    _evtNamespace = mergeEvtNamespace(createUniqueNamespace(_self.identifier), core.evtNamespace && core.evtNamespace());\r\n                    if (_preInitTelemetryInitializers) {\r\n                        arrForEach(_preInitTelemetryInitializers, function (initializer) {\r\n                            core[_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */](initializer);\r\n                        });\r\n                        _preInitTelemetryInitializers = null;\r\n                    }\r\n                    _populateDefaults(config);\r\n                    _pageViewPerformanceManager = new PageViewPerformanceManager(_self[_DYN_CORE /* @min:%2ecore */]);\r\n                    _pageViewManager = new PageViewManager(_self, _extConfig.overridePageViewDuration, _self[_DYN_CORE /* @min:%2ecore */], _pageViewPerformanceManager);\r\n                    _pageVisitTimeManager = new PageVisitTimeManager(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), function (pageName, pageUrl, pageVisitTime) { return trackPageVisitTime(pageName, pageUrl, pageVisitTime); });\r\n                    _eventTracking = new Timing(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), \"trackEvent\");\r\n                    _eventTracking.action =\r\n                        function (name, url, duration, properties, measurements) {\r\n                            if (!properties) {\r\n                                properties = {};\r\n                            }\r\n                            if (!measurements) {\r\n                                measurements = {};\r\n                            }\r\n                            properties.duration = duration[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            _self.trackEvent({ name: name, properties: properties, measurements: measurements });\r\n                        };\r\n                    // initialize page view timing\r\n                    _pageTracking = new Timing(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), \"trackPageView\");\r\n                    _pageTracking.action = function (name, url, duration, properties, measurements) {\r\n                        // duration must be a custom property in order for the collector to extract it\r\n                        if (isNullOrUndefined(properties)) {\r\n                            properties = {};\r\n                        }\r\n                        properties.duration = duration[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                        var pageViewItem = {\r\n                            name: name,\r\n                            uri: url,\r\n                            properties: properties,\r\n                            measurements: measurements\r\n                        };\r\n                        _self[_DYN_SEND_PAGE_VIEW_INTER2 /* @min:%2esendPageViewInternal */](pageViewItem, properties);\r\n                    };\r\n                    if (hasWindow()) {\r\n                        _updateExceptionTracking();\r\n                        _updateLocationChange();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // resetting the initialized state because of failure\r\n                    _self.setInitialized(false);\r\n                    throw e;\r\n                }\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _pageViewManager && _pageViewManager.teardown(unloadCtx, unloadState);\r\n                // Just register to remove all events associated with this namespace\r\n                eventOff(window, null, null, _evtNamespace);\r\n                _initDefaults();\r\n            };\r\n            function _populateDefaults(config) {\r\n                var identifier = _self.identifier;\r\n                var core = _self[_DYN_CORE /* @min:%2ecore */];\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(config, function () {\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    _extConfig = ctx.getExtCfg(identifier, defaultValues);\r\n                    _autoTrackPageVisitTime = _extConfig[_DYN_AUTO_TRACK_PAGE_VISI9 /* @min:%2eautoTrackPageVisitTime */];\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    _updateStorageUsage(_extConfig);\r\n                    // _updateBrowserLinkTracking\r\n                    _isBrowserLinkTrackingEnabled = _extConfig[_DYN_IS_BROWSER_LINK_TRAC10 /* @min:%2eisBrowserLinkTrackingEnabled */];\r\n                    _addDefaultTelemetryInitializers();\r\n                }));\r\n            }\r\n            /**\r\n             * Log a page visit time\r\n             * @param    pageName    Name of page\r\n             * @param    pageVisitDuration Duration of visit to the page in milliseconds\r\n             */\r\n            function trackPageVisitTime(pageName, pageUrl, pageVisitTime) {\r\n                var properties = { PageName: pageName, PageUrl: pageUrl };\r\n                _self.trackMetric({\r\n                    name: \"PageVisitTime\",\r\n                    average: pageVisitTime,\r\n                    max: pageVisitTime,\r\n                    min: pageVisitTime,\r\n                    sampleCount: 1\r\n                }, properties);\r\n            }\r\n            function _addDefaultTelemetryInitializers() {\r\n                if (!_browserLinkInitializerAdded && _isBrowserLinkTrackingEnabled) {\r\n                    var browserLinkPaths_1 = [\"/browserLinkSignalR/\", \"/__browserLink/\"];\r\n                    var dropBrowserLinkRequests = function (envelope) {\r\n                        if (_isBrowserLinkTrackingEnabled && envelope.baseType === RemoteDependencyData[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n                            var remoteData = envelope.baseData;\r\n                            if (remoteData) {\r\n                                for (var i = 0; i < browserLinkPaths_1[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                                    if (remoteData.target && strIndexOf(remoteData.target, browserLinkPaths_1[i]) >= 0) {\r\n                                        return false;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return true;\r\n                    };\r\n                    _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](_self[_DYN_ADD_TELEMETRY_INITIA7 /* @min:%2eaddTelemetryInitializer */](dropBrowserLinkRequests));\r\n                    _browserLinkInitializerAdded = true;\r\n                }\r\n            }\r\n            function _sendCORSException(exception, properties) {\r\n                var telemetryItem = createTelemetryItem(exception, Exception[_DYN_DATA_TYPE /* @min:%2edataType */], Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], _self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), properties);\r\n                _self[_DYN_CORE /* @min:%2ecore */][_DYN_TRACK /* @min:%2etrack */](telemetryItem);\r\n            }\r\n            function _updateExceptionTracking() {\r\n                var _window = getWindow();\r\n                var locn = getLocation(true);\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extConfig, function () {\r\n                    _disableExceptionTracking = _extConfig.disableExceptionTracking;\r\n                    if (!_disableExceptionTracking && !_autoExceptionInstrumented && !_extConfig.autoExceptionInstrumented) {\r\n                        // We want to enable exception auto collection and it has not been done so yet\r\n                        _addHook(InstrumentEvent(_window, \"onerror\", {\r\n                            ns: _evtNamespace,\r\n                            rsp: function (callDetails, message, url, lineNumber, columnNumber, error) {\r\n                                if (!_disableExceptionTracking && callDetails.rslt !== true) {\r\n                                    _self[_DYN__ONERROR /* @min:%2e_onerror */](Exception[_DYN__CREATE_AUTO_EXCEPTI6 /* @min:%2eCreateAutoException */](message, url, lineNumber, columnNumber, error, callDetails.evt));\r\n                                }\r\n                            }\r\n                        }, false));\r\n                        _autoExceptionInstrumented = true;\r\n                    }\r\n                }));\r\n                _addUnhandledPromiseRejectionTracking(_window, locn);\r\n            }\r\n            function _updateLocationChange() {\r\n                var win = getWindow();\r\n                var locn = getLocation(true);\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extConfig, function () {\r\n                    _enableAutoRouteTracking = _extConfig[_DYN_ENABLE_AUTO_ROUTE_TR11 /* @min:%2eenableAutoRouteTracking */] === true;\r\n                    /**\r\n                     * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n                     */\r\n                    if (win && _enableAutoRouteTracking && !_historyListenerAdded && hasHistory()) {\r\n                        var _history = getHistory();\r\n                        if (isFunction(_history.pushState) && isFunction(_history.replaceState) && typeof Event !== strUndefined) {\r\n                            _addHistoryListener(win, _history, locn);\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n            function _getDistributedTraceCtx() {\r\n                var distributedTraceCtx = null;\r\n                if (_self[_DYN_CORE /* @min:%2ecore */] && _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx) {\r\n                    distributedTraceCtx = _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx(false);\r\n                }\r\n                if (!distributedTraceCtx) {\r\n                    // Fallback when using an older Core and PropertiesPlugin\r\n                    var properties = _self[_DYN_CORE /* @min:%2ecore */].getPlugin(PropertiesPluginIdentifier);\r\n                    if (properties) {\r\n                        var context = properties.plugin.context;\r\n                        if (context) {\r\n                            distributedTraceCtx = createDistributedTraceContextFromTrace(context.telemetryTrace);\r\n                        }\r\n                    }\r\n                }\r\n                return distributedTraceCtx;\r\n            }\r\n            /**\r\n             * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n             */\r\n            function _addHistoryListener(win, history, locn) {\r\n                if (_historyListenerAdded) {\r\n                    return;\r\n                }\r\n                // Name Prefix is only referenced during the initial initialization and cannot be changed afterwards\r\n                var namePrefix = _extConfig.namePrefix || \"\";\r\n                function _popstateHandler() {\r\n                    if (_enableAutoRouteTracking) {\r\n                        _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                    }\r\n                }\r\n                function _locationChangeHandler() {\r\n                    // We always track the changes (if the handler is installed) to handle the feature being disabled between location changes\r\n                    if (_currUri) {\r\n                        _prevUri = _currUri;\r\n                        _currUri = locn && locn[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    else {\r\n                        _currUri = locn && locn[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                    }\r\n                    if (_enableAutoRouteTracking) {\r\n                        var distributedTraceCtx = _getDistributedTraceCtx();\r\n                        if (distributedTraceCtx) {\r\n                            distributedTraceCtx.setTraceId(generateW3CId());\r\n                            var traceLocationName = \"_unknown_\";\r\n                            if (locn && locn.pathname) {\r\n                                traceLocationName = locn.pathname + (locn.hash || \"\");\r\n                            }\r\n                            // This populates the ai.operation.name which has a maximum size of 1024 so we need to sanitize it\r\n                            distributedTraceCtx.setName(dataSanitizeString(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), traceLocationName));\r\n                        }\r\n                        scheduleTimeout((function (uri) {\r\n                            // todo: override start time so that it is not affected by autoRoutePVDelay\r\n                            _self[_DYN_TRACK_PAGE_VIEW /* @min:%2etrackPageView */]({ refUri: uri, properties: { duration: 0 } }); // SPA route change loading durations are undefined, so send 0\r\n                        }).bind(_self, _prevUri), _self.autoRoutePVDelay);\r\n                    }\r\n                }\r\n                _addHook(InstrumentEvent(history, \"pushState\", {\r\n                    ns: _evtNamespace,\r\n                    rsp: function () {\r\n                        if (_enableAutoRouteTracking) {\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"pushState\"));\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                        }\r\n                    }\r\n                }, true));\r\n                _addHook(InstrumentEvent(history, \"replaceState\", {\r\n                    ns: _evtNamespace,\r\n                    rsp: function () {\r\n                        if (_enableAutoRouteTracking) {\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"replaceState\"));\r\n                            _dispatchEvent(win, createDomEvent(namePrefix + \"locationchange\"));\r\n                        }\r\n                    }\r\n                }, true));\r\n                eventOn(win, namePrefix + \"popstate\", _popstateHandler, _evtNamespace);\r\n                eventOn(win, namePrefix + \"locationchange\", _locationChangeHandler, _evtNamespace);\r\n                _historyListenerAdded = true;\r\n            }\r\n            function _addUnhandledPromiseRejectionTracking(_window, _location) {\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extConfig, function () {\r\n                    _enableUnhandledPromiseRejectionTracking = _extConfig[_DYN_ENABLE_UNHANDLED_PRO12 /* @min:%2eenableUnhandledPromiseRejectionTracking */] === true;\r\n                    _autoExceptionInstrumented = _autoExceptionInstrumented || _extConfig[_DYN_AUTO_UNHANDLED_PROMI13 /* @min:%2eautoUnhandledPromiseInstrumented */];\r\n                    if (_enableUnhandledPromiseRejectionTracking && !_autoUnhandledPromiseInstrumented) {\r\n                        // We want to enable exception auto collection and it has not been done so yet\r\n                        _addHook(InstrumentEvent(_window, \"onunhandledrejection\", {\r\n                            ns: _evtNamespace,\r\n                            rsp: function (callDetails, error) {\r\n                                if (_enableUnhandledPromiseRejectionTracking && callDetails.rslt !== true) { // handled could be typeof function\r\n                                    _self[_DYN__ONERROR /* @min:%2e_onerror */](Exception[_DYN__CREATE_AUTO_EXCEPTI6 /* @min:%2eCreateAutoException */](_getReason(error), _location ? _location[_DYN_HREF /* @min:%2ehref */] : \"\", 0, 0, error, callDetails.evt));\r\n                                }\r\n                            }\r\n                        }, false));\r\n                        _extConfig[_DYN_AUTO_UNHANDLED_PROMI13 /* @min:%2eautoUnhandledPromiseInstrumented */] = _autoUnhandledPromiseInstrumented = true;\r\n                    }\r\n                }));\r\n            }\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {eLoggingSeverity} - The severity of the log message\r\n             * @param msgId - {_eInternalLogMessage} - The log message.\r\n             */\r\n            function _throwInternal(severity, msgId, msg, properties, isUserAct) {\r\n                _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]().throwInternal(severity, msgId, msg, properties, isUserAct);\r\n            }\r\n            function _initDefaults() {\r\n                _eventTracking = null;\r\n                _pageTracking = null;\r\n                _pageViewManager = null;\r\n                _pageViewPerformanceManager = null;\r\n                _pageVisitTimeManager = null;\r\n                _preInitTelemetryInitializers = null;\r\n                _isBrowserLinkTrackingEnabled = false;\r\n                _browserLinkInitializerAdded = false;\r\n                _enableAutoRouteTracking = false;\r\n                _historyListenerAdded = false;\r\n                _disableExceptionTracking = false;\r\n                _autoExceptionInstrumented = false;\r\n                _enableUnhandledPromiseRejectionTracking = false;\r\n                _autoUnhandledPromiseInstrumented = false;\r\n                _autoTrackPageVisitTime = false;\r\n                // Counts number of trackAjax invocations.\r\n                // By default we only monitor X ajax call per view to avoid too much load.\r\n                // Default value is set in config.\r\n                // This counter keeps increasing even after the limit is reached.\r\n                _trackAjaxAttempts = 0;\r\n                // array with max length of 2 that store current url and previous url for SPA page route change trackPageview use.\r\n                var location = getLocation(true);\r\n                _prevUri = location && location[_DYN_HREF /* @min:%2ehref */] || \"\";\r\n                _currUri = null;\r\n                _evtNamespace = null;\r\n                _extConfig = null;\r\n                // Define _self.config\r\n                objDefine(_self, \"config\", {\r\n                    g: function () { return _extConfig; }\r\n                });\r\n            }\r\n            // For backward compatibility\r\n            objDefine(_self, \"_pageViewManager\", { g: function () { return _pageViewManager; } });\r\n            objDefine(_self, \"_pageViewPerformanceManager\", { g: function () { return _pageViewPerformanceManager; } });\r\n            objDefine(_self, \"_pageVisitTimeManager\", { g: function () { return _pageVisitTimeManager; } });\r\n            objDefine(_self, \"_evtNamespace\", { g: function () { return \".\" + _evtNamespace; } });\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AnalyticsPlugin.prototype.getCookieMgr.\r\n// Removed Stub for AnalyticsPlugin.prototype.processTelemetry.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.startTrackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.stopTrackEvent.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackTrace.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackMetric.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackPageView.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendPageViewInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendPageViewPerformanceInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackPageViewPerformance.\r\n// Removed Stub for AnalyticsPlugin.prototype.startTrackPage.\r\n// Removed Stub for AnalyticsPlugin.prototype.stopTrackPage.\r\n// Removed Stub for AnalyticsPlugin.prototype.sendExceptionInternal.\r\n// Removed Stub for AnalyticsPlugin.prototype.trackException.\r\n// Removed Stub for AnalyticsPlugin.prototype._onerror.\r\n// Removed Stub for AnalyticsPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for AnalyticsPlugin.prototype.initialize.\r\n    AnalyticsPlugin.Version = '3.2.1'; // Not currently used anywhere\r\n    return AnalyticsPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { AnalyticsPlugin };\r\n//# sourceMappingURL=AnalyticsPlugin.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlCanUseSessionStorage, utlGetSessionStorage, utlRemoveSessionStorage, utlSetSessionStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _warnToConsole, dateNow, dumpObj, getJSON, hasJSON, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_PAGE_VISIT_START_TIM18, _DYN_TRACK_PREVIOUS_PAGE_1 } from \"../../__DynamicConstants\";\r\n/**\r\n * Used to track page visit durations\r\n */\r\nvar PageVisitTimeManager = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of PageVisitTimeManager\r\n     * @param pageVisitTimeTrackingHandler - Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)\r\n     * @returns {}\r\n     */\r\n    function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {\r\n        var prevPageVisitDataKeyName = \"prevPageVisitData\";\r\n        dynamicProto(PageVisitTimeManager, this, function (_self) {\r\n            _self[_DYN_TRACK_PREVIOUS_PAGE_1 /* @min:%2etrackPreviousPageVisit */] = function (currentPageName, currentPageUrl) {\r\n                try {\r\n                    // Restart timer for new page view\r\n                    var prevPageVisitTimeData = restartPageVisitTimer(currentPageName, currentPageUrl);\r\n                    // If there was a page already being timed, track the visit time for it now.\r\n                    if (prevPageVisitTimeData) {\r\n                        pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Auto track page visit time failed, metric will not be collected: \" + dumpObj(e));\r\n                }\r\n            };\r\n            /**\r\n             * Stops timing of current page (if exists) and starts timing for duration of visit to pageName\r\n             * @param pageName - Name of page to begin timing visit duration\r\n             * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.\r\n             */\r\n            function restartPageVisitTimer(pageName, pageUrl) {\r\n                var prevPageVisitData = null;\r\n                try {\r\n                    prevPageVisitData = stopPageVisitTimer();\r\n                    if (utlCanUseSessionStorage()) {\r\n                        if (utlGetSessionStorage(logger, prevPageVisitDataKeyName) != null) {\r\n                            throwError(\"Cannot call startPageVisit consecutively without first calling stopPageVisit\");\r\n                        }\r\n                        var currPageVisitDataStr = getJSON().stringify(new PageVisitData(pageName, pageUrl));\r\n                        utlSetSessionStorage(logger, prevPageVisitDataKeyName, currPageVisitDataStr);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Call to restart failed: \" + dumpObj(e));\r\n                    prevPageVisitData = null;\r\n                }\r\n                return prevPageVisitData;\r\n            }\r\n            /**\r\n             * Stops timing of current page, if exists.\r\n             * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.\r\n             */\r\n            function stopPageVisitTimer() {\r\n                var prevPageVisitData = null;\r\n                try {\r\n                    if (utlCanUseSessionStorage()) {\r\n                        // Define end time of page's visit\r\n                        var pageVisitEndTime = dateNow();\r\n                        // Try to retrieve  page name and start time from session storage\r\n                        var pageVisitDataJsonStr = utlGetSessionStorage(logger, prevPageVisitDataKeyName);\r\n                        if (pageVisitDataJsonStr && hasJSON()) {\r\n                            // if previous page data exists, set end time of visit\r\n                            prevPageVisitData = getJSON().parse(pageVisitDataJsonStr);\r\n                            prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData[_DYN_PAGE_VISIT_START_TIM18 /* @min:%2epageVisitStartTime */];\r\n                            // Remove data from storage since we already used it\r\n                            utlRemoveSessionStorage(logger, prevPageVisitDataKeyName);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _warnToConsole(logger, \"Stop page visit timer failed: \" + dumpObj(e));\r\n                    prevPageVisitData = null;\r\n                }\r\n                return prevPageVisitData;\r\n            }\r\n            // For backward compatibility\r\n            objDefine(_self, \"_logger\", { g: function () { return logger; } });\r\n            objDefine(_self, \"pageVisitTimeTrackingHandler\", { g: function () { return pageVisitTimeTrackingHandler; } });\r\n        });\r\n    }\r\n// Removed Stub for PageVisitTimeManager.prototype.trackPreviousPageVisit.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PageVisitTimeManager.__ieDyn=1;\n\n    return PageVisitTimeManager;\r\n}());\r\nexport { PageVisitTimeManager };\r\nvar PageVisitData = /** @class */ (function () {\r\n    function PageVisitData(pageName, pageUrl) {\r\n        this[_DYN_PAGE_VISIT_START_TIM18 /* @min:%2epageVisitStartTime */] = dateNow();\r\n        this.pageName = pageName;\r\n        this.pageUrl = pageUrl;\r\n    }\r\n    return PageVisitData;\r\n}());\r\nexport { PageVisitData };\r\n//# sourceMappingURL=PageVisitTimeManager.js.map","/*\n * Application Insights JavaScript SDK - Web Analytics, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dateTimeUtilsDuration } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        var _self = this;\r\n        var _events = {};\r\n        _self.start = function (name) {\r\n            if (typeof _events[name] !== \"undefined\") {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 62 /* _eInternalMessageId.StartCalledMoreThanOnce */, \"start was called more than once for this event without calling stop.\", { name: name, key: name }, true);\r\n            }\r\n            _events[name] = +new Date;\r\n        };\r\n        _self.stop = function (name, url, properties, measurements) {\r\n            var start = _events[name];\r\n            if (isNaN(start)) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 63 /* _eInternalMessageId.StopCalledWithoutStart */, \"stop was called without a corresponding start.\", { name: name, key: name }, true);\r\n            }\r\n            else {\r\n                var end = +new Date;\r\n                var duration = dateTimeUtilsDuration(start, end);\r\n                _self.action(name, url, duration, properties, measurements);\r\n            }\r\n            delete _events[name];\r\n            _events[name] = undefined;\r\n        };\r\n    }\r\n    return Timing;\r\n}());\r\nexport { Timing };\r\n//# sourceMappingURL=Timing.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_FEATURE_OPT_IN = \"featureOptIn\"; // Count: 4\r\nexport var _DYN_ON_CFG_CHANGE_RECEIV0 = \"onCfgChangeReceive\"; // Count: 2\r\nexport var _DYN_NON_OVERRIDE_CONFIGS = \"nonOverrideConfigs\"; // Count: 2\r\nexport var _DYN_SCHEDULE_FETCH_TIMEO1 = \"scheduleFetchTimeout\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { isNullOrUndefined, isObject, objExtend, objForEachKey, setValueByKey } from \"@nevware21/ts-utils\";\r\nimport { _DYN_FEATURE_OPT_IN } from \"./__DynamicConstants\";\r\n/**\r\n * Delete a config key in the given cfg, if the config key exists in nonOverrideConfigs and its value is set to true\r\n * @param cfg cfg to modify\r\n * @param nonOverrideConfigs nonOverrideConfigs\r\n * @param curLevel cur config level, starting at 0\r\n * @param maxLevel max config level\r\n * @returns new copy of modified configs\r\n */\r\nexport function replaceByNonOverrideCfg(cfg, nonOverrideConfigs, curLevel, maxLevel) {\r\n    try {\r\n        var exceedMaxLevel = curLevel > maxLevel;\r\n        if (exceedMaxLevel) {\r\n            cfg = null;\r\n        }\r\n        var curCfg_1 = curLevel == 0 ? objExtend({}, cfg) : cfg; // only copy cfg at the begining level\r\n        if (curCfg_1 && nonOverrideConfigs && !exceedMaxLevel) {\r\n            objForEachKey(curCfg_1, function (key) {\r\n                var nonOverrideVal = nonOverrideConfigs[key];\r\n                if (!!nonOverrideVal) {\r\n                    if (isObject(curCfg_1[key]) && isObject(nonOverrideVal)) {\r\n                        curCfg_1[key] = replaceByNonOverrideCfg(curCfg_1[key], nonOverrideVal, ++curLevel, maxLevel);\r\n                    }\r\n                    else {\r\n                        delete curCfg_1[key];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return curCfg_1;\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    // if errors happen, do nothing\r\n    return cfg;\r\n}\r\n//                                                     CDN Mode, value = B (CDN value = B)\r\n//                                |--------------------------------------------------------------------------|-----------|\r\n//                                |                    | none        | disabled    | enabled     | forceOn   | forceOff  |\r\n//                                | ------------------ | ----------- | ----------- | ----------- | --------- | --------- |\r\n// | User Mode, value = A         | none               | none        | disabled    | enabled     | enabled   | disabled  |\r\n// (user Value = A)               | disabled           | disabled    | disabled    | disabled    | enabled   | disabled  |\r\n//                                | enabled            | enabled     | disabled    | enabled     | enabled   | disabled  |\r\n//                                | none(blockCdn)     | none        | none        | none        | none      | none      |\r\n//                                | disabled(blockCdn) | disabled    | disabled    | disabled    | disabled  | disabled  |\r\n//                                | enabled(blockCdn)  | enabled     | enabled     | enabled     | enabled   | enabled   |\r\n// This matrix identifies how feature based overrides are selected (if present)\r\n//                                cdn Mode (cdn Value = B)\r\n//                   |---------------------------------------------------------------------------|\r\n//                   |                    | none     | disabled | enabled  | forceOn  | forceOff |\r\n//                   | ------------------ | ---------| ---------| ---------| ---------|----------|\r\n// | User Mode       | none               | A        | A        | A || B   | B || A   | B || A   |\r\n// (user Value = A)  | disabled           | A        | A        | A        | B || A   | B || A   |\r\n//                   | enabled            | A        | A        | A || B   | B || A   | B || A   |\r\n//                   | none(blockCdn)     | A        | A        | A        | A        | A        |\r\n//                   | disabled(blockCdn) | A        | A        | A        | A        | A        |\r\n//                   | enabled(blockCdn)  | A        | A        | A        | A        | A        |\r\n// Note:\r\n// Where the \"value\" is an object (map) of encoded key/values which will be used to override the real configuration\r\n// A = either the user supplied enable/disable value (via the `config.featureOptIn[name]`) or if not defined by the user the SDK defaults of the same.\r\n// B = The enable/disable value obtained from the CDN for the named feature\r\n// These are evaluated based on the above matrix to either\r\n// - A (Always the user/sdk value)\r\n// - B (Always the value from the CDN)\r\n// - A || B (If A is null or undefined use the value from the CDN (B) otherwise A)\r\n// - B || A (If B is null or undefined use the user/SDK value otherwise use the value from the CDN)\r\n//\r\n// The result of the value may also be null / undefined, which means there are no overrides to apply when the feature is enabled\r\nvar F = \"featureOptIn.\";\r\nvar M = \".mode\";\r\nvar ON = \".onCfg\";\r\nvar OFF = \".offCfg\";\r\nexport function resolveCdnFeatureCfg(field, cdnCfg, userOptInDetails) {\r\n    var _a;\r\n    // cdn conifg value\r\n    if (!cdnCfg || !cdnCfg.enabled) {\r\n        return null;\r\n    }\r\n    var cdnFt = (cdnCfg[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */] || {})[field] || { mode: 1 /* CdnFeatureMode.none */ };\r\n    var cdnM = cdnFt.mode;\r\n    var cdnOnV = cdnFt.onCfg;\r\n    var cdnOffV = cdnFt.offCfg;\r\n    var userFt = (userOptInDetails || {})[field] || { mode: 2 /* FeatureOptInMode.disable */ }; // default user mode is disable\r\n    var userM = userFt.mode;\r\n    var userOnV = userFt.onCfg;\r\n    var userOffV = userFt.offCfg;\r\n    var blockCdn = !!userFt.blockCdnCfg;\r\n    var mFld = F + field + M;\r\n    var onFld = F + field + ON;\r\n    var offFld = F + field + OFF;\r\n    var mode = userM;\r\n    var onV = userOnV;\r\n    var offV = userOffV;\r\n    if (!blockCdn) {\r\n        if (cdnM === 4 /* CdnFeatureMode.forceOn */ || cdnM === 5 /* CdnFeatureMode.forceOff */) {\r\n            mode = (cdnM == 4 /* CdnFeatureMode.forceOn */ ? 3 /* FeatureOptInMode.enable */ : 2 /* FeatureOptInMode.disable */);\r\n            onV = cdnOnV || userOnV;\r\n            offV = cdnOffV || userOffV;\r\n        }\r\n        else if (cdnM === 2 /* CdnFeatureMode.disable */ || userM === 2 /* FeatureOptInMode.disable */) {\r\n            mode = 2 /* FeatureOptInMode.disable */;\r\n            onV = userOnV || cdnOnV;\r\n            offV = userOffV || cdnOffV;\r\n        }\r\n        else if (cdnM === 3 /* CdnFeatureMode.enable */) {\r\n            mode = 3 /* FeatureOptInMode.enable */;\r\n            onV = userOnV || cdnOnV;\r\n            offV = userOffV || cdnOffV;\r\n        }\r\n        else if (cdnM === 1 /* CdnFeatureMode.none */ && userM === 1 /* FeatureOptInMode.none */) {\r\n            mode = 1 /* FeatureOptInMode.none */;\r\n        }\r\n    }\r\n    return _a = {},\r\n        _a[mFld] = mode,\r\n        _a[onFld] = onV,\r\n        _a[offFld] = offV,\r\n        _a;\r\n}\r\n// helper function to get cdn config with opt-in features\r\nexport function applyCdnfeatureCfg(cdnCfg, core) {\r\n    try {\r\n        if (!cdnCfg || !cdnCfg.enabled) {\r\n            return null;\r\n        }\r\n        if (!cdnCfg[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */]) {\r\n            return cdnCfg.config;\r\n        }\r\n        var optInMap = cdnCfg[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */];\r\n        var cdnConfig_1 = cdnCfg.config || {};\r\n        objForEachKey(optInMap, function (key) {\r\n            var featureVal = resolveCdnFeatureCfg(key, cdnCfg, core.config[_DYN_FEATURE_OPT_IN /* @min:%2efeatureOptIn */]);\r\n            if (!isNullOrUndefined(featureVal)) {\r\n                objForEachKey(featureVal, function (config, val) {\r\n                    setValueByKey(cdnConfig_1, config, val);\r\n                });\r\n                _overrideCdnCfgByFeature(key, featureVal, cdnConfig_1);\r\n            }\r\n        });\r\n        return cdnConfig_1;\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\nfunction _overrideCdnCfgByFeature(field, ftVal, config) {\r\n    var mode = ftVal[F + field + M];\r\n    var val = ftVal[F + field + ON];\r\n    var dVal = ftVal[F + field + OFF];\r\n    var target = null;\r\n    if (mode === 3 /* FeatureOptInMode.enable */) {\r\n        target = val;\r\n    }\r\n    if (mode === 2 /* FeatureOptInMode.disable */) {\r\n        target = dVal;\r\n    }\r\n    if (target) {\r\n        objForEachKey(target, function (key, cfg) {\r\n            setValueByKey(config, key, cfg);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=CfgSyncHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* CfgSyncPlugin.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nvar _a;\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BaseTelemetryPlugin, createProcessTelemetryContext, createUniqueNamespace, eventOff, eventOn, getGlobal, getJSON, isFetchSupported, isXhrSupported, mergeEvtNamespace, onConfigChange, sendCustomEvent } from \"@microsoft/applicationinsights-core-js\";\r\nimport { doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { isFunction, isNullOrUndefined, isPlainObject, objDeepFreeze, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { applyCdnfeatureCfg, replaceByNonOverrideCfg } from \"./CfgSyncHelperFuncs\";\r\nimport { _DYN_NON_OVERRIDE_CONFIGS, _DYN_ON_CFG_CHANGE_RECEIV0, _DYN_SCHEDULE_FETCH_TIMEO1 } from \"./__DynamicConstants\";\r\nvar EVENT_NAME = \"ai_cfgsync\";\r\nvar STR_GET_METHOD = \"GET\";\r\nvar FETCH_TIMEOUT = 1800000; // 30 minutes\r\nvar udfVal = undefined;\r\nvar defaultNonOverrideCfg = { instrumentationKey: true, connectionString: true, endpointUrl: true };\r\nvar _defaultConfig = objDeepFreeze((_a = {\r\n        syncMode: 1 /* ICfgSyncMode.Broadcast */,\r\n        blkCdnCfg: udfVal,\r\n        customEvtName: udfVal,\r\n        cfgUrl: udfVal,\r\n        overrideSyncFn: udfVal,\r\n        overrideFetchFn: udfVal\r\n    },\r\n    _a[_DYN_ON_CFG_CHANGE_RECEIV0 /* @min:onCfgChangeReceive */] = udfVal,\r\n    _a[_DYN_SCHEDULE_FETCH_TIMEO1 /* @min:scheduleFetchTimeout */] = FETCH_TIMEOUT,\r\n    _a[_DYN_NON_OVERRIDE_CONFIGS /* @min:nonOverrideConfigs */] = defaultNonOverrideCfg,\r\n    _a));\r\nvar CfgSyncPlugin = /** @class */ (function (_super) {\r\n    __extends(CfgSyncPlugin, _super);\r\n    function CfgSyncPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 198;\r\n        _this.identifier = \"AppInsightsCfgSyncPlugin\";\r\n        var _extensionConfig;\r\n        var _mainConfig; // throttle config should be wrapped in IConfiguration\r\n        var _evtName;\r\n        var _evtNamespace;\r\n        var _cfgUrl;\r\n        var _timeoutHandle;\r\n        var _receiveChanges;\r\n        var _broadcastChanges;\r\n        var _blkCdnCfg;\r\n        var _fetchTimeout;\r\n        var _retryCnt;\r\n        var _onCfgChangeReceive;\r\n        var _nonOverrideConfigs;\r\n        var _fetchFn;\r\n        var _overrideFetchFn;\r\n        var _overrideSyncFn;\r\n        var _paused = false;\r\n        dynamicProto(CfgSyncPlugin, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                _evtNamespace = mergeEvtNamespace(createUniqueNamespace(_self.identifier), core.evtNamespace && core.evtNamespace());\r\n                _populateDefaults(config);\r\n            };\r\n            _self.getCfg = function () {\r\n                return _mainConfig;\r\n            };\r\n            _self.pause = function () {\r\n                _paused = true;\r\n                _clearScheduledTimer();\r\n            };\r\n            _self.resume = function () {\r\n                _paused = false;\r\n                _setupTimer();\r\n            };\r\n            // used for V2 to manaully trigger config udpate\r\n            _self.setCfg = function (config) {\r\n                return _setCfg(config);\r\n            };\r\n            _self.sync = function (customDetails) {\r\n                return _sendCfgsyncEvents(customDetails);\r\n            };\r\n            _self.updateEventListenerName = function (eventName) {\r\n                return _updateEventListenerName(eventName);\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _eventOff();\r\n                _clearScheduledTimer();\r\n                _initDefaults();\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_broadcastChanges, _receiveChanges, _evtName, _blkCdnCfg, _nonOverrideConfigs];\r\n            };\r\n            function _initDefaults() {\r\n                _mainConfig = null;\r\n                _evtName = null;\r\n                _evtNamespace = null;\r\n                _cfgUrl = null;\r\n                _receiveChanges = null;\r\n                _broadcastChanges = null;\r\n                _nonOverrideConfigs = null;\r\n                _timeoutHandle = null;\r\n                _fetchTimeout = null;\r\n                _retryCnt = null;\r\n                _blkCdnCfg = null;\r\n                _overrideFetchFn = null;\r\n                _overrideSyncFn = null;\r\n                _onCfgChangeReceive = null;\r\n            }\r\n            function _populateDefaults(config) {\r\n                var identifier = _self.identifier;\r\n                var core = _self.core;\r\n                _self._addHook(onConfigChange(config, function () {\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    _extensionConfig = ctx.getExtCfg(identifier, _defaultConfig);\r\n                    var preBlkCdn = _blkCdnCfg;\r\n                    _blkCdnCfg = !!_extensionConfig.blkCdnCfg;\r\n                    // avoid initial call\r\n                    if (!isNullOrUndefined(preBlkCdn) && preBlkCdn !== _blkCdnCfg) {\r\n                        if (!_blkCdnCfg && _cfgUrl) {\r\n                            _fetchFn && _fetchFn(_cfgUrl, _onFetchComplete, _broadcastChanges);\r\n                        }\r\n                        else {\r\n                            _clearScheduledTimer();\r\n                        }\r\n                    }\r\n                    if (isNullOrUndefined(_receiveChanges)) {\r\n                        _receiveChanges = _extensionConfig.syncMode === 2 /* ICfgSyncMode.Receive */;\r\n                    }\r\n                    if (isNullOrUndefined(_broadcastChanges)) {\r\n                        _broadcastChanges = _extensionConfig.syncMode === 1 /* ICfgSyncMode.Broadcast */;\r\n                    }\r\n                    var newEvtName = _extensionConfig.customEvtName || EVENT_NAME;\r\n                    if (_evtName !== newEvtName) {\r\n                        if (_receiveChanges) {\r\n                            _updateEventListenerName(newEvtName);\r\n                        }\r\n                        else {\r\n                            _eventOff();\r\n                            _evtName = newEvtName;\r\n                        }\r\n                    }\r\n                    if (isNullOrUndefined(_cfgUrl)) {\r\n                        _cfgUrl = _extensionConfig.cfgUrl;\r\n                    }\r\n                    // if cfgUrl is set, we will ignore core config change\r\n                    if (!_cfgUrl) {\r\n                        _mainConfig = config;\r\n                        if (_broadcastChanges) {\r\n                            _sendCfgsyncEvents();\r\n                        }\r\n                    }\r\n                }));\r\n                _overrideSyncFn = _extensionConfig.overrideSyncFn;\r\n                _overrideFetchFn = _extensionConfig.overrideFetchFn;\r\n                _onCfgChangeReceive = _extensionConfig[_DYN_ON_CFG_CHANGE_RECEIV0 /* @min:%2eonCfgChangeReceive */];\r\n                _nonOverrideConfigs = _extensionConfig[_DYN_NON_OVERRIDE_CONFIGS /* @min:%2enonOverrideConfigs */]; // override values should not be changed\r\n                _fetchTimeout = _extensionConfig[_DYN_SCHEDULE_FETCH_TIMEO1 /* @min:%2escheduleFetchTimeout */];\r\n                _fetchFn = _getFetchFnInterface();\r\n                _retryCnt = 0;\r\n                // NOT support cfgURL change to avoid mutiple fetch calls\r\n                if (_cfgUrl && !_blkCdnCfg) {\r\n                    _fetchFn && _fetchFn(_cfgUrl, _onFetchComplete, _broadcastChanges);\r\n                }\r\n            }\r\n            function _setCfg(config, isAutoSync) {\r\n                if (config) {\r\n                    _mainConfig = config;\r\n                    if (!!isAutoSync && !_paused) {\r\n                        return _sendCfgsyncEvents();\r\n                    }\r\n                    if (_receiveChanges && !_paused) {\r\n                        _self.core.updateCfg(config);\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            function _eventOff() {\r\n                try {\r\n                    var global_1 = getGlobal();\r\n                    if (global_1) {\r\n                        eventOff(global_1, null, null, _evtNamespace);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _sendCfgsyncEvents(customDetails) {\r\n                try {\r\n                    if (!!_overrideSyncFn && isFunction(_overrideSyncFn)) {\r\n                        return _overrideSyncFn(_mainConfig, customDetails);\r\n                    }\r\n                    return sendCustomEvent(_evtName, _mainConfig, customDetails);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            }\r\n            function _updateEventListenerName(name) {\r\n                try {\r\n                    _eventOff();\r\n                    if (name) {\r\n                        _evtName = name;\r\n                        _addEventListener();\r\n                    }\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            }\r\n            function _getFetchFnInterface() {\r\n                var _fetchFn = _overrideFetchFn;\r\n                if (isNullOrUndefined(_fetchFn)) {\r\n                    if (isFetchSupported()) {\r\n                        _fetchFn = _fetchSender;\r\n                    }\r\n                    else if (isXhrSupported()) {\r\n                        _fetchFn = _xhrSender;\r\n                    }\r\n                }\r\n                return _fetchFn;\r\n            }\r\n            function _fetchSender(url, oncomplete, isAutoSync) {\r\n                var global = getGlobal();\r\n                var fetchFn = (global && global.fetch) || null;\r\n                if (url && fetchFn && isFunction(fetchFn)) {\r\n                    try {\r\n                        var init = {\r\n                            method: STR_GET_METHOD\r\n                        };\r\n                        var request = new Request(url, init);\r\n                        doAwaitResponse(fetch(request), function (result) {\r\n                            var response = result.value;\r\n                            if (!result.rejected) {\r\n                                if (response.ok) {\r\n                                    doAwaitResponse(response.text(), function (res) {\r\n                                        _doOnComplete(oncomplete, response.status, res.value, isAutoSync);\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    _doOnComplete(oncomplete, response.status, null, isAutoSync);\r\n                                }\r\n                            }\r\n                            else {\r\n                                _doOnComplete(oncomplete, 400);\r\n                            }\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        // eslint-disable-next-line no-empty\r\n                    }\r\n                }\r\n            }\r\n            function _xhrSender(url, oncomplete, isAutoSync) {\r\n                try {\r\n                    var xhr_1 = new XMLHttpRequest();\r\n                    xhr_1.open(STR_GET_METHOD, url);\r\n                    xhr_1.onreadystatechange = function () {\r\n                        if (xhr_1.readyState === XMLHttpRequest.DONE) {\r\n                            _doOnComplete(oncomplete, xhr_1.status, xhr_1.responseText, isAutoSync);\r\n                        }\r\n                    };\r\n                    xhr_1.onerror = function () {\r\n                        _doOnComplete(oncomplete, 400);\r\n                    };\r\n                    xhr_1.ontimeout = function () {\r\n                        _doOnComplete(oncomplete, 400);\r\n                    };\r\n                    xhr_1.send();\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _onFetchComplete(status, response, isAutoSync) {\r\n                try {\r\n                    if (status >= 200 && status < 400 && response) {\r\n                        _retryCnt = 0; // any successful response will reset retry count to 0\r\n                        var JSON_1 = getJSON();\r\n                        if (JSON_1) {\r\n                            var cdnCfg = JSON_1.parse(response); //comments are not allowed\r\n                            var cfg = applyCdnfeatureCfg(cdnCfg, _self.core);\r\n                            var newCfg = cfg && isPlainObject(cfg) && _replaceTartgetByKeys(cfg);\r\n                            newCfg && _setCfg(newCfg, isAutoSync);\r\n                            //cfg && _setCfg(cfg, isAutoSync);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _retryCnt++;\r\n                    }\r\n                    if (_retryCnt < 3) {\r\n                        _setupTimer();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _doOnComplete(oncomplete, status, response, isAutoSync) {\r\n                try {\r\n                    oncomplete(status, response, isAutoSync);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _addEventListener() {\r\n                if (_receiveChanges) {\r\n                    var global_2 = getGlobal();\r\n                    if (global_2) {\r\n                        try {\r\n                            eventOn(global_2, _evtName, function (event) {\r\n                                // TODO: add more validation here\r\n                                // may include a \"name\" or some other features to check\r\n                                var cfgEvent = event && event.detail;\r\n                                if (_onCfgChangeReceive && cfgEvent) {\r\n                                    _onCfgChangeReceive(cfgEvent);\r\n                                }\r\n                                else {\r\n                                    var cfg = cfgEvent && cfgEvent.cfg;\r\n                                    var newCfg = cfg && isPlainObject(cfg) && _replaceTartgetByKeys(cfg);\r\n                                    newCfg && _setCfg(newCfg);\r\n                                }\r\n                            }, _evtNamespace, true);\r\n                        }\r\n                        catch (e) {\r\n                            // eslint-disable-next-line no-empty\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // 4 levels\r\n            function _replaceTartgetByKeys(cfg, level) {\r\n                var _cfg = null;\r\n                try {\r\n                    if (cfg) {\r\n                        _cfg = replaceByNonOverrideCfg(cfg, _nonOverrideConfigs, 0, 5);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return _cfg;\r\n            }\r\n            /**\r\n             * Sets up the timer which triggers fetching cdn every 30mins after inital call\r\n             */\r\n            function _setupTimer() {\r\n                if (!_timeoutHandle && _fetchTimeout) {\r\n                    _timeoutHandle = scheduleTimeout(function () {\r\n                        _timeoutHandle = null;\r\n                        _fetchFn(_cfgUrl, _onFetchComplete, _broadcastChanges);\r\n                    }, _fetchTimeout);\r\n                    _timeoutHandle.unref();\r\n                }\r\n            }\r\n            function _clearScheduledTimer() {\r\n                _timeoutHandle && _timeoutHandle.cancel();\r\n                _timeoutHandle = null;\r\n                _retryCnt = 0;\r\n            }\r\n            _self.processTelemetry = function (env, itemCtx) {\r\n                _self.processNext(env, itemCtx);\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for CfgSyncPlugin.prototype.initialize.\r\n// Removed Stub for CfgSyncPlugin.prototype.getCfg.\r\n// Removed Stub for CfgSyncPlugin.prototype.setCfg.\r\n// Removed Stub for CfgSyncPlugin.prototype.sync.\r\n// Removed Stub for CfgSyncPlugin.prototype.updateEventListenerName.\r\n// Removed Stub for CfgSyncPlugin.prototype.pause.\r\n// Removed Stub for CfgSyncPlugin.prototype.resume.\r\n    //// Removed Stub for CfgSyncPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    CfgSyncPlugin.__ieDyn=1;\n\n    return CfgSyncPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { CfgSyncPlugin };\r\n//# sourceMappingURL=CfgSyncPlugin.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_DURATION = \"duration\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TAGS = \"tags\"; // Count: 17\r\nexport var _DYN_DEVICE_TYPE = \"deviceType\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 15\r\nexport var _DYN_NAME = \"name\"; // Count: 8\r\nexport var _DYN_TRACE_ID = \"traceID\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 38\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 5\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 7\r\nexport var _DYN_DATA_TYPE = \"dataType\"; // Count: 10\r\nexport var _DYN_ENVELOPE_TYPE = \"envelopeType\"; // Count: 7\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 7\r\nexport var _DYN__GET = \"_get\"; // Count: 5\r\nexport var _DYN_ENQUEUE = \"enqueue\"; // Count: 7\r\nexport var _DYN_COUNT = \"count\"; // Count: 7\r\nexport var _DYN_EVENTS_LIMIT_IN_MEM = \"eventsLimitInMem\"; // Count: 2\r\nexport var _DYN_PUSH = \"push\"; // Count: 9\r\nexport var _DYN_ITEM = \"item\"; // Count: 6\r\nexport var _DYN_EMIT_LINE_DELIMITED_0 = \"emitLineDelimitedJson\"; // Count: 3\r\nexport var _DYN_CLEAR = \"clear\"; // Count: 6\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 3\r\nexport var _DYN_MARK_AS_SENT = \"markAsSent\"; // Count: 4\r\nexport var _DYN_CLEAR_SENT = \"clearSent\"; // Count: 5\r\nexport var _DYN_BUFFER_OVERRIDE = \"bufferOverride\"; // Count: 3\r\nexport var _DYN__BUFFER__KEY = \"BUFFER_KEY\"; // Count: 5\r\nexport var _DYN__SENT__BUFFER__KEY = \"SENT_BUFFER_KEY\"; // Count: 8\r\nexport var _DYN_CONCAT = \"concat\"; // Count: 6\r\nexport var _DYN__MAX__BUFFER__SIZE = \"MAX_BUFFER_SIZE\"; // Count: 5\r\nexport var _DYN_TRIGGER_SEND = \"triggerSend\"; // Count: 5\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 16\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 3\r\nexport var _DYN__SENDER = \"_sender\"; // Count: 5\r\nexport var _DYN_CUSTOM_HEADERS = \"customHeaders\"; // Count: 3\r\nexport var _DYN_MAX_BATCH_SIZE_IN_BY1 = \"maxBatchSizeInBytes\"; // Count: 2\r\nexport var _DYN_ONUNLOAD_DISABLE_BEA2 = \"onunloadDisableBeacon\"; // Count: 3\r\nexport var _DYN_IS_BEACON_API_DISABL3 = \"isBeaconApiDisabled\"; // Count: 3\r\nexport var _DYN_ALWAYS_USE_XHR_OVERR4 = \"alwaysUseXhrOverride\"; // Count: 2\r\nexport var _DYN_DISABLE_XHR = \"disableXhr\"; // Count: 3\r\nexport var _DYN_ENABLE_SESSION_STORA5 = \"enableSessionStorageBuffer\"; // Count: 2\r\nexport var _DYN__BUFFER = \"_buffer\"; // Count: 9\r\nexport var _DYN_ONUNLOAD_DISABLE_FET6 = \"onunloadDisableFetch\"; // Count: 2\r\nexport var _DYN_DISABLE_SEND_BEACON_7 = \"disableSendBeaconSplit\"; // Count: 2\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN_ENABLE_SEND_PROMISE = \"enableSendPromise\"; // Count: 2\r\nexport var _DYN_GET_SENDER_INST = \"getSenderInst\"; // Count: 4\r\nexport var _DYN_UNLOAD_TRANSPORTS = \"unloadTransports\"; // Count: 2\r\nexport var _DYN_CONVERT_UNDEFINED = \"convertUndefined\"; // Count: 2\r\nexport var _DYN_MAX_BATCH_INTERVAL = \"maxBatchInterval\"; // Count: 2\r\nexport var _DYN_SERIALIZE = \"serialize\"; // Count: 4\r\nexport var _DYN__ON_ERROR = \"_onError\"; // Count: 7\r\nexport var _DYN__ON_PARTIAL_SUCCESS = \"_onPartialSuccess\"; // Count: 3\r\nexport var _DYN__ON_SUCCESS = \"_onSuccess\"; // Count: 6\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_ITEMS_ACCEPTED = \"itemsAccepted\"; // Count: 3\r\nexport var _DYN_ORI_PAYLOAD = \"oriPayload\"; // Count: 3\r\nexport var _DYN_BASE_TYPE = \"baseType\"; // Count: 4\r\nexport var _DYN_SAMPLE_RATE = \"sampleRate\"; // Count: 4\r\nexport var _DYN_EVENTS_SEND_REQUEST = \"eventsSendRequest\"; // Count: 2\r\nexport var _DYN_GET_SAMPLING_SCORE = \"getSamplingScore\"; // Count: 2\r\nexport var _DYN_GET_HASH_CODE_SCORE = \"getHashCodeScore\"; // Count: 4\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { CtxTagKeys, Data, Envelope, Event, Exception, HttpMethod, Metric, PageView, PageViewPerformance, RemoteDependencyData, SampleRate, Trace, dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, _warnToConsole, getJSON, hasJSON, isNullOrUndefined, isNumber, isString, isTruthy, objForEachKey, optimizeObject, setValue, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_DURATION } from \"./InternalConstants\";\r\nimport { _DYN_DATA, _DYN_DATA_TYPE, _DYN_DEVICE_TYPE, _DYN_ENVELOPE_TYPE, _DYN_LENGTH, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_STRINGIFY, _DYN_TAGS, _DYN_TO_STRING, _DYN_TRACE_ID } from \"./__DynamicConstants\";\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar strBaseType = \"baseType\";\r\nvar strBaseData = \"baseData\";\r\nvar strProperties = \"properties\";\r\nvar strTrue = \"true\";\r\nfunction _setValueIf(target, field, value) {\r\n    return setValue(target, field, value, isTruthy);\r\n}\r\n/*\r\n * Maps Part A data from CS 4.0\r\n */\r\nfunction _extractPartAExtensions(logger, item, env) {\r\n    // todo: switch to keys from common in this method\r\n    var envTags = env[_DYN_TAGS /* @min:%2etags */] = env[_DYN_TAGS /* @min:%2etags */] || {};\r\n    var itmExt = item.ext = item.ext || {};\r\n    var itmTags = item[_DYN_TAGS /* @min:%2etags */] = item[_DYN_TAGS /* @min:%2etags */] || [];\r\n    var extUser = itmExt.user;\r\n    if (extUser) {\r\n        _setValueIf(envTags, CtxTagKeys.userAuthUserId, extUser.authId);\r\n        _setValueIf(envTags, CtxTagKeys.userId, extUser.id || extUser.localId);\r\n    }\r\n    var extApp = itmExt.app;\r\n    if (extApp) {\r\n        _setValueIf(envTags, CtxTagKeys.sessionId, extApp.sesId);\r\n    }\r\n    var extDevice = itmExt.device;\r\n    if (extDevice) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceId, extDevice.id || extDevice.localId);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice.deviceClass);\r\n        _setValueIf(envTags, CtxTagKeys.deviceIp, extDevice.ip);\r\n        _setValueIf(envTags, CtxTagKeys.deviceModel, extDevice.model);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice[_DYN_DEVICE_TYPE /* @min:%2edeviceType */]);\r\n    }\r\n    var web = item.ext.web;\r\n    if (web) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceLanguage, web.browserLang);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowserVersion, web.browserVer);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowser, web.browser);\r\n        var envData = env[_DYN_DATA /* @min:%2edata */] = env[_DYN_DATA /* @min:%2edata */] || {};\r\n        var envBaseData = envData[strBaseData] = envData[strBaseData] || {};\r\n        var envProps = envBaseData[strProperties] = envBaseData[strProperties] || {};\r\n        _setValueIf(envProps, \"domain\", web.domain);\r\n        _setValueIf(envProps, \"isManual\", web.isManual ? strTrue : null);\r\n        _setValueIf(envProps, \"screenRes\", web.screenRes);\r\n        _setValueIf(envProps, \"userConsent\", web.userConsent ? strTrue : null);\r\n    }\r\n    var extOs = itmExt.os;\r\n    if (extOs) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceOS, extOs[_DYN_NAME /* @min:%2ename */]);\r\n        _setValueIf(envTags, CtxTagKeys.deviceOSVersion, extOs.osVer);\r\n    }\r\n    // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n    var extTrace = itmExt.trace;\r\n    if (extTrace) {\r\n        _setValueIf(envTags, CtxTagKeys.operationParentId, extTrace.parentID);\r\n        _setValueIf(envTags, CtxTagKeys.operationName, dataSanitizeString(logger, extTrace[_DYN_NAME /* @min:%2ename */]));\r\n        _setValueIf(envTags, CtxTagKeys.operationId, extTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n    }\r\n    // Sample 4.0 schema\r\n    //  {\r\n    //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n    //     \"name\" : \"MetricWithNamespace\",\r\n    //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n    //     \"ext\": {  \"cloud\": {\r\n    //          \"role\": \"WATSON3\",\r\n    //          \"roleInstance\": \"CO4AEAP00000260\"\r\n    //      },\r\n    //      \"device\": {}, \"correlation\": {} },\r\n    //      \"tags\": [\r\n    //        { \"amazon.region\" : \"east2\" },\r\n    //        { \"os.expid\" : \"wp:02df239\" }\r\n    //     ]\r\n    //   }\r\n    var tgs = {};\r\n    // deals with tags.push({object})\r\n    for (var i = itmTags[_DYN_LENGTH /* @min:%2elength */] - 1; i >= 0; i--) {\r\n        var tg = itmTags[i];\r\n        objForEachKey(tg, function (key, value) {\r\n            tgs[key] = value;\r\n        });\r\n        itmTags.splice(i, 1);\r\n    }\r\n    // deals with tags[key]=value (and handles hasOwnProperty)\r\n    objForEachKey(itmTags, function (tg, value) {\r\n        tgs[tg] = value;\r\n    });\r\n    var theTags = __assign(__assign({}, envTags), tgs);\r\n    if (!theTags[CtxTagKeys.internalSdkVersion]) {\r\n        // Append a version in case it is not already set\r\n        theTags[CtxTagKeys.internalSdkVersion] = dataSanitizeString(logger, \"javascript:\".concat(EnvelopeCreator.Version), 64);\r\n    }\r\n    env[_DYN_TAGS /* @min:%2etags */] = optimizeObject(theTags);\r\n}\r\nfunction _extractPropsAndMeasurements(data, properties, measurements) {\r\n    if (!isNullOrUndefined(data)) {\r\n        objForEachKey(data, function (key, value) {\r\n            if (isNumber(value)) {\r\n                measurements[key] = value;\r\n            }\r\n            else if (isString(value)) {\r\n                properties[key] = value;\r\n            }\r\n            else if (hasJSON()) {\r\n                properties[key] = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue) {\r\n    if (!isNullOrUndefined(properties)) {\r\n        objForEachKey(properties, function (key, value) {\r\n            properties[key] = value || customUndefinedValue;\r\n        });\r\n    }\r\n}\r\n// TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\nfunction _createEnvelope(logger, envelopeType, telemetryItem, data) {\r\n    var envelope = new Envelope(logger, data, envelopeType);\r\n    _setValueIf(envelope, \"sampleRate\", telemetryItem[SampleRate]);\r\n    if ((telemetryItem[strBaseData] || {}).startTime) {\r\n        // Starting from Version 3.0.3, the time property will be assigned by the startTime value,\r\n        // which records the loadEvent time for the pageView event.\r\n        envelope.time = toISOString(telemetryItem[strBaseData].startTime);\r\n    }\r\n    envelope.iKey = telemetryItem.iKey;\r\n    var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n    envelope[_DYN_NAME /* @min:%2ename */] = envelope[_DYN_NAME /* @min:%2ename */].replace(\"{0}\", iKeyNoDashes);\r\n    // extract all extensions from ctx\r\n    _extractPartAExtensions(logger, telemetryItem, envelope);\r\n    // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n    telemetryItem[_DYN_TAGS /* @min:%2etags */] = telemetryItem[_DYN_TAGS /* @min:%2etags */] || [];\r\n    return optimizeObject(envelope);\r\n}\r\nfunction EnvelopeCreatorInit(logger, telemetryItem) {\r\n    if (isNullOrUndefined(telemetryItem[strBaseData])) {\r\n        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 46 /* _eInternalMessageId.TelemetryEnvelopeInvalid */, \"telemetryItem.baseData cannot be null.\");\r\n    }\r\n}\r\nexport var EnvelopeCreator = {\r\n    Version: '3.2.1'\r\n};\r\nexport function DependencyEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    if (isNullOrUndefined(bd)) {\r\n        _warnToConsole(logger, \"Invalid input for dependency data\");\r\n        return null;\r\n    }\r\n    var method = bd[strProperties] && bd[strProperties][HttpMethod] ? bd[strProperties][HttpMethod] : \"GET\";\r\n    var remoteDepData = new RemoteDependencyData(logger, bd.id, bd.target, bd[_DYN_NAME /* @min:%2ename */], bd[STR_DURATION /* @min:%2eduration */], bd.success, bd.responseCode, method, bd.type, bd.correlationContext, customProperties, customMeasurements);\r\n    var data = new Data(RemoteDependencyData[_DYN_DATA_TYPE /* @min:%2edataType */], remoteDepData);\r\n    return _createEnvelope(logger, RemoteDependencyData[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function EventEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customProperties = {};\r\n    var customMeasurements = {};\r\n    if (telemetryItem[strBaseType] !== Event[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n        customProperties[\"baseTypeSource\"] = telemetryItem[strBaseType]; // save the passed in base type as a property\r\n    }\r\n    if (telemetryItem[strBaseType] === Event[_DYN_DATA_TYPE /* @min:%2edataType */]) { // take collection\r\n        customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n        customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    }\r\n    else { // if its not a known type, convert to custom event\r\n        if (telemetryItem[strBaseData]) {\r\n            _extractPropsAndMeasurements(telemetryItem[strBaseData], customProperties, customMeasurements);\r\n        }\r\n    }\r\n    // Extract root level properties from part C telemetryItem.data\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var eventName = telemetryItem[strBaseData][_DYN_NAME /* @min:%2ename */];\r\n    var eventData = new Event(logger, eventName, customProperties, customMeasurements);\r\n    var data = new Data(Event[_DYN_DATA_TYPE /* @min:%2edataType */], eventData);\r\n    return _createEnvelope(logger, Event[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function ExceptionEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Extract root level properties from part C telemetryItem.data\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    var exData = Exception.CreateFromInterface(logger, bd, customProperties, customMeasurements);\r\n    var data = new Data(Exception[_DYN_DATA_TYPE /* @min:%2edataType */], exData);\r\n    return _createEnvelope(logger, Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function MetricEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var baseData = telemetryItem[strBaseData];\r\n    var props = baseData[strProperties] || {};\r\n    var measurements = baseData[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseMetricData = new Metric(logger, baseData[_DYN_NAME /* @min:%2ename */], baseData.average, baseData.sampleCount, baseData.min, baseData.max, baseData.stdDev, props, measurements);\r\n    var data = new Data(Metric[_DYN_DATA_TYPE /* @min:%2edataType */], baseMetricData);\r\n    return _createEnvelope(logger, Metric[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n    var duration;\r\n    var baseData = telemetryItem[strBaseData];\r\n    if (!isNullOrUndefined(baseData) &&\r\n        !isNullOrUndefined(baseData[strProperties]) &&\r\n        !isNullOrUndefined(baseData[strProperties][STR_DURATION])) { // from part B properties\r\n        duration = baseData[strProperties][STR_DURATION];\r\n        delete baseData[strProperties][STR_DURATION];\r\n    }\r\n    else if (!isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */]) &&\r\n        !isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION])) { // from custom properties\r\n        duration = telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n        delete telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n    var currentContextId;\r\n    if (((telemetryItem.ext || {}).trace || {})[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n        currentContextId = telemetryItem.ext.trace[_DYN_TRACE_ID /* @min:%2etraceID */];\r\n    }\r\n    var id = bd.id || currentContextId;\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.refUri)) {\r\n        properties[\"refUri\"] = bd.refUri;\r\n    }\r\n    // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.pageType)) {\r\n        properties[\"pageType\"] = bd.pageType;\r\n    }\r\n    // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.isLoggedIn)) {\r\n        properties[\"isLoggedIn\"] = bd.isLoggedIn[_DYN_TO_STRING /* @min:%2etoString */]();\r\n    }\r\n    // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd[strProperties])) {\r\n        var pageTags = bd[strProperties];\r\n        objForEachKey(pageTags, function (key, value) {\r\n            properties[key] = value;\r\n        });\r\n    }\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var pageViewData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n    var data = new Data(PageView[_DYN_DATA_TYPE /* @min:%2edataType */], pageViewData);\r\n    return _createEnvelope(logger, PageView[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewPerformanceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var bd = telemetryItem[strBaseData];\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri || bd.url;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n    var data = new Data(PageViewPerformance[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, PageViewPerformance[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function TraceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var message = telemetryItem[strBaseData].message;\r\n    var severityLevel = telemetryItem[strBaseData].severityLevel;\r\n    var props = telemetryItem[strBaseData][strProperties] || {};\r\n    var measurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseData = new Trace(logger, message, severityLevel, props, measurements);\r\n    var data = new Data(Trace[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, Trace[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\n//# sourceMappingURL=EnvelopeCreator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlGetSessionStorage, utlRemoveSessionStorage, utlSetSessionStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, arrForEach, arrIndexOf, dumpObj, getExceptionName, getJSON, isArray, isFunction, isNullOrUndefined, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_ITEM, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_PUSH, _DYN_STRINGIFY, _DYN__BUFFER__KEY, _DYN__GET, _DYN__MAX__BUFFER__SIZE, _DYN__SENT__BUFFER__KEY } from \"./__DynamicConstants\";\r\nvar BaseSendBuffer = /** @class */ (function () {\r\n    function BaseSendBuffer(logger, config) {\r\n        var _buffer = [];\r\n        var _bufferFullMessageSent = false;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        this[_DYN__GET /* @min:%2e_get */] = function () {\r\n            return _buffer;\r\n        };\r\n        this._set = function (buffer) {\r\n            _buffer = buffer;\r\n            return _buffer;\r\n        };\r\n        dynamicProto(BaseSendBuffer, this, function (_self) {\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= config[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 105 /* _eInternalMessageId.InMemoryStorageBufferFull */, \"Maximum in-memory buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _buffer[_DYN_PUSH /* @min:%2epush */](payload);\r\n                return;\r\n            };\r\n            _self[_DYN_COUNT /* @min:%2ecount */] = function () {\r\n                return _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.size = function () {\r\n                var size = _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n                for (var lp = 0; lp < _buffer[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    size += (_buffer[lp].item)[_DYN_LENGTH /* @min:%2elength */];\r\n                }\r\n                if (!config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */]) {\r\n                    size += 2;\r\n                }\r\n                return size;\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _buffer = [];\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self.getItems = function () {\r\n                return _buffer.slice(0);\r\n            };\r\n            _self.batchPayloads = function (payloads) {\r\n                if (payloads && payloads[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var payloadStr_1 = [];\r\n                    arrForEach(payloads, function (payload) {\r\n                        payloadStr_1[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                    });\r\n                    var batch = config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */] ?\r\n                        payloadStr_1.join(\"\\n\") :\r\n                        \"[\" + payloadStr_1.join(\",\") + \"]\";\r\n                    return batch;\r\n                }\r\n                return null;\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                var items = _buffer.slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                var newBuffer = !!canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(items, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                return newBuffer;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for BaseSendBuffer.prototype.enqueue.\r\n// Removed Stub for BaseSendBuffer.prototype.count.\r\n// Removed Stub for BaseSendBuffer.prototype.size.\r\n// Removed Stub for BaseSendBuffer.prototype.clear.\r\n// Removed Stub for BaseSendBuffer.prototype.getItems.\r\n// Removed Stub for BaseSendBuffer.prototype.batchPayloads.\r\n// Removed Stub for BaseSendBuffer.prototype.createNew.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseSendBuffer.__ieDyn=1;\n\n    return BaseSendBuffer;\r\n}());\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function (_super) {\r\n    __extends(ArraySendBuffer, _super);\r\n    function ArraySendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        dynamicProto(ArraySendBuffer, _this, function (_self, _base) {\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                // not supported\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for ArraySendBuffer.prototype.markAsSent.\r\n// Removed Stub for ArraySendBuffer.prototype.clearSent.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ArraySendBuffer.__ieDyn=1;\n\n    return ArraySendBuffer;\r\n}(BaseSendBuffer));\r\nexport { ArraySendBuffer };\r\nvar PREVIOUS_KEYS = [\"AI_buffer\", \"AI_sentBuffer\"];\r\n/*\r\n * Session storage buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function (_super) {\r\n    __extends(SessionStorageSendBuffer, _super);\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        var _bufferFullMessageSent = false;\r\n        //Note: should not use config.namePrefix directly, because it will always refers to the latest namePrefix\r\n        var _namePrefix = config === null || config === void 0 ? void 0 : config.namePrefix;\r\n        // TODO: add remove buffer override as well\r\n        var _b = config[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */] || { getItem: utlGetSessionStorage, setItem: utlSetSessionStorage }, getItem = _b.getItem, setItem = _b.setItem;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        dynamicProto(SessionStorageSendBuffer, _this, function (_self, _base) {\r\n            var bufferItems = _getBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */]);\r\n            var itemsInSentBuffer = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n            var previousItems = _getPreviousEvents();\r\n            var notDeliveredItems = itemsInSentBuffer[_DYN_CONCAT /* @min:%2econcat */](previousItems);\r\n            var buffer = _self._set(bufferItems[_DYN_CONCAT /* @min:%2econcat */](notDeliveredItems));\r\n            // If the buffer has too many items, drop items from the end.\r\n            if (buffer[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                buffer[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n            }\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], buffer);\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Maximum buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _base[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], _self._set(_removePayloadsFromBuffer(payload, _self[_DYN__GET /* @min:%2e_get */]())));\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                if (sentElements instanceof Array && payload instanceof Array) {\r\n                    sentElements = sentElements[_DYN_CONCAT /* @min:%2econcat */](payload);\r\n                    if (sentElements[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                        // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                        // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Sent buffer reached its maximum size: \" + sentElements[_DYN_LENGTH /* @min:%2elength */], true);\r\n                        sentElements[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n                    }\r\n                    _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n                }\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                sentElements = _removePayloadsFromBuffer(payload, sentElements);\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                canUseSessionStorage = !!canUseSessionStorage;\r\n                var unsentItems = _self[_DYN__GET /* @min:%2e_get */]().slice(0);\r\n                var sentItems = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]).slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                // to make sure that we do not send duplicated payloads when it is switched back to previous one\r\n                _self[_DYN_CLEAR /* @min:%2eclear */]();\r\n                var newBuffer = canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(unsentItems, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                if (canUseSessionStorage) {\r\n                    // arr buffer will clear all payloads if markAsSent() is called\r\n                    newBuffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](sentItems);\r\n                }\r\n                return newBuffer;\r\n            };\r\n            function _removePayloadsFromBuffer(payloads, buffer) {\r\n                var remaining = [];\r\n                var payloadStr = [];\r\n                arrForEach(payloads, function (payload) {\r\n                    payloadStr[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                });\r\n                arrForEach(buffer, function (value) {\r\n                    if (!isFunction(value) && arrIndexOf(payloadStr, value[_DYN_ITEM /* @min:%2eitem */]) === -1) {\r\n                        remaining[_DYN_PUSH /* @min:%2epush */](value);\r\n                    }\r\n                });\r\n                return remaining;\r\n            }\r\n            function _getBuffer(key) {\r\n                var prefixedKey = key;\r\n                prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                return _getBufferBase(prefixedKey);\r\n            }\r\n            function _getBufferBase(key) {\r\n                try {\r\n                    var bufferJson = getItem(logger, key);\r\n                    if (bufferJson) {\r\n                        var buffer_1 = getJSON().parse(bufferJson);\r\n                        if (isString(buffer_1)) {\r\n                            // When using some version prototype.js the stringify / parse cycle does not decode array's correctly\r\n                            buffer_1 = getJSON().parse(buffer_1);\r\n                        }\r\n                        if (buffer_1 && isArray(buffer_1)) {\r\n                            return buffer_1;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 42 /* _eInternalMessageId.FailedToRestoreStorageBuffer */, \" storage key: \" + key + \", \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            function _setBuffer(key, buffer) {\r\n                var prefixedKey = key;\r\n                try {\r\n                    prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                    var bufferJson = JSON[_DYN_STRINGIFY /* @min:%2estringify */](buffer);\r\n                    setItem(logger, prefixedKey, bufferJson);\r\n                }\r\n                catch (e) {\r\n                    // if there was an error, clear the buffer\r\n                    // telemetry is stored in the _buffer array so we won't loose any items\r\n                    setItem(logger, prefixedKey, JSON[_DYN_STRINGIFY /* @min:%2estringify */]([]));\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \" storage key: \" + prefixedKey + \", \" + getExceptionName(e) + \". Buffer cleared\", { exception: dumpObj(e) });\r\n                }\r\n            }\r\n            // this removes buffer with prefix+key\r\n            function _getPreviousEvents() {\r\n                var items = [];\r\n                try {\r\n                    arrForEach(PREVIOUS_KEYS, function (key) {\r\n                        var events = _getItemsFromPreviousKey(key);\r\n                        items = items[_DYN_CONCAT /* @min:%2econcat */](events);\r\n                        // to make sure that we also transfer items from old prefixed + key buffer\r\n                        if (_namePrefix) {\r\n                            var prefixedKey = _namePrefix + \"_\" + key;\r\n                            var prefixEvents = _getItemsFromPreviousKey(prefixedKey);\r\n                            items = items[_DYN_CONCAT /* @min:%2econcat */](prefixEvents);\r\n                        }\r\n                    });\r\n                    return items;\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \"Transfer events from previous buffers: \" + getExceptionName(e) + \". previous Buffer items can not be removed\", { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            // transform string[] to IInternalStorageItem[]\r\n            function _getItemsFromPreviousKey(key) {\r\n                try {\r\n                    var items = _getBufferBase(key);\r\n                    var transFormedItems_1 = [];\r\n                    arrForEach(items, function (item) {\r\n                        var internalItem = {\r\n                            item: item,\r\n                            cnt: 0 // previous events will be default to 0 count\r\n                        };\r\n                        transFormedItems_1[_DYN_PUSH /* @min:%2epush */](internalItem);\r\n                    });\r\n                    // remove the session storage if we can add events back\r\n                    utlRemoveSessionStorage(logger, key);\r\n                    return transFormedItems_1;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return [];\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for SessionStorageSendBuffer.prototype.enqueue.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clear.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.markAsSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clearSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.createNew.\r\n    var _a;\r\n    _a = SessionStorageSendBuffer;\r\n    SessionStorageSendBuffer.VERSION = \"_1\";\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\" + _a.VERSION;\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\" + _a.VERSION;\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}(BaseSendBuffer));\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BreezeChannelIdentifier, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, Event, Exception, Metric, PageView, PageViewPerformance, ProcessLegacy, RemoteDependencyData, RequestHeaders, SampleRate, Trace, createOfflineListener, isInternalApplicationInsightsEndpoint, utlCanUseSessionStorage, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, SenderPostManager, _throwInternal, _warnToConsole, arrForEach, cfgDfBoolean, cfgDfValidate, createProcessTelemetryContext, createUniqueNamespace, dateNow, dumpObj, formatErrorMessageXdr, formatErrorMessageXhr, getExceptionName, getIEVersion, isArray, isBeaconsSupported, isFetchSupported, isNullOrUndefined, mergeEvtNamespace, objExtend, onConfigChange, parseResponse, prependTransports, runTargetUnload } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isNumber, isString, isTruthy, objDeepFreeze, objDefine, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from \"./EnvelopeCreator\";\r\nimport { ArraySendBuffer, SessionStorageSendBuffer } from \"./SendBuffer\";\r\nimport { Serializer } from \"./Serializer\";\r\nimport { Sample } from \"./TelemetryProcessors/Sample\";\r\nimport { _DYN_ALWAYS_USE_XHR_OVERR4, _DYN_BASE_TYPE, _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONVERT_UNDEFINED, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_CUSTOM_HEADERS, _DYN_DATA, _DYN_DIAG_LOG, _DYN_DISABLE_SEND_BEACON_7, _DYN_DISABLE_XHR, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENABLE_SEND_PROMISE, _DYN_ENABLE_SESSION_STORA5, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_EVENTS_SEND_REQUEST, _DYN_GET_SENDER_INST, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_BEACON_API_DISABL3, _DYN_ITEM, _DYN_ITEMS_ACCEPTED, _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_MAX_BATCH_INTERVAL, _DYN_MAX_BATCH_SIZE_IN_BY1, _DYN_ONUNLOAD_DISABLE_BEA2, _DYN_ONUNLOAD_DISABLE_FET6, _DYN_ORI_PAYLOAD, _DYN_PUSH, _DYN_SAMPLE_RATE, _DYN_SERIALIZE, _DYN_TAGS, _DYN_TRIGGER_SEND, _DYN_UNLOAD_TRANSPORTS, _DYN__BUFFER, _DYN__ON_ERROR, _DYN__ON_PARTIAL_SUCCESS, _DYN__ON_SUCCESS, _DYN__SENDER } from \"./__DynamicConstants\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar EMPTY_STR = \"\";\r\nvar FetchSyncRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)\r\nfunction _getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nfunction isOverrideFn(httpXHROverride) {\r\n    return httpXHROverride && httpXHROverride.sendPOST;\r\n}\r\nvar defaultAppInsightsChannelConfig = objDeepFreeze((_a = {\r\n        // Use the default value (handles empty string in the configuration)\r\n        endpointUrl: cfgDfValidate(isTruthy, DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH)\r\n    },\r\n    _a[_DYN_EMIT_LINE_DELIMITED_0 /* @min:emitLineDelimitedJson */] = cfgDfBoolean(),\r\n    _a[_DYN_MAX_BATCH_INTERVAL /* @min:maxBatchInterval */] = 15000,\r\n    _a[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:maxBatchSizeInBytes */] = 102400,\r\n    _a.disableTelemetry = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_SESSION_STORA5 /* @min:enableSessionStorageBuffer */] = cfgDfBoolean(true),\r\n    _a.isRetryDisabled = cfgDfBoolean(),\r\n    _a[_DYN_IS_BEACON_API_DISABL3 /* @min:isBeaconApiDisabled */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_SEND_BEACON_7 /* @min:disableSendBeaconSplit */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:onunloadDisableFetch */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:onunloadDisableBeacon */] = cfgDfBoolean(),\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a.namePrefix = UNDEFINED_VALUE,\r\n    _a.samplingPercentage = cfgDfValidate(_chkSampling, 100),\r\n    _a[_DYN_CUSTOM_HEADERS /* @min:customHeaders */] = UNDEFINED_VALUE,\r\n    _a[_DYN_CONVERT_UNDEFINED /* @min:convertUndefined */] = UNDEFINED_VALUE,\r\n    _a[_DYN_EVENTS_LIMIT_IN_MEM /* @min:eventsLimitInMem */] = 10000,\r\n    _a[_DYN_BUFFER_OVERRIDE /* @min:bufferOverride */] = false,\r\n    _a.httpXHROverride = { isVal: isOverrideFn, v: UNDEFINED_VALUE },\r\n    _a[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:alwaysUseXhrOverride */] = cfgDfBoolean(),\r\n    _a.transports = UNDEFINED_VALUE,\r\n    _a.retryCodes = UNDEFINED_VALUE,\r\n    _a.maxRetryCnt = { isVal: isNumber, v: 10 },\r\n    _a));\r\nfunction _chkSampling(value) {\r\n    return !isNaN(value) && value > 0 && value <= 100;\r\n}\r\nvar EnvelopeTypeCreator = (_b = {},\r\n    _b[Event.dataType] = EventEnvelopeCreator,\r\n    _b[Trace.dataType] = TraceEnvelopeCreator,\r\n    _b[PageView.dataType] = PageViewEnvelopeCreator,\r\n    _b[PageViewPerformance.dataType] = PageViewPerformanceEnvelopeCreator,\r\n    _b[Exception.dataType] = ExceptionEnvelopeCreator,\r\n    _b[Metric.dataType] = MetricEnvelopeCreator,\r\n    _b[RemoteDependencyData.dataType] = DependencyEnvelopeCreator,\r\n    _b);\r\nvar Sender = /** @class */ (function (_super) {\r\n    __extends(Sender, _super);\r\n    function Sender() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 1001;\r\n        _this.identifier = BreezeChannelIdentifier;\r\n        // Don't set the defaults here, set them in the _initDefaults() as this is also called during unload\r\n        var _consecutiveErrors; // How many times in a row a retryable error condition has occurred.\r\n        var _retryAt; // The time to retry at in milliseconds from 1970/01/01 (this makes the timer calculation easy).\r\n        var _lastSend; // The time of the last send operation.\r\n        var _paused; // Flag indicating that the sending should be paused\r\n        var _timeoutHandle; // Handle to the timer for delayed sending of batches of data.\r\n        var _serializer;\r\n        var _stamp_specific_redirects;\r\n        var _headers;\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _syncUnloadSender; // The identified sender to use for the synchronous unload stage\r\n        var _offlineListener;\r\n        var _evtNamespace;\r\n        var _endpointUrl;\r\n        var _orgEndpointUrl;\r\n        var _maxBatchSizeInBytes;\r\n        var _beaconSupported;\r\n        var _beaconOnUnloadSupported;\r\n        var _beaconNormalSupported;\r\n        var _customHeaders;\r\n        var _disableTelemetry;\r\n        var _instrumentationKey;\r\n        var _convertUndefined;\r\n        var _isRetryDisabled;\r\n        var _maxBatchInterval;\r\n        var _sessionStorageUsed;\r\n        var _bufferOverrideUsed;\r\n        var _namePrefix;\r\n        var _enableSendPromise;\r\n        var _alwaysUseCustomSend;\r\n        var _disableXhr;\r\n        var _fetchKeepAlive;\r\n        var _xhrSend;\r\n        var _fallbackSend;\r\n        var _disableBeaconSplit;\r\n        var _sendPostMgr;\r\n        var _retryCodes;\r\n        dynamicProto(Sender, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.pause = function () {\r\n                _clearScheduledTimer();\r\n                _paused = true;\r\n            };\r\n            _self.resume = function () {\r\n                if (_paused) {\r\n                    _paused = false;\r\n                    _retryAt = null;\r\n                    // flush if we have exceeded the max-size already\r\n                    _checkMaxSize();\r\n                    _setupTimer();\r\n                }\r\n            };\r\n            _self.flush = function (isAsync, callBack, sendReason) {\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_paused) {\r\n                    // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                    _clearScheduledTimer();\r\n                    try {\r\n                        return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](isAsync, null, sendReason || 1 /* SendRequestReason.ManualFlush */);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 22 /* _eInternalMessageId.FlushFailed */, \"flush failed, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            };\r\n            _self.onunloadFlush = function () {\r\n                if (!_paused) {\r\n                    if (_beaconSupported || _alwaysUseCustomSend) {\r\n                        try {\r\n                            return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, _doUnloadSend, 2 /* SendRequestReason.Unload */);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"failed to flush with beacon sender on page unload, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                    else {\r\n                        _self.flush(false);\r\n                    }\r\n                }\r\n            };\r\n            _self.addHeader = function (name, value) {\r\n                _headers[name] = value;\r\n            };\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                if (_self.isInitialized()) {\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _base[_DYN_INITIALIZE /* @min:%2einitialize */](config, core, extensions, pluginChain);\r\n                var identifier = _self.identifier;\r\n                _serializer = new Serializer(core.logger);\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = 0;\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _stamp_specific_redirects = 0;\r\n                var diagLog = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"Sender\"), core.evtNamespace && core.evtNamespace());\r\n                _offlineListener = createOfflineListener(_evtNamespace);\r\n                // This function will be re-called whenever any referenced configuration is changed\r\n                _self._addHook(onConfigChange(config, function (details) {\r\n                    var config = details.cfg;\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    var senderConfig = ctx.getExtCfg(identifier, defaultAppInsightsChannelConfig);\r\n                    objDefine(_self, \"_senderConfig\", {\r\n                        g: function () {\r\n                            return senderConfig;\r\n                        }\r\n                    });\r\n                    // Only update the endpoint if the original config !== the current config\r\n                    // This is so any redirect endpointUrl is not overwritten\r\n                    if (_orgEndpointUrl !== senderConfig.endpointUrl) {\r\n                        if (_orgEndpointUrl) {\r\n                            // TODO: add doc to remind users to flush before changing endpoint, otherwise all unsent payload will be sent to new endpoint\r\n                        }\r\n                        _endpointUrl = _orgEndpointUrl = senderConfig.endpointUrl;\r\n                    }\r\n                    if (_customHeaders && _customHeaders !== senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */]) {\r\n                        // Removing any previously defined custom headers as they have changed\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            delete _headers[customHeader.header];\r\n                        });\r\n                    }\r\n                    _maxBatchSizeInBytes = senderConfig[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:%2emaxBatchSizeInBytes */];\r\n                    _beaconSupported = (senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false || senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false) && isBeaconsSupported();\r\n                    _beaconOnUnloadSupported = senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false && isBeaconsSupported();\r\n                    _beaconNormalSupported = senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false && isBeaconsSupported();\r\n                    _alwaysUseCustomSend = senderConfig[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:%2ealwaysUseXhrOverride */];\r\n                    _disableXhr = !!senderConfig[_DYN_DISABLE_XHR /* @min:%2edisableXhr */];\r\n                    _retryCodes = senderConfig.retryCodes;\r\n                    var bufferOverride = senderConfig[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */];\r\n                    var canUseSessionStorage = !!senderConfig[_DYN_ENABLE_SESSION_STORA5 /* @min:%2eenableSessionStorageBuffer */] &&\r\n                        (!!bufferOverride || utlCanUseSessionStorage());\r\n                    var namePrefix = senderConfig.namePrefix;\r\n                    //Note: emitLineDelimitedJson and eventsLimitInMem is directly accessed via config in senderBuffer\r\n                    //Therefore, if canUseSessionStorage is not changed, we do not need to re initialize a new one\r\n                    var shouldUpdate = (canUseSessionStorage !== _sessionStorageUsed)\r\n                        || (canUseSessionStorage && (_namePrefix !== namePrefix)) // prefixName is only used in session storage\r\n                        || (canUseSessionStorage && (_bufferOverrideUsed !== bufferOverride));\r\n                    if (_self[_DYN__BUFFER /* @min:%2e_buffer */]) {\r\n                        // case1 (Pre and Now enableSessionStorageBuffer settings are same)\r\n                        // if namePrefix changes, transfer current buffer to new buffer\r\n                        // else no action needed\r\n                        //case2 (Pre and Now enableSessionStorageBuffer settings are changed)\r\n                        // transfer current buffer to new buffer\r\n                        if (shouldUpdate) {\r\n                            try {\r\n                                _self._buffer = _self._buffer[_DYN_CREATE_NEW /* @min:%2ecreateNew */](diagLog, senderConfig, canUseSessionStorage);\r\n                            }\r\n                            catch (e) {\r\n                                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"failed to transfer telemetry to different buffer storage, telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                            }\r\n                        }\r\n                        _checkMaxSize();\r\n                    }\r\n                    else {\r\n                        _self[_DYN__BUFFER /* @min:%2e_buffer */] = canUseSessionStorage\r\n                            ? new SessionStorageSendBuffer(diagLog, senderConfig) : new ArraySendBuffer(diagLog, senderConfig);\r\n                    }\r\n                    _namePrefix = namePrefix;\r\n                    _sessionStorageUsed = canUseSessionStorage;\r\n                    _bufferOverrideUsed = bufferOverride;\r\n                    _fetchKeepAlive = !senderConfig[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:%2eonunloadDisableFetch */] && isFetchSupported(true);\r\n                    _disableBeaconSplit = !!senderConfig[_DYN_DISABLE_SEND_BEACON_7 /* @min:%2edisableSendBeaconSplit */];\r\n                    _self._sample = new Sample(senderConfig.samplingPercentage, diagLog);\r\n                    _instrumentationKey = senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    if (!_validateInstrumentationKey(_instrumentationKey, config)) {\r\n                        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, \"Invalid Instrumentation key \" + _instrumentationKey);\r\n                    }\r\n                    _customHeaders = senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */];\r\n                    if (!isInternalApplicationInsightsEndpoint(_endpointUrl) && _customHeaders && _customHeaders[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            _this.addHeader(customHeader.header, customHeader.value);\r\n                        });\r\n                    }\r\n                    else {\r\n                        _customHeaders = null;\r\n                    }\r\n                    _enableSendPromise = senderConfig[_DYN_ENABLE_SEND_PROMISE /* @min:%2eenableSendPromise */];\r\n                    var sendPostConfig = _getSendPostMgrConfig();\r\n                    // only init it once\r\n                    if (!_sendPostMgr) {\r\n                        _sendPostMgr = new SenderPostManager();\r\n                        _sendPostMgr[_DYN_INITIALIZE /* @min:%2einitialize */](sendPostConfig, diagLog);\r\n                    }\r\n                    else {\r\n                        _sendPostMgr.SetConfig(sendPostConfig);\r\n                    }\r\n                    var customInterface = senderConfig.httpXHROverride;\r\n                    var httpInterface = null;\r\n                    var syncInterface = null;\r\n                    // User requested transport(s) values > Beacon > Fetch > XHR\r\n                    // Beacon would be filtered out if user has set disableBeaconApi to true at _getSenderInterface\r\n                    var theTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */], senderConfig.transports);\r\n                    httpInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](theTransports, false);\r\n                    var xhrInterface = _sendPostMgr && _sendPostMgr.getFallbackInst();\r\n                    _xhrSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync);\r\n                    };\r\n                    _fallbackSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync, false);\r\n                    };\r\n                    httpInterface = _alwaysUseCustomSend ? customInterface : (httpInterface || customInterface || xhrInterface);\r\n                    _self[_DYN__SENDER /* @min:%2e_sender */] = function (payload, isAsync) {\r\n                        return _doSend(httpInterface, payload, isAsync);\r\n                    };\r\n                    if (_fetchKeepAlive) {\r\n                        // Try and use the fetch with keepalive\r\n                        _syncUnloadSender = _fetchKeepAliveSender;\r\n                    }\r\n                    var syncTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */], senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */]);\r\n                    if (!_fetchKeepAlive) {\r\n                        // remove fetch from theTransports\r\n                        syncTransports = syncTransports.filter(function (transport) { return transport !== 2 /* TransportType.Fetch */; });\r\n                    }\r\n                    syncInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](syncTransports, true);\r\n                    syncInterface = _alwaysUseCustomSend ? customInterface : (syncInterface || customInterface);\r\n                    if ((_alwaysUseCustomSend || senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */] || !_syncUnloadSender) && syncInterface) {\r\n                        _syncUnloadSender = function (payload, isAsync) {\r\n                            return _doSend(syncInterface, payload, isAsync);\r\n                        };\r\n                    }\r\n                    if (!_syncUnloadSender) {\r\n                        _syncUnloadSender = _xhrSend;\r\n                    }\r\n                    _disableTelemetry = senderConfig.disableTelemetry;\r\n                    _convertUndefined = senderConfig[_DYN_CONVERT_UNDEFINED /* @min:%2econvertUndefined */] || UNDEFINED_VALUE;\r\n                    _isRetryDisabled = senderConfig.isRetryDisabled;\r\n                    _maxBatchInterval = senderConfig[_DYN_MAX_BATCH_INTERVAL /* @min:%2emaxBatchInterval */];\r\n                }));\r\n            };\r\n            _self.processTelemetry = function (telemetryItem, itemCtx) {\r\n                var _a;\r\n                itemCtx = _self._getTelCtx(itemCtx);\r\n                var diagLogger = itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var isValidate = _validate(telemetryItem, diagLogger);\r\n                    if (!isValidate) {\r\n                        return;\r\n                    }\r\n                    var aiEnvelope = _getEnvelope(telemetryItem, diagLogger);\r\n                    if (!aiEnvelope) {\r\n                        return;\r\n                    }\r\n                    // check if the incoming payload is too large, truncate if necessary\r\n                    var payload = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](aiEnvelope);\r\n                    // flush if we would exceed the max-size limit by adding this item\r\n                    var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                    _checkMaxSize(payload);\r\n                    var payloadItem = (_a = {},\r\n                        _a[_DYN_ITEM /* @min:item */] = payload,\r\n                        _a.cnt = 0 // inital cnt will always be 0\r\n                    ,\r\n                        _a);\r\n                    // enqueue the payload\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payloadItem);\r\n                    // ensure an invocation timeout is set\r\n                    _setupTimer();\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                // hand off the telemetry item to the next plugin\r\n                _self.processNext(telemetryItem, itemCtx);\r\n            };\r\n            _self.isCompletelyIdle = function () {\r\n                return !_paused && _syncFetchPayload === 0 && _self._buffer[_DYN_COUNT /* @min:%2ecount */]() === 0;\r\n            };\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            _self._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n                // since version 3.2.0, this function is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xhrReadyStateChange(xhr, payload, countOfItemsInPayload);\r\n            };\r\n            /**\r\n             * Immediately send buffered data\r\n             * @param async - {boolean} - Indicates if the events should be sent asynchronously\r\n             * @param forcedSender - {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n             */\r\n            _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */] = function (async, forcedSender, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                if (!_paused) {\r\n                    try {\r\n                        var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                        // Send data only if disableTelemetry is false\r\n                        if (!_disableTelemetry) {\r\n                            if (buffer[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                var payload = buffer.getItems();\r\n                                _notifySendRequest(sendReason || 0 /* SendRequestReason.Undefined */, async);\r\n                                // invoke send\r\n                                if (forcedSender) {\r\n                                    result = forcedSender.call(_self, payload, async);\r\n                                }\r\n                                else {\r\n                                    result = _self[_DYN__SENDER /* @min:%2e_sender */](payload, async);\r\n                                }\r\n                            }\r\n                            // update lastSend time to enable throttling\r\n                            _lastSend = +new Date;\r\n                        }\r\n                        else {\r\n                            buffer[_DYN_CLEAR /* @min:%2eclear */]();\r\n                        }\r\n                        _clearScheduledTimer();\r\n                    }\r\n                    catch (e) {\r\n                        /* Ignore this error for IE under v10 */\r\n                        var ieVer = getIEVersion();\r\n                        if (!ieVer || ieVer > 9) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Telemetry transmission failed, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            _self.getOfflineSupport = function () {\r\n                var _a;\r\n                return _a = {\r\n                        getUrl: function () {\r\n                            return _endpointUrl;\r\n                        },\r\n                        createPayload: _createPayload\r\n                    },\r\n                    _a[_DYN_SERIALIZE /* @min:serialize */] = _serialize,\r\n                    _a.batch = _batch,\r\n                    _a.shouldProcess = function (evt) {\r\n                        return !!_validate(evt);\r\n                    },\r\n                    _a;\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _self.onunloadFlush();\r\n                runTargetUnload(_offlineListener, false);\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * error handler\r\n             */\r\n            _self[_DYN__ON_ERROR /* @min:%2e_onError */] = function (payload, message, event) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onError(payload, message, event);\r\n            };\r\n            /**\r\n             * partial success handler\r\n             */\r\n            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */] = function (payload, results) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onPartialSuccess(payload, results);\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */] = function (payload, countOfItemsInPayload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onSuccess(payload, countOfItemsInPayload);\r\n                //_self._buffer && _self._buffer.clearSent(payload);\r\n            };\r\n            /**\r\n             * xdr state changes\r\n             */\r\n            _self._xdrOnLoad = function (xdr, payload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xdrOnLoad(xdr, payload);\r\n            };\r\n            function _xdrOnLoad(xdr, payload) {\r\n                var responseText = _getResponseText(xdr);\r\n                if (xdr && (responseText + \"\" === \"200\" || responseText === \"\")) {\r\n                    _consecutiveErrors = 0;\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, 0);\r\n                }\r\n                else {\r\n                    var results = parseResponse(responseText);\r\n                    if (results && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] > results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]\r\n                        && !_isRetryDisabled) {\r\n                        _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, results);\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, formatErrorMessageXdr(xdr));\r\n                    }\r\n                }\r\n            }\r\n            function _getSendPostMgrConfig() {\r\n                var _a;\r\n                try {\r\n                    var onCompleteFuncs = {\r\n                        xdrOnComplete: function (xdr, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xdrOnLoad(xdr, data);\r\n                        },\r\n                        fetchOnComplete: function (response, onComplete, resValue, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _checkResponsStatus(response.status, data, response.url, data[_DYN_LENGTH /* @min:%2elength */], response.statusText, resValue || \"\");\r\n                        },\r\n                        xhrOnComplete: function (request, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xhrReadyStateChange(request, data, data[_DYN_LENGTH /* @min:%2elength */]);\r\n                        },\r\n                        beaconOnRetry: function (data, onComplete, canSend) {\r\n                            return _onBeaconRetry(data, onComplete, canSend);\r\n                        }\r\n                    };\r\n                    var config = (_a = {},\r\n                        _a[_DYN_ENABLE_SEND_PROMISE /* @min:enableSendPromise */] = _enableSendPromise,\r\n                        _a.isOneDs = false,\r\n                        _a.disableCredentials = false,\r\n                        _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = _disableXhr,\r\n                        _a.disableBeacon = !_beaconNormalSupported,\r\n                        _a.disableBeaconSync = !_beaconOnUnloadSupported,\r\n                        _a.senderOnCompleteCallBack = onCompleteFuncs,\r\n                        _a);\r\n                    return config;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            function _xhrReadyStateChange(xhr, payload, countOfItemsInPayload) {\r\n                if (xhr.readyState === 4) {\r\n                    _checkResponsStatus(xhr.status, payload, xhr.responseURL, countOfItemsInPayload, formatErrorMessageXhr(xhr), _getResponseText(xhr) || xhr.response);\r\n                }\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(payload, message, event) {\r\n                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            /**\r\n             * partial success handler\r\n             */\r\n            function _onPartialSuccess(payload, results) {\r\n                var failed = [];\r\n                var retry = [];\r\n                // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n                var errors = results.errors.reverse();\r\n                for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n                    var error = errors_1[_i];\r\n                    var extracted = payload.splice(error.index, 1)[0];\r\n                    if (_isRetriable(error.statusCode)) {\r\n                        retry[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                    else {\r\n                        // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                        failed[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                }\r\n                if (payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]);\r\n                }\r\n                if (failed[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_ERROR /* @min:%2e_onError */](failed, formatErrorMessageXhr(null, [\"partial success\", results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */], \"of\", results.itemsReceived].join(\" \")));\r\n                }\r\n                if (retry[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _resendPayload(retry);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Partial success. \" +\r\n                        \"Delivered: \" + payload[_DYN_LENGTH /* @min:%2elength */] + \", Failed: \" + failed[_DYN_LENGTH /* @min:%2elength */] +\r\n                        \". Will retry to send \" + retry[_DYN_LENGTH /* @min:%2elength */] + \" our of \" + results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] + \" items\");\r\n                }\r\n            }\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(payload, countOfItemsInPayload) {\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            function _getPayloadArr(payload) {\r\n                try {\r\n                    if (payload) {\r\n                        var internalPayload = payload;\r\n                        var arr = internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                        if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                            return arr;\r\n                        }\r\n                        return null;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _validate(telemetryItem, diagLogger) {\r\n                if (_disableTelemetry) {\r\n                    // Do not send/save data\r\n                    return false;\r\n                }\r\n                // validate input\r\n                if (!telemetryItem) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 7 /* _eInternalMessageId.CannotSendEmptyTelemetry */, \"Cannot send empty telemetry\");\r\n                    return false;\r\n                }\r\n                // validate event\r\n                if (telemetryItem.baseData && !telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 70 /* _eInternalMessageId.InvalidEvent */, \"Cannot send telemetry without baseData and baseType\");\r\n                    return false;\r\n                }\r\n                if (!telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    // Default\r\n                    telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */] = \"EventData\";\r\n                }\r\n                // ensure a sender was constructed\r\n                if (!_self[_DYN__SENDER /* @min:%2e_sender */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender was not initialized\");\r\n                    return false;\r\n                }\r\n                // check if this item should be sampled in, else add sampleRate tag\r\n                if (!_isSampledIn(telemetryItem)) {\r\n                    // Item is sampled out, do not send it\r\n                    diagLogger && _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 33 /* _eInternalMessageId.TelemetrySampledAndNotSent */, \"Telemetry item was sampled out and not sent\", { SampleRate: _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] });\r\n                    return false;\r\n                }\r\n                else {\r\n                    telemetryItem[SampleRate] = _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */];\r\n                }\r\n                return true;\r\n            }\r\n            function _getEnvelope(telemetryItem, diagLogger) {\r\n                // construct an envelope that Application Insights endpoint can understand\r\n                // if ikey of telemetry is provided and not empty, envelope will use this iKey instead of senderConfig iKey\r\n                var defaultEnvelopeIkey = telemetryItem.iKey || _instrumentationKey;\r\n                var aiEnvelope = Sender.constructEnvelope(telemetryItem, defaultEnvelopeIkey, diagLogger, _convertUndefined);\r\n                if (!aiEnvelope) {\r\n                    _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 47 /* _eInternalMessageId.CreateEnvelopeError */, \"Unable to create an AppInsights envelope\");\r\n                    return;\r\n                }\r\n                var doNotSendItem = false;\r\n                // this is for running in legacy mode, where customer may already have a custom initializer present\r\n                if (telemetryItem[_DYN_TAGS /* @min:%2etags */] && telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy]) {\r\n                    arrForEach(telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy], function (callBack) {\r\n                        try {\r\n                            if (callBack && callBack(aiEnvelope) === false) {\r\n                                doNotSendItem = true;\r\n                                _warnToConsole(diagLogger, \"Telemetry processor check returns false\");\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // log error but dont stop executing rest of the telemetry initializers\r\n                            // doNotSendItem = true;\r\n                            _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"One of telemetry initializers failed, telemetry item will not be sent: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n                        }\r\n                    });\r\n                    delete telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy];\r\n                }\r\n                if (doNotSendItem) {\r\n                    return; // do not send, no need to execute next plugin\r\n                }\r\n                return aiEnvelope;\r\n            }\r\n            function _serialize(item) {\r\n                var rlt = EMPTY_STR;\r\n                var diagLogger = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var valid = _validate(item, diagLogger);\r\n                    var envelope = null;\r\n                    if (valid) {\r\n                        envelope = _getEnvelope(item, diagLogger);\r\n                    }\r\n                    if (envelope) {\r\n                        rlt = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](envelope);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return rlt;\r\n            }\r\n            function _batch(arr) {\r\n                var rlt = EMPTY_STR;\r\n                if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    rlt = \"[\" + arr.join(\",\") + \"]\";\r\n                }\r\n                return rlt;\r\n            }\r\n            function _createPayload(data) {\r\n                var _a;\r\n                var headers = _getHeaders();\r\n                return _a = {\r\n                        urlString: _endpointUrl\r\n                    },\r\n                    _a[_DYN_DATA /* @min:data */] = data,\r\n                    _a.headers = headers,\r\n                    _a;\r\n            }\r\n            function _isSampledIn(envelope) {\r\n                return _self._sample.isSampledIn(envelope);\r\n            }\r\n            function _getOnComplete(payload, status, headers, response) {\r\n                // ***********************************************************************************************\r\n                //TODO: handle other status codes\r\n                if (status === 200 && payload) {\r\n                    _self._onSuccess(payload, payload[_DYN_LENGTH /* @min:%2elength */]);\r\n                }\r\n                else {\r\n                    response && _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, response);\r\n                }\r\n            }\r\n            function _doSend(sendInterface, payload, isAsync, markAsSent) {\r\n                if (markAsSent === void 0) { markAsSent = true; }\r\n                var onComplete = function (status, headers, response) {\r\n                    return _getOnComplete(payload, status, headers, response);\r\n                };\r\n                var payloadData = _getPayload(payload);\r\n                var sendPostFunc = sendInterface && sendInterface.sendPOST;\r\n                if (sendPostFunc && payloadData) {\r\n                    // ***********************************************************************************************\r\n                    // mark payload as sent at the beginning of calling each send function\r\n                    if (markAsSent) {\r\n                        _self._buffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](payload);\r\n                    }\r\n                    return sendPostFunc(payloadData, onComplete, !isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            function _getPayload(payload) {\r\n                var _a;\r\n                if (isArray(payload) && payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var batch = _self[_DYN__BUFFER /* @min:%2e_buffer */].batchPayloads(payload);\r\n                    var headers = _getHeaders();\r\n                    var payloadData = (_a = {},\r\n                        _a[_DYN_DATA /* @min:data */] = batch,\r\n                        _a.urlString = _endpointUrl,\r\n                        _a.headers = headers,\r\n                        _a.disableXhrSync = _disableXhr,\r\n                        _a.disableFetchKeepAlive = !_fetchKeepAlive,\r\n                        _a[_DYN_ORI_PAYLOAD /* @min:oriPayload */] = payload,\r\n                        _a);\r\n                    return payloadData;\r\n                }\r\n                return null;\r\n            }\r\n            function _getHeaders() {\r\n                try {\r\n                    var headers = _headers || {};\r\n                    if (isInternalApplicationInsightsEndpoint(_endpointUrl)) {\r\n                        headers[RequestHeaders[6 /* eRequestHeaders.sdkContextHeader */]] = RequestHeaders[7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */];\r\n                    }\r\n                    return headers;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _checkMaxSize(incomingPayload) {\r\n                var incomingSize = incomingPayload ? incomingPayload[_DYN_LENGTH /* @min:%2elength */] : 0;\r\n                if ((_self[_DYN__BUFFER /* @min:%2e_buffer */].size() + incomingSize) > _maxBatchSizeInBytes) {\r\n                    if (!_offlineListener || _offlineListener.isOnline()) { // only trigger send when currently online\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 10 /* SendRequestReason.MaxBatchSize */);\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _checkResponsStatus(status, payload, responseUrl, countOfItemsInPayload, errorMessage, res) {\r\n                var response = null;\r\n                if (!_self._appId) {\r\n                    response = parseResponse(res);\r\n                    if (response && response.appId) {\r\n                        _self._appId = response.appId;\r\n                    }\r\n                }\r\n                if ((status < 200 || status >= 300) && status !== 0) {\r\n                    // Update End Point url if permanent redirect or moved permanently\r\n                    // Updates the end point url before retry\r\n                    if (status === 301 || status === 307 || status === 308) {\r\n                        if (!_checkAndUpdateEndPointUrl(responseUrl)) {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!_isRetryDisabled && _isRetriable(status)) {\r\n                        _resendPayload(payload);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" +\r\n                            \"Response code \" + status + \". Will retry to send \" + payload[_DYN_LENGTH /* @min:%2elength */] + \" items.\");\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                    }\r\n                }\r\n                else if (_offlineListener && !_offlineListener.isOnline()) { // offline\r\n                    // Note: Don't check for status == 0, since adblock gives this code\r\n                    if (!_isRetryDisabled) {\r\n                        var offlineBackOffMultiplier = 10; // arbritrary number\r\n                        _resendPayload(payload, offlineBackOffMultiplier);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". Offline - Response Code: \".concat(status, \". Offline status: \").concat(!_offlineListener.isOnline(), \". Will retry to send \").concat(payload.length, \" items.\"));\r\n                    }\r\n                }\r\n                else {\r\n                    // check if the xhr's responseURL or fetch's response.url is same as endpoint url\r\n                    // TODO after 10 redirects force send telemetry with 'redirect=false' as query parameter.\r\n                    _checkAndUpdateEndPointUrl(responseUrl);\r\n                    if (status === 206) {\r\n                        if (!response) {\r\n                            response = parseResponse(res);\r\n                        }\r\n                        if (response && !_isRetryDisabled) {\r\n                            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, response);\r\n                        }\r\n                        else {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _consecutiveErrors = 0;\r\n                        _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, countOfItemsInPayload);\r\n                    }\r\n                }\r\n            }\r\n            function _checkAndUpdateEndPointUrl(responseUrl) {\r\n                // Maximum stamp specific redirects allowed(uncomment this when breeze is ready with not allowing redirects feature)\r\n                if (_stamp_specific_redirects >= 10) {\r\n                    //  _self._senderConfig.endpointUrl = () => Sender._getDefaultAppInsightsChannelConfig().endpointUrl()+\"/?redirect=false\";\r\n                    //  _stamp_specific_redirects = 0;\r\n                    return false;\r\n                }\r\n                if (!isNullOrUndefined(responseUrl) && responseUrl !== \"\") {\r\n                    if (responseUrl !== _endpointUrl) {\r\n                        _endpointUrl = responseUrl;\r\n                        ++_stamp_specific_redirects;\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            function _doUnloadSend(payload, isAsync) {\r\n                if (_syncUnloadSender) {\r\n                    // We are unloading so always call the sender with sync set to false\r\n                    _syncUnloadSender(payload, false);\r\n                }\r\n                else {\r\n                    // Fallback to the previous beacon Sender (which causes a CORB warning on chrome now)\r\n                    var beaconInst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([3 /* TransportType.Beacon */], true);\r\n                    return _doSend(beaconInst, payload, isAsync);\r\n                }\r\n            }\r\n            function _onBeaconRetry(payload, onComplete, canSend) {\r\n                var internalPayload = payload;\r\n                var data = internalPayload && internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                if (!_disableBeaconSplit) {\r\n                    // Failed to send entire payload so try and split data and try to send as much events as possible\r\n                    var droppedPayload = [];\r\n                    for (var lp = 0; lp < data[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        var thePayload = data[lp];\r\n                        var arr = [thePayload];\r\n                        var item = _getPayload(arr);\r\n                        if (!canSend(item, onComplete)) {\r\n                            // Can't send anymore, so split the batch and drop the rest\r\n                            droppedPayload[_DYN_PUSH /* @min:%2epush */](thePayload);\r\n                        }\r\n                        else {\r\n                            _self._onSuccess(arr, arr[_DYN_LENGTH /* @min:%2elength */]);\r\n                        }\r\n                    }\r\n                    if (droppedPayload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _fallbackSend && _fallbackSend(droppedPayload, true);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                    }\r\n                }\r\n                else {\r\n                    _fallbackSend && _fallbackSend(data, true);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                }\r\n            }\r\n            function _isStringArr(arr) {\r\n                try {\r\n                    if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        return (isString(arr[0]));\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    //TODO: log, sender use IInternalStorageItem instead of string since 3.1.3\r\n                }\r\n                return null;\r\n            }\r\n            function _fetchKeepAliveSender(payload, isAsync) {\r\n                var transport = null;\r\n                if (isArray(payload)) {\r\n                    var payloadSize = payload[_DYN_LENGTH /* @min:%2elength */];\r\n                    for (var lp = 0; lp < payload[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        payloadSize += payload[lp].item[_DYN_LENGTH /* @min:%2elength */];\r\n                    }\r\n                    var syncFetchPayload = _sendPostMgr.getSyncFetchPayload();\r\n                    if ((syncFetchPayload + payloadSize) <= FetchSyncRequestSizeLimitBytes) {\r\n                        transport = 2 /* TransportType.Fetch */;\r\n                    }\r\n                    else if (isBeaconsSupported()) {\r\n                        // Fallback to beacon sender as we at least get told which events can't be scheduled\r\n                        transport = 3 /* TransportType.Beacon */;\r\n                    }\r\n                    else {\r\n                        // Payload is going to be too big so just try and send via XHR\r\n                        transport = 1 /* TransportType.Xhr */;\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n                    }\r\n                    var inst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([transport], true);\r\n                    return _doSend(inst, payload, isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n             * @param payload\r\n             */\r\n            function _resendPayload(payload, linearFactor) {\r\n                if (linearFactor === void 0) { linearFactor = 1; }\r\n                if (!payload || payload[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    return;\r\n                }\r\n                var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n                _consecutiveErrors++;\r\n                for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n                    var item = payload_1[_i];\r\n                    item.cnt = item.cnt || 0; // to make sure we have cnt for each payload\r\n                    item.cnt++; // when resend, increase cnt\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](item);\r\n                }\r\n                // setup timer\r\n                _setRetryTime(linearFactor);\r\n                _setupTimer();\r\n            }\r\n            /**\r\n             * Calculates the time to wait before retrying in case of an error based on\r\n             * http://en.wikipedia.org/wiki/Exponential_backoff\r\n             */\r\n            function _setRetryTime(linearFactor) {\r\n                var SlotDelayInSeconds = 10;\r\n                var delayInSeconds;\r\n                if (_consecutiveErrors <= 1) {\r\n                    delayInSeconds = SlotDelayInSeconds;\r\n                }\r\n                else {\r\n                    var backOffSlot = (Math.pow(2, _consecutiveErrors) - 1) / 2;\r\n                    // tslint:disable-next-line:insecure-random\r\n                    var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n                    backOffDelay = linearFactor * backOffDelay;\r\n                    delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n                }\r\n                // TODO: Log the backoff time like the C# version does.\r\n                var retryAfterTimeSpan = dateNow() + (delayInSeconds * 1000);\r\n                // TODO: Log the retry at time like the C# version does.\r\n                _retryAt = retryAfterTimeSpan;\r\n            }\r\n            /**\r\n             * Sets up the timer which triggers actually sending the data.\r\n             */\r\n            function _setupTimer() {\r\n                if (!_timeoutHandle && !_paused) {\r\n                    var retryInterval = _retryAt ? Math.max(0, _retryAt - dateNow()) : 0;\r\n                    var timerValue = Math.max(_maxBatchInterval, retryInterval);\r\n                    _timeoutHandle = scheduleTimeout(function () {\r\n                        _timeoutHandle = null;\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 1 /* SendRequestReason.NormalSchedule */);\r\n                    }, timerValue);\r\n                }\r\n            }\r\n            function _clearScheduledTimer() {\r\n                _timeoutHandle && _timeoutHandle.cancel();\r\n                _timeoutHandle = null;\r\n                _retryAt = null;\r\n            }\r\n            /**\r\n             * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n             * @param statusCode\r\n             */\r\n            function _isRetriable(statusCode) {\r\n                // retryCodes = [] means should not retry\r\n                if (!isNullOrUndefined(_retryCodes)) {\r\n                    return _retryCodes[_DYN_LENGTH /* @min:%2elength */] && _retryCodes.indexOf(statusCode) > -1;\r\n                }\r\n                return statusCode === 401 // Unauthorized\r\n                    // Removing as private links can return a 403 which causes excessive retries and session storage usage\r\n                    // || statusCode === 403 // Forbidden\r\n                    || statusCode === 408 // Timeout\r\n                    || statusCode === 429 // Too many requests.\r\n                    || statusCode === 500 // Internal server error.\r\n                    || statusCode === 502 // Bad Gateway.\r\n                    || statusCode === 503 // Service unavailable.\r\n                    || statusCode === 504; // Gateway timeout.\r\n            }\r\n            // Using function lookups for backward compatibility as the getNotifyMgr() did not exist until after v2.5.6\r\n            function _getNotifyMgr() {\r\n                var func = \"getNotifyMgr\";\r\n                if (_self.core[func]) {\r\n                    return _self.core[func]();\r\n                }\r\n                // using _self.core['_notificationManager'] for backward compatibility\r\n                return _self.core[\"_notificationManager\"];\r\n            }\r\n            function _notifySendRequest(sendRequest, isAsync) {\r\n                var manager = _getNotifyMgr();\r\n                if (manager && manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */]) {\r\n                    try {\r\n                        manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendRequest, isAsync);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, \"send request notification failed: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            }\r\n            /**\r\n             * Validate UUID Format\r\n             * Specs taken from https://tools.ietf.org/html/rfc4122 and breeze repo\r\n             */\r\n            function _validateInstrumentationKey(instrumentationKey, config) {\r\n                var disableValidation = config.disableInstrumentationKeyValidation;\r\n                var disableIKeyValidationFlag = isNullOrUndefined(disableValidation) ? false : disableValidation;\r\n                if (disableIKeyValidationFlag) {\r\n                    return true;\r\n                }\r\n                var UUID_Regex = \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\";\r\n                var regexp = new RegExp(UUID_Regex);\r\n                return regexp.test(instrumentationKey);\r\n            }\r\n            function _initDefaults() {\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _self[_DYN__BUFFER /* @min:%2e_buffer */] = null;\r\n                _self._appId = null;\r\n                _self._sample = null;\r\n                _headers = {};\r\n                _offlineListener = null;\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = null;\r\n                _paused = false;\r\n                _timeoutHandle = null;\r\n                _serializer = null;\r\n                _stamp_specific_redirects = 0;\r\n                _syncFetchPayload = 0;\r\n                _syncUnloadSender = null;\r\n                _evtNamespace = null;\r\n                _endpointUrl = null;\r\n                _orgEndpointUrl = null;\r\n                _maxBatchSizeInBytes = 0;\r\n                _beaconSupported = false;\r\n                _customHeaders = null;\r\n                _disableTelemetry = false;\r\n                _instrumentationKey = null;\r\n                _convertUndefined = UNDEFINED_VALUE;\r\n                _isRetryDisabled = false;\r\n                _sessionStorageUsed = null;\r\n                _namePrefix = UNDEFINED_VALUE;\r\n                _disableXhr = false;\r\n                _fetchKeepAlive = false;\r\n                _disableBeaconSplit = false;\r\n                _xhrSend = null;\r\n                _fallbackSend = null;\r\n                _sendPostMgr = null;\r\n                objDefine(_self, \"_senderConfig\", {\r\n                    g: function () {\r\n                        return objExtend({}, defaultAppInsightsChannelConfig);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Sender.constructEnvelope = function (orig, iKey, logger, convertUndefined) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !isNullOrUndefined(iKey)) {\r\n            envelope = __assign(__assign({}, orig), { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        var creator = EnvelopeTypeCreator[envelope.baseType] || EventEnvelopeCreator;\r\n        return creator(logger, envelope, convertUndefined);\r\n    };\r\n// Removed Stub for Sender.prototype.pause.\r\n// Removed Stub for Sender.prototype.resume.\r\n// Removed Stub for Sender.prototype.flush.\r\n// Removed Stub for Sender.prototype.onunloadFlush.\r\n// Removed Stub for Sender.prototype.initialize.\r\n// Removed Stub for Sender.prototype.processTelemetry.\r\n// Removed Stub for Sender.prototype._xhrReadyStateChange.\r\n// Removed Stub for Sender.prototype.triggerSend.\r\n// Removed Stub for Sender.prototype._onError.\r\n// Removed Stub for Sender.prototype._onPartialSuccess.\r\n// Removed Stub for Sender.prototype._onSuccess.\r\n// Removed Stub for Sender.prototype._xdrOnLoad.\r\n// Removed Stub for Sender.prototype.addHeader.\r\n// Removed Stub for Sender.prototype.isCompletelyIdle.\r\n// Removed Stub for Sender.prototype.getOfflineSupport.\r\n    return Sender;\r\n}(BaseTelemetryPlugin));\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _throwInternal, getJSON, isArray, isFunction, isObject, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PUSH, _DYN_SERIALIZE, _DYN_STRINGIFY, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            /**\r\n             * Serializes the current object to a JSON string.\r\n             */\r\n            _self[_DYN_SERIALIZE /* @min:%2eserialize */] = function (input) {\r\n                var output = _serializeObject(input, \"root\");\r\n                try {\r\n                    return getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](output);\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                }\r\n            };\r\n            function _serializeObject(source, name) {\r\n                var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n                var output = {};\r\n                if (!source) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (source[circularReferenceCheck]) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 50 /* _eInternalMessageId.CircularReferenceDetected */, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (!source.aiDataContract) {\r\n                    // special case for measurements/properties/tags\r\n                    if (name === \"measurements\") {\r\n                        output = _serializeStringMap(source, \"number\", name);\r\n                    }\r\n                    else if (name === \"properties\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (name === \"tags\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (isArray(source)) {\r\n                        output = _serializeArray(source, name);\r\n                    }\r\n                    else {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                        try {\r\n                            // verify that the object can be stringified\r\n                            getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](source);\r\n                            output = source;\r\n                        }\r\n                        catch (e) {\r\n                            // if serialization fails return an empty string\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                        }\r\n                    }\r\n                    return output;\r\n                }\r\n                source[circularReferenceCheck] = true;\r\n                objForEachKey(source.aiDataContract, function (field, contract) {\r\n                    var isRequired = (isFunction(contract)) ? (contract() & 1 /* FieldType.Required */) : (contract & 1 /* FieldType.Required */);\r\n                    var isHidden = (isFunction(contract)) ? (contract() & 4 /* FieldType.Hidden */) : (contract & 4 /* FieldType.Hidden */);\r\n                    var isArray = contract & 2 /* FieldType.Array */;\r\n                    var isPresent = source[field] !== undefined;\r\n                    var isObj = isObject(source[field]) && source[field] !== null;\r\n                    if (isRequired && !isPresent && !isArray) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 24 /* _eInternalMessageId.MissingRequiredFieldSpecification */, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                        // If not in debug mode, continue and hope the error is permissible\r\n                    }\r\n                    else if (!isHidden) { // Don't serialize hidden fields\r\n                        var value = void 0;\r\n                        if (isObj) {\r\n                            if (isArray) {\r\n                                // special case; recurse on each object in the source array\r\n                                value = _serializeArray(source[field], field);\r\n                            }\r\n                            else {\r\n                                // recurse on the source object in this field\r\n                                value = _serializeObject(source[field], field);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // assign the source field to the output even if undefined or required\r\n                            value = source[field];\r\n                        }\r\n                        // only emit this field if the value is defined\r\n                        if (value !== undefined) {\r\n                            output[field] = value;\r\n                        }\r\n                    }\r\n                });\r\n                delete source[circularReferenceCheck];\r\n                return output;\r\n            }\r\n            function _serializeArray(sources, name) {\r\n                var output;\r\n                if (!!sources) {\r\n                    if (!isArray(sources)) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 54 /* _eInternalMessageId.ItemNotInArray */, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                    }\r\n                    else {\r\n                        output = [];\r\n                        for (var i = 0; i < sources[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                            var source = sources[i];\r\n                            var item = _serializeObject(source, name + \"[\" + i + \"]\");\r\n                            output[_DYN_PUSH /* @min:%2epush */](item);\r\n                        }\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            function _serializeStringMap(map, expectedType, name) {\r\n                var output;\r\n                if (map) {\r\n                    output = {};\r\n                    objForEachKey(map, function (field, value) {\r\n                        if (expectedType === \"string\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else if (!value[_DYN_TO_STRING /* @min:%2etoString */]) {\r\n                                output[field] = \"invalid field: toString() is not defined.\";\r\n                            }\r\n                            else {\r\n                                output[field] = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            }\r\n                        }\r\n                        else if (expectedType === \"number\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else {\r\n                                var num = parseFloat(value);\r\n                                output[field] = num;\r\n                            }\r\n                        }\r\n                        else {\r\n                            output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, output[field], null, true);\r\n                        }\r\n                    });\r\n                }\r\n                return output;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.serialize.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    Serializer.__ieDyn=1;\n\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _DYN_CONCAT, _DYN_LENGTH } from \"../../__DynamicConstants\";\r\n// (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\nvar MIN_INPUT_LENGTH = 8;\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input === \"\") {\r\n            return 0;\r\n        }\r\n        while (input[_DYN_LENGTH /* @min:%2elength */] < MIN_INPUT_LENGTH) {\r\n            input = input[_DYN_CONCAT /* @min:%2econcat */](input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ContextTagKeys } from \"@microsoft/applicationinsights-common\";\r\nimport { _DYN_GET_HASH_CODE_SCORE, _DYN_GET_SAMPLING_SCORE, _DYN_TAGS, _DYN_TRACE_ID } from \"../../__DynamicConstants\";\r\nimport { HashCodeScoreGenerator } from \"./HashCodeScoreGenerator\";\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        var _self = this;\r\n        var hashCodeGenerator = new HashCodeScoreGenerator();\r\n        var keys = new ContextTagKeys();\r\n        _self[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */] = function (item) {\r\n            var score = 0;\r\n            if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.userId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.userId]);\r\n            }\r\n            else if (item.ext && item.ext.user && item.ext.user.id) {\r\n                score = hashCodeGenerator[_DYN_GET_HASH_CODE_SCORE /* @min:%2egetHashCodeScore */](item.ext.user.id);\r\n            }\r\n            else if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.operationId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.operationId]);\r\n            }\r\n            else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n                score = hashCodeGenerator.getHashCodeScore(item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n            }\r\n            else {\r\n                // tslint:disable-next-line:insecure-random\r\n                score = (Math.random() * 100);\r\n            }\r\n            return score;\r\n        };\r\n    }\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { Metric } from \"@microsoft/applicationinsights-common\";\r\nimport { safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_DATA_TYPE, _DYN_GET_SAMPLING_SCORE, _DYN_SAMPLE_RATE } from \"../__DynamicConstants\";\r\nimport { SamplingScoreGenerator } from \"./SamplingScoreGenerators/SamplingScoreGenerator\";\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        var _logger = logger || safeGetLogger(null);\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            _logger.throwInternal(2 /* eLoggingSeverity.WARNING */, 58 /* _eInternalMessageId.SampleRateOutOfRange */, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            sampleRate = 100;\r\n        }\r\n        this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */]; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */](envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_DURATION = \"duration\";\r\nexport var STR_PROPERTIES = \"properties\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_REQUEST_URL = \"requestUrl\"; // Count: 11\r\nexport var _DYN_INST = \"inst\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 10\r\nexport var _DYN_TRACE_ID = \"traceID\"; // Count: 9\r\nexport var _DYN_SPAN_ID = \"spanID\"; // Count: 8\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 13\r\nexport var _DYN_CONTEXT = \"context\"; // Count: 7\r\nexport var _DYN_ABORTED = \"aborted\"; // Count: 7\r\nexport var _DYN_TRACE_ID0 = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID1 = \"spanId\"; // Count: 5\r\nexport var _DYN__ADD_HOOK = \"_addHook\"; // Count: 4\r\nexport var _DYN_CORE = \"core\"; // Count: 8\r\nexport var _DYN_INCLUDE_CORRELATION_2 = \"includeCorrelationHeaders\"; // Count: 4\r\nexport var _DYN_GET_ABSOLUTE_URL = \"getAbsoluteUrl\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 6\r\nexport var _DYN_REQUEST_HEADERS = \"requestHeaders\"; // Count: 13\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 3\r\nexport var _DYN_TRACK_DEPENDENCY_DAT3 = \"trackDependencyDataInternal\"; // Count: 2\r\nexport var _DYN_START_TIME = \"startTime\"; // Count: 6\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_ENABLE_REQUEST_HEADE4 = \"enableRequestHeaderTracking\"; // Count: 3\r\nexport var _DYN_ENABLE_AJAX_ERROR_ST5 = \"enableAjaxErrorStatusText\"; // Count: 2\r\nexport var _DYN_ENABLE_AJAX_PERF_TRA6 = \"enableAjaxPerfTracking\"; // Count: 2\r\nexport var _DYN_MAX_AJAX_CALLS_PER_V7 = \"maxAjaxCallsPerView\"; // Count: 2\r\nexport var _DYN_EXCLUDE_REQUEST_FROM8 = \"excludeRequestFromAutoTrackingPatterns\"; // Count: 2\r\nexport var _DYN_ADD_REQUEST_CONTEXT = \"addRequestContext\"; // Count: 2\r\nexport var _DYN_DISABLE_AJAX_TRACKIN9 = \"disableAjaxTracking\"; // Count: 3\r\nexport var _DYN_AJAX_PERF_LOOKUP_DEL10 = \"ajaxPerfLookupDelay\"; // Count: 2\r\nexport var _DYN_DISABLE_FETCH_TRACKI11 = \"disableFetchTracking\"; // Count: 2\r\nexport var _DYN_ENABLE_RESPONSE_HEAD12 = \"enableResponseHeaderTracking\"; // Count: 2\r\nexport var _DYN_STATUS = \"status\"; // Count: 11\r\nexport var _DYN_STATUS_TEXT = \"statusText\"; // Count: 9\r\nexport var _DYN_HEADER_MAP = \"headerMap\"; // Count: 8\r\nexport var _DYN_OPEN_DONE = \"openDone\"; // Count: 3\r\nexport var _DYN_SEND_DONE = \"sendDone\"; // Count: 3\r\nexport var _DYN_REQUEST_SENT_TIME = \"requestSentTime\"; // Count: 9\r\nexport var _DYN_ABORT_DONE = \"abortDone\"; // Count: 3\r\nexport var _DYN_GET_TRACE_ID = \"getTraceId\"; // Count: 3\r\nexport var _DYN_GET_TRACE_FLAGS = \"getTraceFlags\"; // Count: 3\r\nexport var _DYN_METHOD = \"method\"; // Count: 8\r\nexport var _DYN_ERROR_STATUS_TEXT = \"errorStatusText\"; // Count: 3\r\nexport var _DYN_STATE_CHANGE_ATTACHE13 = \"stateChangeAttached\"; // Count: 2\r\nexport var _DYN_RESPONSE_TEXT = \"responseText\"; // Count: 6\r\nexport var _DYN_RESPONSE_FINISHED_TI14 = \"responseFinishedTime\"; // Count: 7\r\nexport var _DYN__CREATE_TRACK_ITEM = \"CreateTrackItem\"; // Count: 3\r\nexport var _DYN_RESPONSE = \"response\"; // Count: 4\r\nexport var _DYN_GET_ALL_RESPONSE_HEA15 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_GET_PART_APROPS = \"getPartAProps\"; // Count: 3\r\nexport var _DYN_PERF_MARK = \"perfMark\"; // Count: 4\r\nexport var _DYN_NAME = \"name\"; // Count: 6\r\nexport var _DYN_PERF_TIMING = \"perfTiming\"; // Count: 3\r\nexport var _DYN_EXCEPTION = \"exception\"; // Count: 5\r\nexport var _DYN_AJAX_DIAGNOSTICS_MES16 = \"ajaxDiagnosticsMessage\"; // Count: 3\r\nexport var _DYN_CORRELATION_CONTEXT = \"correlationContext\"; // Count: 3\r\nexport var _DYN_AJAX_TOTAL_DURATION = \"ajaxTotalDuration\"; // Count: 3\r\nexport var _DYN_EVENT_TRACE_CTX = \"eventTraceCtx\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { Extensions, dataSanitizeUrl, dateTimeUtilsDuration, msToTimeSpan, urlGetAbsoluteUrl, urlGetCompleteUrl } from \"@microsoft/applicationinsights-common\";\r\nimport { arrForEach, isNullOrUndefined, isNumber, isString, normalizeJsName, objForEachKey, objKeys } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_DURATION, STR_PROPERTIES } from \"./InternalConstants\";\r\nimport { _DYN_ABORTED, _DYN_ABORT_DONE, _DYN_AJAX_TOTAL_DURATION, _DYN_CORRELATION_CONTEXT, _DYN_ERROR_STATUS_TEXT, _DYN_EVENT_TRACE_CTX, _DYN_GET_ABSOLUTE_URL, _DYN_GET_PART_APROPS, _DYN_GET_TRACE_FLAGS, _DYN_GET_TRACE_ID, _DYN_HEADER_MAP, _DYN_LENGTH, _DYN_METHOD, _DYN_NAME, _DYN_OPEN_DONE, _DYN_PERF_MARK, _DYN_PERF_TIMING, _DYN_REQUEST_HEADERS, _DYN_REQUEST_SENT_TIME, _DYN_REQUEST_URL, _DYN_RESPONSE, _DYN_RESPONSE_FINISHED_TI14, _DYN_SEND_DONE, _DYN_SPAN_ID, _DYN_SPAN_ID1, _DYN_START_TIME, _DYN_STATE_CHANGE_ATTACHE13, _DYN_STATUS, _DYN_STATUS_TEXT, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_TRACE_ID0, _DYN__CREATE_TRACK_ITEM } from \"./__DynamicConstants\";\r\n/** @ignore */\r\nfunction _calcPerfDuration(resourceEntry, start, end) {\r\n    var result = 0;\r\n    var from = resourceEntry[start];\r\n    var to = resourceEntry[end];\r\n    if (from && to) {\r\n        result = dateTimeUtilsDuration(from, to);\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _setPerfDuration(props, name, resourceEntry, start, end) {\r\n    var result = 0;\r\n    var value = _calcPerfDuration(resourceEntry, start, end);\r\n    if (value) {\r\n        result = _setPerfValue(props, name, msToTimeSpan(value));\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _setPerfValue(props, name, value) {\r\n    var strPerf = \"ajaxPerf\";\r\n    var result = 0;\r\n    if (props && name && value) {\r\n        var perfData = props[strPerf] = (props[strPerf] || {});\r\n        perfData[name] = value;\r\n        result = 1;\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _populatePerfData(ajaxData, dependency) {\r\n    /*\r\n    * https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API\r\n    *  | -startTime\r\n    *  | -redirectStart\r\n    *  |            | -redirectEnd\r\n    *  |            | | -fetchStart\r\n    *  |            | |   | -domainLookupStart\r\n    *  |            | |   |                |- domainLookupEnd\r\n    *  |            | |   |                | | -connectStart\r\n    *  |            | |   |                | |  | -secureConnectionStart\r\n    *  |            | |   |                | |  |        | -connectEnd\r\n    *  |            | |   |                | |  |        | | -requestStart\r\n    *  |            | |   |                | |  |        | |           | | -responseStart\r\n    *  |            | |   |                | |  |        | |           | |            | | -responseEnd\r\n    *  +------------+-+---+----------------+-+--+--------+-+-----------+-+------------+-+\r\n    *  |--redirect--| |---|--domainLookup--| |--connect--| |--request--| |--response--| |\r\n    *  |-------------------networkConnect----------------|\r\n    *  |                                                   |---------sentRequest--------|\r\n    *  |------------------------------------perfTotal-----------------------------------|\r\n    */\r\n    var resourceEntry = ajaxData[_DYN_PERF_TIMING /* @min:%2eperfTiming */];\r\n    var props = dependency[STR_PROPERTIES /* @min:%2eproperties */] || {};\r\n    var propsSet = 0;\r\n    var strName = \"name\";\r\n    var strStart = \"Start\";\r\n    var strEnd = \"End\";\r\n    var strDomainLookup = \"domainLookup\";\r\n    var strConnect = \"connect\";\r\n    var strRedirect = \"redirect\";\r\n    var strRequest = \"request\";\r\n    var strResponse = \"response\";\r\n    var strStartTime = \"startTime\";\r\n    var strDomainLookupStart = strDomainLookup + strStart;\r\n    var strDomainLookupEnd = strDomainLookup + strEnd;\r\n    var strConnectStart = strConnect + strStart;\r\n    var strConnectEnd = strConnect + strEnd;\r\n    var strRequestStart = strRequest + strStart;\r\n    var strRequestEnd = strRequest + strEnd;\r\n    var strResponseStart = strResponse + strStart;\r\n    var strResponseEnd = strResponse + strEnd;\r\n    var strRedirectStart = strRedirect + strStart;\r\n    var strRedirectEnd = strRedirect = strEnd;\r\n    var strTransferSize = \"transferSize\";\r\n    var strEncodedBodySize = \"encodedBodySize\";\r\n    var strDecodedBodySize = \"decodedBodySize\";\r\n    var strServerTiming = \"serverTiming\";\r\n    if (resourceEntry) {\r\n        // redirect\r\n        propsSet |= _setPerfDuration(props, strRedirect, resourceEntry, strRedirectStart, strRedirectEnd);\r\n        // domainLookup\r\n        propsSet |= _setPerfDuration(props, strDomainLookup, resourceEntry, strDomainLookupStart, strDomainLookupEnd);\r\n        // connect\r\n        propsSet |= _setPerfDuration(props, strConnect, resourceEntry, strConnectStart, strConnectEnd);\r\n        // request\r\n        propsSet |= _setPerfDuration(props, strRequest, resourceEntry, strRequestStart, strRequestEnd);\r\n        // response\r\n        propsSet |= _setPerfDuration(props, strResponse, resourceEntry, strResponseStart, strResponseEnd);\r\n        // Network connection time\r\n        propsSet |= _setPerfDuration(props, \"networkConnect\", resourceEntry, strStartTime, strConnectEnd);\r\n        // Sent Request\r\n        propsSet |= _setPerfDuration(props, \"sentRequest\", resourceEntry, strRequestStart, strResponseEnd);\r\n        // PerfTotal / Duration\r\n        var duration = resourceEntry[STR_DURATION /* @min:%2eduration */];\r\n        if (!duration) {\r\n            duration = _calcPerfDuration(resourceEntry, strStartTime, strResponseEnd) || 0;\r\n        }\r\n        propsSet |= _setPerfValue(props, STR_DURATION, duration);\r\n        propsSet |= _setPerfValue(props, \"perfTotal\", duration);\r\n        var serverTiming = resourceEntry[strServerTiming];\r\n        if (serverTiming) {\r\n            var server_1 = {};\r\n            arrForEach(serverTiming, function (value, idx) {\r\n                var name = normalizeJsName(value[strName] || \"\" + idx);\r\n                var newValue = server_1[name] || {};\r\n                objForEachKey(value, function (key, val) {\r\n                    if (key !== strName && isString(val) || isNumber(val)) {\r\n                        if (newValue[key]) {\r\n                            val = newValue[key] + \";\" + val;\r\n                        }\r\n                        if (val || !isString(val)) {\r\n                            // Only set the value if it has a value and it's not an empty string\r\n                            newValue[key] = val;\r\n                        }\r\n                    }\r\n                });\r\n                server_1[name] = newValue;\r\n            });\r\n            propsSet |= _setPerfValue(props, strServerTiming, server_1);\r\n        }\r\n        propsSet |= _setPerfValue(props, strTransferSize, resourceEntry[strTransferSize]);\r\n        propsSet |= _setPerfValue(props, strEncodedBodySize, resourceEntry[strEncodedBodySize]);\r\n        propsSet |= _setPerfValue(props, strDecodedBodySize, resourceEntry[strDecodedBodySize]);\r\n    }\r\n    else {\r\n        if (ajaxData[_DYN_PERF_MARK /* @min:%2eperfMark */]) {\r\n            propsSet |= _setPerfValue(props, \"missing\", ajaxData.perfAttempts);\r\n        }\r\n    }\r\n    if (propsSet) {\r\n        dependency[STR_PROPERTIES /* @min:%2eproperties */] = props;\r\n    }\r\n}\r\nvar XHRMonitoringState = /** @class */ (function () {\r\n    function XHRMonitoringState() {\r\n        var self = this;\r\n        self[_DYN_OPEN_DONE /* @min:%2eopenDone */] = false;\r\n        self.setRequestHeaderDone = false;\r\n        self[_DYN_SEND_DONE /* @min:%2esendDone */] = false;\r\n        self[_DYN_ABORT_DONE /* @min:%2eabortDone */] = false;\r\n        // <summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\r\n        self[_DYN_STATE_CHANGE_ATTACHE13 /* @min:%2estateChangeAttached */] = false;\r\n    }\r\n    return XHRMonitoringState;\r\n}());\r\nexport { XHRMonitoringState };\r\nvar ajaxRecord = /** @class */ (function () {\r\n    function ajaxRecord(traceId, spanId, logger, traceCtx) {\r\n        var _a;\r\n        var self = this;\r\n        var _logger = logger;\r\n        var strResponseText = \"responseText\";\r\n        // Assigning the initial/default values within the constructor to avoid typescript from creating a bunch of\r\n        // this.XXXX = null\r\n        self[_DYN_PERF_MARK /* @min:%2eperfMark */] = null;\r\n        self.completed = false;\r\n        self.requestHeadersSize = null;\r\n        self[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = null;\r\n        self.responseReceivingDuration = null;\r\n        self.callbackDuration = null;\r\n        self[_DYN_AJAX_TOTAL_DURATION /* @min:%2eajaxTotalDuration */] = null;\r\n        self[_DYN_ABORTED /* @min:%2eaborted */] = 0;\r\n        self.pageUrl = null;\r\n        self[_DYN_REQUEST_URL /* @min:%2erequestUrl */] = null;\r\n        self.requestSize = 0;\r\n        self[_DYN_METHOD /* @min:%2emethod */] = null;\r\n        self[_DYN_STATUS /* @min:%2estatus */] = null;\r\n        self[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */] = null;\r\n        self.responseStartedTime = null;\r\n        self[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */] = null;\r\n        self.callbackFinishedTime = null;\r\n        self.endTime = null;\r\n        self.xhrMonitoringState = new XHRMonitoringState();\r\n        self.clientFailure = 0;\r\n        self[_DYN_TRACE_ID /* @min:%2etraceID */] = traceId;\r\n        self[_DYN_SPAN_ID /* @min:%2espanID */] = spanId;\r\n        self[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = traceCtx === null || traceCtx === void 0 ? void 0 : traceCtx.getTraceFlags();\r\n        if (traceCtx) {\r\n            self[_DYN_EVENT_TRACE_CTX /* @min:%2eeventTraceCtx */] = (_a = {},\r\n                _a[_DYN_TRACE_ID0 /* @min:traceId */] = traceCtx[_DYN_GET_TRACE_ID /* @min:%2egetTraceId */](),\r\n                _a[_DYN_SPAN_ID1 /* @min:spanId */] = traceCtx.getSpanId(),\r\n                _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = traceCtx[_DYN_GET_TRACE_FLAGS /* @min:%2egetTraceFlags */](),\r\n                _a);\r\n        }\r\n        else {\r\n            self[_DYN_EVENT_TRACE_CTX /* @min:%2eeventTraceCtx */] = null;\r\n        }\r\n        dynamicProto(ajaxRecord, self, function (self) {\r\n            self.getAbsoluteUrl = function () {\r\n                return self[_DYN_REQUEST_URL /* @min:%2erequestUrl */] ? urlGetAbsoluteUrl(self[_DYN_REQUEST_URL /* @min:%2erequestUrl */]) : null;\r\n            };\r\n            self.getPathName = function () {\r\n                return self[_DYN_REQUEST_URL /* @min:%2erequestUrl */] ? dataSanitizeUrl(_logger, urlGetCompleteUrl(self[_DYN_METHOD /* @min:%2emethod */], self[_DYN_REQUEST_URL /* @min:%2erequestUrl */])) : null;\r\n            };\r\n            self[_DYN__CREATE_TRACK_ITEM /* @min:%2eCreateTrackItem */] = function (ajaxType, enableRequestHeaderTracking, getResponse) {\r\n                var _a;\r\n                // round to 3 decimal points\r\n                self.ajaxTotalDuration = Math.round(dateTimeUtilsDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\r\n                if (self[_DYN_AJAX_TOTAL_DURATION /* @min:%2eajaxTotalDuration */] < 0) {\r\n                    return null;\r\n                }\r\n                var dependency = (_a = {\r\n                        id: \"|\" + self[_DYN_TRACE_ID /* @min:%2etraceID */] + \".\" + self[_DYN_SPAN_ID /* @min:%2espanID */],\r\n                        target: self[_DYN_GET_ABSOLUTE_URL /* @min:%2egetAbsoluteUrl */]()\r\n                    },\r\n                    _a[_DYN_NAME /* @min:name */] = self.getPathName(),\r\n                    _a.type = ajaxType,\r\n                    _a[_DYN_START_TIME /* @min:startTime */] = null,\r\n                    _a.duration = self[_DYN_AJAX_TOTAL_DURATION /* @min:%2eajaxTotalDuration */],\r\n                    _a.success = (+(self[_DYN_STATUS /* @min:%2estatus */])) >= 200 && (+(self[_DYN_STATUS /* @min:%2estatus */])) < 400,\r\n                    _a.responseCode = (+(self[_DYN_STATUS /* @min:%2estatus */])),\r\n                    _a[STR_PROPERTIES] = { HttpMethod: self[_DYN_METHOD /* @min:%2emethod */] },\r\n                    _a);\r\n                var props = dependency[STR_PROPERTIES];\r\n                if (self[_DYN_ABORTED /* @min:%2eaborted */]) {\r\n                    props[_DYN_ABORTED /* @min:%2eaborted */] = true;\r\n                }\r\n                if (self[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */]) {\r\n                    // Set the correct dependency start time\r\n                    dependency[_DYN_START_TIME /* @min:%2estartTime */] = new Date();\r\n                    dependency[_DYN_START_TIME /* @min:%2estartTime */].setTime(self[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */]);\r\n                }\r\n                // Add Ajax perf details if available\r\n                _populatePerfData(self, dependency);\r\n                if (enableRequestHeaderTracking) {\r\n                    if (objKeys(self.requestHeaders)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        props[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = self[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */];\r\n                    }\r\n                }\r\n                if (getResponse) {\r\n                    var response = getResponse();\r\n                    if (response) {\r\n                        // enrich dependency target with correlation context from the server\r\n                        var correlationContext = response[_DYN_CORRELATION_CONTEXT /* @min:%2ecorrelationContext */];\r\n                        if (correlationContext) {\r\n                            dependency.correlationContext = /* dependency.target + \" | \" + */ correlationContext;\r\n                        }\r\n                        if (response[_DYN_HEADER_MAP /* @min:%2eheaderMap */]) {\r\n                            if (objKeys(response.headerMap)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                                props.responseHeaders = response[_DYN_HEADER_MAP /* @min:%2eheaderMap */];\r\n                            }\r\n                        }\r\n                        if (self[_DYN_ERROR_STATUS_TEXT /* @min:%2eerrorStatusText */]) {\r\n                            if (self[_DYN_STATUS /* @min:%2estatus */] >= 400) {\r\n                                var responseType = response.type;\r\n                                if (responseType === \"\" || responseType === \"text\") {\r\n                                    props.responseText = response.responseText ? response[_DYN_STATUS_TEXT /* @min:%2estatusText */] + \" - \" + response[strResponseText] : response[_DYN_STATUS_TEXT /* @min:%2estatusText */];\r\n                                }\r\n                                if (responseType === \"json\") {\r\n                                    props.responseText = response.response ? response[_DYN_STATUS_TEXT /* @min:%2estatusText */] + \" - \" + JSON.stringify(response[_DYN_RESPONSE /* @min:%2eresponse */]) : response[_DYN_STATUS_TEXT /* @min:%2estatusText */];\r\n                                }\r\n                            }\r\n                            else if (self[_DYN_STATUS /* @min:%2estatus */] === 0) {\r\n                                props.responseText = response[_DYN_STATUS_TEXT /* @min:%2estatusText */] || \"\";\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return dependency;\r\n            };\r\n            self[_DYN_GET_PART_APROPS /* @min:%2egetPartAProps */] = function () {\r\n                var _a;\r\n                var partA = null;\r\n                var traceCtx = self[_DYN_EVENT_TRACE_CTX /* @min:%2eeventTraceCtx */];\r\n                if (traceCtx && (traceCtx[_DYN_TRACE_ID0 /* @min:%2etraceId */] || traceCtx[_DYN_SPAN_ID1 /* @min:%2espanId */])) {\r\n                    partA = {};\r\n                    var traceExt = partA[Extensions.TraceExt] = (_a = {},\r\n                        _a[_DYN_TRACE_ID /* @min:traceID */] = traceCtx[_DYN_TRACE_ID0 /* @min:%2etraceId */],\r\n                        _a.parentID = traceCtx[_DYN_SPAN_ID1 /* @min:%2espanId */],\r\n                        _a);\r\n                    if (!isNullOrUndefined(traceCtx[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */])) {\r\n                        traceExt[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = traceCtx[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n                    }\r\n                }\r\n                return partA;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for ajaxRecord.prototype.getAbsoluteUrl.\r\n// Removed Stub for ajaxRecord.prototype.getPathName.\r\n// Removed Stub for ajaxRecord.prototype.CreateTrackItem.\r\n// Removed Stub for ajaxRecord.prototype.getPartAProps.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ajaxRecord.__ieDyn=1;\n\n    return ajaxRecord;\r\n}());\r\nexport { ajaxRecord };\r\n//# sourceMappingURL=ajaxRecord.js.map","/*\n * Application Insights JavaScript SDK - Dependencies Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar _a;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { DisabledPropertyName, PropertiesPluginIdentifier, RemoteDependencyData, RequestHeaders, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, createDistributedTraceContextFromTrace, createTelemetryItem, createTraceParent, dateTimeUtilsNow, formatTraceParent, isInternalApplicationInsightsEndpoint } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, InstrumentFunc, InstrumentProto, _throwInternal, arrForEach, createProcessTelemetryContext, createUniqueNamespace, dumpObj, eventOn, generateW3CId, getExceptionName, getGlobal, getIEVersion, getLocation, getPerformance, isFunction, isNullOrUndefined, isString, isXhrSupported, mergeEvtNamespace, onConfigChange, strPrototype, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isWebWorker, objFreeze, scheduleTimeout, strIndexOf, strSplit, strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { STR_PROPERTIES } from \"./InternalConstants\";\r\nimport { _DYN_ABORTED, _DYN_ABORT_DONE, _DYN_ADD_REQUEST_CONTEXT, _DYN_AJAX_DIAGNOSTICS_MES16, _DYN_AJAX_PERF_LOOKUP_DEL10, _DYN_CONTEXT, _DYN_CORE, _DYN_CORRELATION_CONTEXT, _DYN_DISABLE_AJAX_TRACKIN9, _DYN_DISABLE_FETCH_TRACKI11, _DYN_ENABLE_AJAX_ERROR_ST5, _DYN_ENABLE_AJAX_PERF_TRA6, _DYN_ENABLE_REQUEST_HEADE4, _DYN_ENABLE_RESPONSE_HEAD12, _DYN_ERROR_STATUS_TEXT, _DYN_EXCEPTION, _DYN_EXCLUDE_REQUEST_FROM8, _DYN_GET_ABSOLUTE_URL, _DYN_GET_ALL_RESPONSE_HEA15, _DYN_GET_PART_APROPS, _DYN_GET_TRACE_FLAGS, _DYN_GET_TRACE_ID, _DYN_HEADERS, _DYN_HEADER_MAP, _DYN_INCLUDE_CORRELATION_2, _DYN_INST, _DYN_LENGTH, _DYN_MAX_AJAX_CALLS_PER_V7, _DYN_METHOD, _DYN_NAME, _DYN_OPEN_DONE, _DYN_PERF_MARK, _DYN_PERF_TIMING, _DYN_REQUEST_HEADERS, _DYN_REQUEST_SENT_TIME, _DYN_REQUEST_URL, _DYN_RESPONSE, _DYN_RESPONSE_FINISHED_TI14, _DYN_RESPONSE_TEXT, _DYN_SEND_DONE, _DYN_SET_REQUEST_HEADER, _DYN_SPAN_ID, _DYN_SPAN_ID1, _DYN_START_TIME, _DYN_STATE_CHANGE_ATTACHE13, _DYN_STATUS, _DYN_STATUS_TEXT, _DYN_TO_LOWER_CASE, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_TRACE_ID0, _DYN_TRACK_DEPENDENCY_DAT3, _DYN__ADD_HOOK, _DYN__CREATE_TRACK_ITEM } from \"./__DynamicConstants\";\r\nimport { ajaxRecord } from \"./ajaxRecord\";\r\nvar AJAX_MONITOR_PREFIX = \"ai.ajxmn.\";\r\nvar strDiagLog = \"diagLog\";\r\nvar AJAX_DATA_CONTAINER = \"_ajaxData\";\r\nvar STR_FETCH = \"fetch\";\r\nvar ERROR_HEADER = \"Failed to monitor XMLHttpRequest\";\r\nvar ERROR_PREFIX = \", monitoring data for this ajax call \";\r\nvar ERROR_POSTFIX = ERROR_PREFIX + \"may be incorrect.\";\r\nvar ERROR_NOT_SENT = ERROR_PREFIX + \"won't be sent.\";\r\nvar CORRELATION_HEADER_ERROR = \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\";\r\nvar CUSTOM_REQUEST_CONTEXT_ERROR = \"Failed to add custom defined request context as configured call back may missing a null check.\";\r\nvar FAILED_TO_CALCULATE_DURATION_ERROR = \"Failed to calculate the duration of the \";\r\n// Using a global value so that to handle same iKey with multiple app insights instances (mostly for testing)\r\nvar _markCount = 0;\r\n/** @Ignore */\r\nfunction _supportsFetch() {\r\n    var _global = getGlobal();\r\n    if (!_global ||\r\n        isNullOrUndefined(_global.Request) ||\r\n        isNullOrUndefined(_global.Request[strPrototype]) ||\r\n        isNullOrUndefined(_global[STR_FETCH])) {\r\n        return null;\r\n    }\r\n    return _global[STR_FETCH];\r\n}\r\n/**\r\n * Determines whether ajax monitoring can be enabled on this document\r\n * @returns True if Ajax monitoring is supported on this page, otherwise false\r\n * @ignore\r\n */\r\nfunction _supportsAjaxMonitoring(ajaxMonitorInstance, ajaxDataId) {\r\n    var _a, _b;\r\n    var result = false;\r\n    if (isXhrSupported()) {\r\n        var proto = XMLHttpRequest[strPrototype];\r\n        result = !isNullOrUndefined(proto) &&\r\n            !isNullOrUndefined(proto.open) && // eslint-disable-line security/detect-non-literal-fs-filename -- false positive\r\n            !isNullOrUndefined(proto.send) &&\r\n            !isNullOrUndefined(proto.abort);\r\n    }\r\n    var ieVer = getIEVersion();\r\n    if (ieVer && ieVer < 9) {\r\n        result = false;\r\n    }\r\n    if (result) {\r\n        // Disable if the XmlHttpRequest can't be extended or hooked\r\n        try {\r\n            var xhr = new XMLHttpRequest();\r\n            var xhrData = {\r\n                xh: [],\r\n                i: (_a = {},\r\n                    _a[ajaxDataId] = {},\r\n                    _a)\r\n            };\r\n            xhr[AJAX_DATA_CONTAINER] = xhrData;\r\n            // Check that we can update the prototype\r\n            var theOpen = XMLHttpRequest[strPrototype].open;\r\n            XMLHttpRequest[strPrototype].open = theOpen;\r\n        }\r\n        catch (e) {\r\n            // We can't decorate the xhr object so disable monitoring\r\n            result = false;\r\n            _throwInternalCritical(ajaxMonitorInstance, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, \"Failed to enable XMLHttpRequest monitoring, extension is not supported\", (_b = {},\r\n                _b[_DYN_EXCEPTION /* @min:exception */] = dumpObj(e),\r\n                _b));\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Internal helper to fetch the SDK instance tracking data for this XHR request\r\n * @param xhr\r\n * @param ajaxDataId\r\n * @returns\r\n */\r\nvar _getAjaxData = function (xhr, ajaxDataId) {\r\n    if (xhr && ajaxDataId && xhr[AJAX_DATA_CONTAINER]) {\r\n        return (xhr[AJAX_DATA_CONTAINER].i || {})[ajaxDataId];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * @ignore\r\n * Internal helper to track the singleton shared tracking headers, so we can attempt to not create headers\r\n * that might cause an issue if multiple values are populated.\r\n * @param xhr - The instrumented XHR instance\r\n */\r\nvar _addSharedXhrHeaders = function (xhr, name, value) {\r\n    if (xhr) {\r\n        var headers = (xhr[AJAX_DATA_CONTAINER] || {}).xh;\r\n        if (headers) {\r\n            headers.push({\r\n                n: name,\r\n                v: value\r\n            });\r\n        }\r\n    }\r\n};\r\nvar _isHeaderSet = function (xhr, name) {\r\n    var isPresent = false;\r\n    if (xhr) {\r\n        var headers = (xhr[AJAX_DATA_CONTAINER] || {}).xh;\r\n        if (headers) {\r\n            arrForEach(headers, function (header) {\r\n                if (header.n === name) {\r\n                    isPresent = true;\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return isPresent;\r\n};\r\n/** @Ignore */\r\nfunction _getFailedAjaxDiagnosticsMessage(xhr, ajaxDataId) {\r\n    var result = \"\";\r\n    try {\r\n        var ajaxData = _getAjaxData(xhr, ajaxDataId);\r\n        if (ajaxData && ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */]) {\r\n            result += \"(url: '\" + ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] + \"')\";\r\n        }\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _throwInternalCritical(ajaxMonitorInstance, msgId, message, properties, isUserAct) {\r\n    _throwInternal(ajaxMonitorInstance[strDiagLog](), 1 /* eLoggingSeverity.CRITICAL */, msgId, message, properties, isUserAct);\r\n}\r\n/** @ignore */\r\nfunction _throwInternalWarning(ajaxMonitorInstance, msgId, message, properties, isUserAct) {\r\n    _throwInternal(ajaxMonitorInstance[strDiagLog](), 2 /* eLoggingSeverity.WARNING */, msgId, message, properties, isUserAct);\r\n}\r\n/** @Ignore */\r\nfunction _createErrorCallbackFunc(ajaxMonitorInstance, internalMessage, message) {\r\n    // tslint:disable-next-line\r\n    return function (callDetails) {\r\n        var _a;\r\n        _throwInternalCritical(ajaxMonitorInstance, internalMessage, message, (_a = {\r\n                ajaxDiagnosticsMessage: _getFailedAjaxDiagnosticsMessage(callDetails[_DYN_INST /* @min:%2einst */], ajaxMonitorInstance._ajaxDataId)\r\n            },\r\n            _a[_DYN_EXCEPTION /* @min:exception */] = dumpObj(callDetails.err),\r\n            _a));\r\n    };\r\n}\r\nfunction _indexOf(value, match) {\r\n    if (value && match) {\r\n        return strIndexOf(value, match);\r\n    }\r\n    return -1;\r\n}\r\nfunction _addHandler(container, id, theFunc) {\r\n    var theHandler = {\r\n        id: id,\r\n        fn: theFunc\r\n    };\r\n    container.push(theHandler);\r\n    return {\r\n        remove: function () {\r\n            arrForEach(container, function (initializer, idx) {\r\n                if (initializer.id === theHandler.id) {\r\n                    container.splice(idx, 1);\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    };\r\n}\r\nfunction _processDependencyContainer(core, container, details, message) {\r\n    var result = true;\r\n    arrForEach(container, function (theFunc, idx) {\r\n        try {\r\n            if (theFunc.fn.call(null, details) === false) {\r\n                result = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            _throwInternal(core && core.logger, 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Dependency \" + message + \" [#\" + idx + \"] failed: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n        }\r\n    });\r\n    return result;\r\n}\r\nfunction _processDependencyListeners(listeners, core, ajaxData, xhr, input, init) {\r\n    var _a;\r\n    var initializersCount = listeners[_DYN_LENGTH /* @min:%2elength */];\r\n    if (initializersCount > 0) {\r\n        var details = (_a = {},\r\n            _a[_DYN_CORE /* @min:core */] = core,\r\n            _a.xhr = xhr,\r\n            _a.input = input,\r\n            _a.init = init,\r\n            _a.traceId = ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */],\r\n            _a.spanId = ajaxData[_DYN_SPAN_ID /* @min:%2espanID */],\r\n            _a.traceFlags = ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */],\r\n            _a.context = ajaxData[_DYN_CONTEXT /* @min:%2econtext */] || {},\r\n            _a.aborted = !!ajaxData[_DYN_ABORTED /* @min:%2eaborted */],\r\n            _a);\r\n        _processDependencyContainer(core, listeners, details, \"listener\");\r\n        ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */] = details[_DYN_TRACE_ID0 /* @min:%2etraceId */];\r\n        ajaxData[_DYN_SPAN_ID /* @min:%2espanID */] = details[_DYN_SPAN_ID1 /* @min:%2espanId */];\r\n        ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = details[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        ajaxData[_DYN_CONTEXT /* @min:%2econtext */] = details[_DYN_CONTEXT /* @min:%2econtext */];\r\n    }\r\n}\r\nvar BLOB_CORE = \"*.blob.core.\";\r\nexport var DfltAjaxCorrelationHeaderExDomains = objFreeze([\r\n    BLOB_CORE + \"windows.net\",\r\n    BLOB_CORE + \"chinacloudapi.cn\",\r\n    BLOB_CORE + \"cloudapi.de\",\r\n    BLOB_CORE + \"usgovcloudapi.net\"\r\n]);\r\nvar _internalExcludeEndpoints = [\r\n    /https:\\/\\/[^\\/]*(\\.pipe\\.aria|aria\\.pipe|events\\.data|collector\\.azure)\\.[^\\/]+\\/(OneCollector\\/1|Collector\\/3)\\.0/i\r\n];\r\nvar _defaultConfig = objFreeze((_a = {},\r\n    _a[_DYN_MAX_AJAX_CALLS_PER_V7 /* @min:maxAjaxCallsPerView */] = 500,\r\n    _a[_DYN_DISABLE_AJAX_TRACKIN9 /* @min:disableAjaxTracking */] = false,\r\n    _a[_DYN_DISABLE_FETCH_TRACKI11 /* @min:disableFetchTracking */] = false,\r\n    _a[_DYN_EXCLUDE_REQUEST_FROM8 /* @min:excludeRequestFromAutoTrackingPatterns */] = undefined,\r\n    _a.disableCorrelationHeaders = false,\r\n    _a.distributedTracingMode = 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    _a.correlationHeaderExcludedDomains = DfltAjaxCorrelationHeaderExDomains,\r\n    _a.correlationHeaderDomains = undefined,\r\n    _a.correlationHeaderExcludePatterns = undefined,\r\n    _a.appId = undefined,\r\n    _a.enableCorsCorrelation = false,\r\n    _a[_DYN_ENABLE_REQUEST_HEADE4 /* @min:enableRequestHeaderTracking */] = false,\r\n    _a[_DYN_ENABLE_RESPONSE_HEAD12 /* @min:enableResponseHeaderTracking */] = false,\r\n    _a[_DYN_ENABLE_AJAX_ERROR_ST5 /* @min:enableAjaxErrorStatusText */] = false,\r\n    _a[_DYN_ENABLE_AJAX_PERF_TRA6 /* @min:enableAjaxPerfTracking */] = false,\r\n    _a.maxAjaxPerfLookupAttempts = 3,\r\n    _a[_DYN_AJAX_PERF_LOOKUP_DEL10 /* @min:ajaxPerfLookupDelay */] = 25,\r\n    _a.ignoreHeaders = [\r\n        \"Authorization\",\r\n        \"X-API-Key\",\r\n        \"WWW-Authenticate\"\r\n    ],\r\n    _a[_DYN_ADD_REQUEST_CONTEXT /* @min:addRequestContext */] = undefined,\r\n    _a.addIntEndpoints = true,\r\n    _a));\r\nvar AjaxMonitor = /** @class */ (function (_super) {\r\n    __extends(AjaxMonitor, _super);\r\n    function AjaxMonitor() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = AjaxMonitor.identifier;\r\n        _this.priority = 120;\r\n        var _fetchInitialized; // fetch monitoring initialized\r\n        var _xhrInitialized; // XHR monitoring initialized\r\n        var _currentWindowHost;\r\n        var _extensionConfig;\r\n        var _enableRequestHeaderTracking;\r\n        var _enableAjaxErrorStatusText;\r\n        var _trackAjaxAttempts;\r\n        var _context;\r\n        var _isUsingW3CHeaders;\r\n        var _isUsingAIHeaders;\r\n        var _markPrefix;\r\n        var _enableAjaxPerfTracking;\r\n        var _maxAjaxCallsPerView;\r\n        var _enableResponseHeaderTracking;\r\n        var _disabledUrls;\r\n        var _disableAjaxTracking;\r\n        var _disableFetchTracking;\r\n        var _excludeRequestFromAutoTrackingPatterns;\r\n        var _addRequestContext;\r\n        var _evtNamespace;\r\n        var _ajaxDataId;\r\n        var _dependencyHandlerId;\r\n        var _dependencyListeners;\r\n        var _dependencyInitializers;\r\n        var _ignoreHeaders;\r\n        var _maxAjaxPerfLookupAttempts;\r\n        var _ajaxPerfLookupDelay;\r\n        var _distributedTracingMode;\r\n        var _appId;\r\n        var _polyfillInitialized;\r\n        dynamicProto(AjaxMonitor, _this, function (_self, _base) {\r\n            var _addHook = _base[_DYN__ADD_HOOK /* @min:%2e_addHook */];\r\n            _initDefaults();\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                if (!_self.isInitialized()) {\r\n                    _base.initialize(config, core, extensions, pluginChain);\r\n                    _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"ajax\"), core && core.evtNamespace && core.evtNamespace());\r\n                    _populateDefaults(config);\r\n                    _instrumentXhr();\r\n                    _instrumentFetch();\r\n                    _populateContext();\r\n                }\r\n            };\r\n            _self._doTeardown = function () {\r\n                _initDefaults();\r\n            };\r\n            _self.trackDependencyData = function (dependency, properties) {\r\n                _reportDependencyInternal(_dependencyInitializers, _self[_DYN_CORE /* @min:%2ecore */], null, dependency, properties);\r\n            };\r\n            _self[_DYN_INCLUDE_CORRELATION_2 /* @min:%2eincludeCorrelationHeaders */] = function (ajaxData, input, init, xhr) {\r\n                // Test Hook to allow the overriding of the location host\r\n                var currentWindowHost = _self[\"_currentWindowHost\"] || _currentWindowHost;\r\n                _processDependencyListeners(_dependencyListeners, _self[_DYN_CORE /* @min:%2ecore */], ajaxData, xhr, input, init);\r\n                if (input || input === \"\") { // Fetch\r\n                    if (correlationIdCanIncludeCorrelationHeader(_extensionConfig, ajaxData[_DYN_GET_ABSOLUTE_URL /* @min:%2egetAbsoluteUrl */](), currentWindowHost)) {\r\n                        if (!init) {\r\n                            init = {};\r\n                        }\r\n                        // init headers override original request headers\r\n                        // so, if they exist use only them, otherwise use request's because they should have been applied in the first place\r\n                        // not using original request headers will result in them being lost\r\n                        var headers = new Headers(init[_DYN_HEADERS /* @min:%2eheaders */] || (input instanceof Request ? (input[_DYN_HEADERS /* @min:%2eheaders */] || {}) : {}));\r\n                        if (_isUsingAIHeaders) {\r\n                            var id = \"|\" + ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */] + \".\" + ajaxData[_DYN_SPAN_ID /* @min:%2espanID */];\r\n                            headers.set(RequestHeaders[3 /* eRequestHeaders.requestIdHeader */], id);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[3 /* eRequestHeaders.requestIdHeader */]] = id;\r\n                            }\r\n                        }\r\n                        var appId = _appId || (_context && _context.appId());\r\n                        if (appId) {\r\n                            headers.set(RequestHeaders[0 /* eRequestHeaders.requestContextHeader */], RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]] = RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId;\r\n                            }\r\n                        }\r\n                        if (_isUsingW3CHeaders) {\r\n                            var traceFlags = ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n                            if (isNullOrUndefined(traceFlags)) {\r\n                                traceFlags = 0x01;\r\n                            }\r\n                            var traceParent = formatTraceParent(createTraceParent(ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */], ajaxData[_DYN_SPAN_ID /* @min:%2espanID */], traceFlags));\r\n                            headers.set(RequestHeaders[4 /* eRequestHeaders.traceParentHeader */], traceParent);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[4 /* eRequestHeaders.traceParentHeader */]] = traceParent;\r\n                            }\r\n                        }\r\n                        init[_DYN_HEADERS /* @min:%2eheaders */] = headers;\r\n                    }\r\n                    return init;\r\n                }\r\n                else if (xhr) { // XHR\r\n                    if (correlationIdCanIncludeCorrelationHeader(_extensionConfig, ajaxData[_DYN_GET_ABSOLUTE_URL /* @min:%2egetAbsoluteUrl */](), currentWindowHost)) {\r\n                        if (_isUsingAIHeaders) {\r\n                            if (!_isHeaderSet(xhr, RequestHeaders[3 /* eRequestHeaders.requestIdHeader */])) {\r\n                                var id = \"|\" + ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */] + \".\" + ajaxData[_DYN_SPAN_ID /* @min:%2espanID */];\r\n                                xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](RequestHeaders[3 /* eRequestHeaders.requestIdHeader */], id);\r\n                                if (_enableRequestHeaderTracking) {\r\n                                    ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[3 /* eRequestHeaders.requestIdHeader */]] = id;\r\n                                }\r\n                            }\r\n                            else {\r\n                                _throwInternalWarning(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, \"Unable to set [\" + RequestHeaders[3 /* eRequestHeaders.requestIdHeader */] + \"] as it has already been set by another instance\");\r\n                            }\r\n                        }\r\n                        var appId = _appId || (_context && _context.appId());\r\n                        if (appId) {\r\n                            if (!_isHeaderSet(xhr, RequestHeaders[0 /* eRequestHeaders.requestContextHeader */])) {\r\n                                xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](RequestHeaders[0 /* eRequestHeaders.requestContextHeader */], RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId);\r\n                                if (_enableRequestHeaderTracking) {\r\n                                    ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]] = RequestHeaders[2 /* eRequestHeaders.requestContextAppIdFormat */] + appId;\r\n                                }\r\n                            }\r\n                            else {\r\n                                _throwInternalWarning(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, \"Unable to set [\" + RequestHeaders[0 /* eRequestHeaders.requestContextHeader */] + \"] as it has already been set by another instance\");\r\n                            }\r\n                        }\r\n                        if (_isUsingW3CHeaders) {\r\n                            var traceFlags = ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n                            if (isNullOrUndefined(traceFlags)) {\r\n                                traceFlags = 0x01;\r\n                            }\r\n                            if (!_isHeaderSet(xhr, RequestHeaders[4 /* eRequestHeaders.traceParentHeader */])) {\r\n                                var traceParent = formatTraceParent(createTraceParent(ajaxData[_DYN_TRACE_ID /* @min:%2etraceID */], ajaxData[_DYN_SPAN_ID /* @min:%2espanID */], traceFlags));\r\n                                xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](RequestHeaders[4 /* eRequestHeaders.traceParentHeader */], traceParent);\r\n                                if (_enableRequestHeaderTracking) {\r\n                                    ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][RequestHeaders[4 /* eRequestHeaders.traceParentHeader */]] = traceParent;\r\n                                }\r\n                            }\r\n                            else {\r\n                                _throwInternalWarning(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, \"Unable to set [\" + RequestHeaders[4 /* eRequestHeaders.traceParentHeader */] + \"] as it has already been set by another instance\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return xhr;\r\n                }\r\n                return undefined;\r\n            };\r\n            _self[_DYN_TRACK_DEPENDENCY_DAT3 /* @min:%2etrackDependencyDataInternal */] = function (dependency, properties, systemProperties) {\r\n                if (_maxAjaxCallsPerView === -1 || _trackAjaxAttempts < _maxAjaxCallsPerView) {\r\n                    // Hack since expected format in w3c mode is |abc.def.\r\n                    // Non-w3c format is |abc.def\r\n                    // @todo Remove if better solution is available, e.g. handle in portal\r\n                    if ((_distributedTracingMode === 2 /* eDistributedTracingModes.W3C */\r\n                        || _distributedTracingMode === 1 /* eDistributedTracingModes.AI_AND_W3C */)\r\n                        && typeof dependency.id === \"string\" && dependency.id[dependency.id[_DYN_LENGTH /* @min:%2elength */] - 1] !== \".\") {\r\n                        dependency.id += \".\";\r\n                    }\r\n                    if (isNullOrUndefined(dependency[_DYN_START_TIME /* @min:%2estartTime */])) {\r\n                        dependency[_DYN_START_TIME /* @min:%2estartTime */] = new Date();\r\n                    }\r\n                    var item = createTelemetryItem(dependency, RemoteDependencyData.dataType, RemoteDependencyData.envelopeType, _self[strDiagLog](), properties, systemProperties);\r\n                    _self[_DYN_CORE /* @min:%2ecore */].track(item);\r\n                }\r\n                else if (_trackAjaxAttempts === _maxAjaxCallsPerView) {\r\n                    _throwInternalCritical(_self, 55 /* _eInternalMessageId.MaxAjaxPerPVExceeded */, \"Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.\", true);\r\n                }\r\n                ++_trackAjaxAttempts;\r\n            };\r\n            _self.addDependencyListener = function (dependencyListener) {\r\n                return _addHandler(_dependencyListeners, _dependencyHandlerId++, dependencyListener);\r\n            };\r\n            _self.addDependencyInitializer = function (dependencyInitializer) {\r\n                return _addHandler(_dependencyInitializers, _dependencyHandlerId++, dependencyInitializer);\r\n            };\r\n            function _initDefaults() {\r\n                var location = getLocation();\r\n                _fetchInitialized = false; // fetch monitoring initialized\r\n                _xhrInitialized = false; // XHR monitoring initialized\r\n                _polyfillInitialized = false; // polyfill monitoring initialized\r\n                _currentWindowHost = location && location.host && location.host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                _extensionConfig = null;\r\n                _enableRequestHeaderTracking = false;\r\n                _enableAjaxErrorStatusText = false;\r\n                _trackAjaxAttempts = 0;\r\n                _context = null;\r\n                _isUsingW3CHeaders = false;\r\n                _isUsingAIHeaders = false;\r\n                _markPrefix = null;\r\n                _enableAjaxPerfTracking = false;\r\n                _maxAjaxCallsPerView = 0;\r\n                _enableResponseHeaderTracking = false;\r\n                _disabledUrls = {};\r\n                _disableAjaxTracking = false;\r\n                _disableFetchTracking = false;\r\n                _excludeRequestFromAutoTrackingPatterns = null;\r\n                _addRequestContext = null;\r\n                _evtNamespace = null;\r\n                _dependencyHandlerId = 0;\r\n                _dependencyListeners = [];\r\n                _dependencyInitializers = [];\r\n                _ajaxDataId = createUniqueNamespace(\"ajaxData\");\r\n                _self._ajaxDataId = _ajaxDataId;\r\n                _ignoreHeaders = null;\r\n                _maxAjaxPerfLookupAttempts = 1;\r\n                _ajaxPerfLookupDelay = 1;\r\n                _distributedTracingMode = 1 /* eDistributedTracingModes.AI_AND_W3C */;\r\n                _appId = null;\r\n            }\r\n            function _populateDefaults(config) {\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(config, function (details) {\r\n                    var config = details.cfg;\r\n                    var ctx = createProcessTelemetryContext(null, config, _self[_DYN_CORE /* @min:%2ecore */]);\r\n                    _extensionConfig = ctx.getExtCfg(AjaxMonitor.identifier, _defaultConfig);\r\n                    _distributedTracingMode = _extensionConfig.distributedTracingMode;\r\n                    _enableRequestHeaderTracking = _extensionConfig[_DYN_ENABLE_REQUEST_HEADE4 /* @min:%2eenableRequestHeaderTracking */];\r\n                    _enableAjaxErrorStatusText = _extensionConfig[_DYN_ENABLE_AJAX_ERROR_ST5 /* @min:%2eenableAjaxErrorStatusText */];\r\n                    _enableAjaxPerfTracking = _extensionConfig[_DYN_ENABLE_AJAX_PERF_TRA6 /* @min:%2eenableAjaxPerfTracking */];\r\n                    _maxAjaxCallsPerView = _extensionConfig[_DYN_MAX_AJAX_CALLS_PER_V7 /* @min:%2emaxAjaxCallsPerView */];\r\n                    _excludeRequestFromAutoTrackingPatterns = [].concat(_extensionConfig[_DYN_EXCLUDE_REQUEST_FROM8 /* @min:%2eexcludeRequestFromAutoTrackingPatterns */] || [], _extensionConfig.addIntEndpoints !== false ? _internalExcludeEndpoints : []);\r\n                    _addRequestContext = _extensionConfig[_DYN_ADD_REQUEST_CONTEXT /* @min:%2eaddRequestContext */];\r\n                    _isUsingAIHeaders = _distributedTracingMode === 0 /* eDistributedTracingModes.AI */ || _distributedTracingMode === 1 /* eDistributedTracingModes.AI_AND_W3C */;\r\n                    _isUsingW3CHeaders = _distributedTracingMode === 1 /* eDistributedTracingModes.AI_AND_W3C */ || _distributedTracingMode === 2 /* eDistributedTracingModes.W3C */;\r\n                    if (_enableAjaxPerfTracking) {\r\n                        var iKey = config.instrumentationKey || \"unkwn\";\r\n                        if (iKey[_DYN_LENGTH /* @min:%2elength */] > 5) {\r\n                            _markPrefix = AJAX_MONITOR_PREFIX + strSubstring(iKey, iKey[_DYN_LENGTH /* @min:%2elength */] - 5) + \".\";\r\n                        }\r\n                        else {\r\n                            _markPrefix = AJAX_MONITOR_PREFIX + iKey + \".\";\r\n                        }\r\n                    }\r\n                    _disableAjaxTracking = !!_extensionConfig[_DYN_DISABLE_AJAX_TRACKIN9 /* @min:%2edisableAjaxTracking */];\r\n                    _maxAjaxPerfLookupAttempts = _extensionConfig.maxAjaxPerfLookupAttempts;\r\n                    _ajaxPerfLookupDelay = _extensionConfig[_DYN_AJAX_PERF_LOOKUP_DEL10 /* @min:%2eajaxPerfLookupDelay */];\r\n                    _ignoreHeaders = _extensionConfig.ignoreHeaders;\r\n                    _appId = _extensionConfig.appId;\r\n                }));\r\n            }\r\n            function _populateContext() {\r\n                var propExt = _self[_DYN_CORE /* @min:%2ecore */].getPlugin(PropertiesPluginIdentifier);\r\n                if (propExt) {\r\n                    _context = propExt.plugin[_DYN_CONTEXT /* @min:%2econtext */]; // we could move IPropertiesPlugin to common as well\r\n                }\r\n            }\r\n            // discard the header if it's defined as ignoreHeaders in ICorrelationConfig\r\n            function _canIncludeHeaders(header) {\r\n                var rlt = true;\r\n                if (header || _ignoreHeaders) {\r\n                    arrForEach(_ignoreHeaders, (function (key) {\r\n                        if (key[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === header[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) {\r\n                            rlt = false;\r\n                            return -1;\r\n                        }\r\n                    }));\r\n                }\r\n                return rlt;\r\n            }\r\n            // Fetch Stuff\r\n            function _instrumentFetch() {\r\n                var fetch = _supportsFetch();\r\n                if (!fetch) {\r\n                    return;\r\n                }\r\n                var global = getGlobal();\r\n                var isPolyfill = fetch.polyfill;\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extensionConfig, function () {\r\n                    _disableFetchTracking = !!_extensionConfig[_DYN_DISABLE_FETCH_TRACKI11 /* @min:%2edisableFetchTracking */];\r\n                    _enableResponseHeaderTracking = _extensionConfig[_DYN_ENABLE_RESPONSE_HEAD12 /* @min:%2eenableResponseHeaderTracking */];\r\n                    if (!_disableFetchTracking && !_fetchInitialized) {\r\n                        _addHook(InstrumentFunc(global, STR_FETCH, {\r\n                            ns: _evtNamespace,\r\n                            // Add request hook\r\n                            req: function (callDetails, input, init) {\r\n                                var fetchData;\r\n                                if (!_disableFetchTracking && _fetchInitialized &&\r\n                                    !_isDisabledRequest(null, input, init) &&\r\n                                    // If we have a polyfil and XHR instrumented then let XHR report otherwise we get duplicates\r\n                                    !(isPolyfill && _xhrInitialized)) {\r\n                                    var ctx = callDetails.ctx();\r\n                                    fetchData = _createFetchRecord(input, init);\r\n                                    var newInit = _self[_DYN_INCLUDE_CORRELATION_2 /* @min:%2eincludeCorrelationHeaders */](fetchData, input, init);\r\n                                    if (newInit !== init) {\r\n                                        callDetails.set(1, newInit);\r\n                                    }\r\n                                    ctx.data = fetchData;\r\n                                }\r\n                            },\r\n                            rsp: function (callDetails, input) {\r\n                                if (!_disableFetchTracking) {\r\n                                    var fetchData_1 = callDetails.ctx().data;\r\n                                    if (fetchData_1) {\r\n                                        // Replace the result with the new promise from this code\r\n                                        callDetails.rslt = callDetails.rslt.then(function (response) {\r\n                                            _reportFetchMetrics(callDetails, (response || {})[_DYN_STATUS /* @min:%2estatus */], input, response, fetchData_1, function () {\r\n                                                var _a;\r\n                                                var ajaxResponse = (_a = {\r\n                                                        statusText: (response || {})[_DYN_STATUS_TEXT /* @min:%2estatusText */]\r\n                                                    },\r\n                                                    _a[_DYN_HEADER_MAP /* @min:headerMap */] = null,\r\n                                                    _a[_DYN_CORRELATION_CONTEXT /* @min:correlationContext */] = _getFetchCorrelationContext(response),\r\n                                                    _a);\r\n                                                if (_enableResponseHeaderTracking && response) {\r\n                                                    var responseHeaderMap_1 = {};\r\n                                                    response.headers.forEach(function (value, name) {\r\n                                                        if (_canIncludeHeaders(name)) {\r\n                                                            responseHeaderMap_1[name] = value;\r\n                                                        }\r\n                                                    });\r\n                                                    ajaxResponse[_DYN_HEADER_MAP /* @min:%2eheaderMap */] = responseHeaderMap_1;\r\n                                                }\r\n                                                return ajaxResponse;\r\n                                            });\r\n                                            return response;\r\n                                        })\r\n                                            .catch(function (reason) {\r\n                                            _reportFetchMetrics(callDetails, 0, input, null, fetchData_1, null, { error: reason.message || dumpObj(reason) });\r\n                                            throw reason;\r\n                                        });\r\n                                    }\r\n                                }\r\n                            },\r\n                            // Create an error callback to report any hook errors\r\n                            hkErr: _createErrorCallbackFunc(_self, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, \"Failed to monitor Window.fetch\" + ERROR_POSTFIX)\r\n                        }, true, isWebWorker()));\r\n                        _fetchInitialized = true;\r\n                    }\r\n                    else if (isPolyfill && !_polyfillInitialized) {\r\n                        // If fetch is a polyfill we need to capture the request to ensure that we correctly track\r\n                        // disabled request URLS (i.e. internal urls) to ensure we don't end up in a constant loop\r\n                        // of reporting ourselves, for example React Native uses a polyfill for fetch\r\n                        // Note: Polyfill implementations that don't support the \"polyfill\" tag are not supported\r\n                        // the workaround is to add a polyfill property to your fetch implementation before initializing\r\n                        // App Insights\r\n                        _addHook(InstrumentFunc(global, STR_FETCH, {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, input, init) {\r\n                                // Just call so that we record any disabled URL\r\n                                _isDisabledRequest(null, input, init);\r\n                            }\r\n                        }));\r\n                        _polyfillInitialized = true;\r\n                    }\r\n                }));\r\n                if (isPolyfill) {\r\n                    // retag the instrumented fetch with the same polyfill settings this is mostly for testing\r\n                    // But also supports multiple App Insights usages\r\n                    global[STR_FETCH].polyfill = isPolyfill;\r\n                }\r\n            }\r\n            function _hookProto(target, funcName, callbacks) {\r\n                _addHook(InstrumentProto(target, funcName, callbacks));\r\n            }\r\n            function _instrumentXhr() {\r\n                if (!_supportsAjaxMonitoring(_self, _ajaxDataId)) {\r\n                    return;\r\n                }\r\n                _self[_DYN__ADD_HOOK /* @min:%2e_addHook */](onConfigChange(_extensionConfig, function () {\r\n                    _disableAjaxTracking = !!_extensionConfig[_DYN_DISABLE_AJAX_TRACKIN9 /* @min:%2edisableAjaxTracking */];\r\n                    _enableRequestHeaderTracking = _extensionConfig[_DYN_ENABLE_REQUEST_HEADE4 /* @min:%2eenableRequestHeaderTracking */];\r\n                    if (!_disableAjaxTracking && !_xhrInitialized) {\r\n                        // Instrument open\r\n                        _hookProto(XMLHttpRequest, \"open\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, method, url, async) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (!_isDisabledRequest(xhr, url) && _isMonitoredXhrInstance(xhr, ajaxData, true)) {\r\n                                        if (!ajaxData || !ajaxData.xhrMonitoringState[_DYN_OPEN_DONE /* @min:%2eopenDone */]) {\r\n                                            // Only create a single ajaxData (even when multiple AI instances are running)\r\n                                            ajaxData = _openHandler(xhr, method, url, async);\r\n                                        }\r\n                                        // always attach to the on ready state change (required for handling multiple instances)\r\n                                        _attachToOnReadyStateChange(xhr, ajaxData);\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, ERROR_HEADER + \".open\" + ERROR_POSTFIX)\r\n                        });\r\n                        // Instrument send\r\n                        _hookProto(XMLHttpRequest, \"send\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, context) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (_isMonitoredXhrInstance(xhr, ajaxData) && !ajaxData.xhrMonitoringState[_DYN_SEND_DONE /* @min:%2esendDone */]) {\r\n                                        _createMarkId(\"xhr\", ajaxData);\r\n                                        ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */] = dateTimeUtilsNow();\r\n                                        _self[_DYN_INCLUDE_CORRELATION_2 /* @min:%2eincludeCorrelationHeaders */](ajaxData, undefined, undefined, xhr);\r\n                                        ajaxData.xhrMonitoringState[_DYN_SEND_DONE /* @min:%2esendDone */] = true;\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 17 /* _eInternalMessageId.FailedMonitorAjaxSend */, ERROR_HEADER + ERROR_POSTFIX)\r\n                        });\r\n                        // Instrument abort\r\n                        _hookProto(XMLHttpRequest, \"abort\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (_isMonitoredXhrInstance(xhr, ajaxData) && !ajaxData.xhrMonitoringState[_DYN_ABORT_DONE /* @min:%2eabortDone */]) {\r\n                                        ajaxData[_DYN_ABORTED /* @min:%2eaborted */] = 1;\r\n                                        ajaxData.xhrMonitoringState[_DYN_ABORT_DONE /* @min:%2eabortDone */] = true;\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 13 /* _eInternalMessageId.FailedMonitorAjaxAbort */, ERROR_HEADER + \".abort\" + ERROR_POSTFIX)\r\n                        });\r\n                        // Instrument setRequestHeader\r\n                        _hookProto(XMLHttpRequest, \"setRequestHeader\", {\r\n                            ns: _evtNamespace,\r\n                            req: function (callDetails, header, value) {\r\n                                if (!_disableAjaxTracking) {\r\n                                    var xhr = callDetails[_DYN_INST /* @min:%2einst */];\r\n                                    var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                                    if (ajaxData && _isMonitoredXhrInstance(xhr, ajaxData)) {\r\n                                        _addSharedXhrHeaders(xhr, header, value);\r\n                                        if (_enableRequestHeaderTracking && _canIncludeHeaders(header)) {\r\n                                            if (ajaxData) {\r\n                                                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */][header] = value;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, 71 /* _eInternalMessageId.FailedMonitorAjaxSetRequestHeader */, ERROR_HEADER + \".setRequestHeader\" + ERROR_POSTFIX)\r\n                        });\r\n                        _xhrInitialized = true;\r\n                    }\r\n                }));\r\n            }\r\n            function _isDisabledRequest(xhr, request, init) {\r\n                var isDisabled = false;\r\n                var theUrl = ((!isString(request) ? (request || {}).url || \"\" : request) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                // check excludeRequestFromAutoTrackingPatterns before stripping off any query string\r\n                arrForEach(_excludeRequestFromAutoTrackingPatterns, function (regex) {\r\n                    var theRegex = regex;\r\n                    if (isString(regex)) {\r\n                        theRegex = new RegExp(regex);\r\n                    }\r\n                    if (!isDisabled) {\r\n                        isDisabled = theRegex.test(theUrl);\r\n                    }\r\n                });\r\n                // if request url matches with exclude regex pattern, return true and no need to check for headers\r\n                if (isDisabled) {\r\n                    return isDisabled;\r\n                }\r\n                var idx = _indexOf(theUrl, \"?\");\r\n                var idx2 = _indexOf(theUrl, \"#\");\r\n                if (idx === -1 || (idx2 !== -1 && idx2 < idx)) {\r\n                    idx = idx2;\r\n                }\r\n                if (idx !== -1) {\r\n                    // Strip off any Query string\r\n                    theUrl = theUrl.substring(0, idx);\r\n                }\r\n                // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n                if (!isNullOrUndefined(xhr)) {\r\n                    // Look on the XMLHttpRequest of the URL string value\r\n                    isDisabled = xhr[DisabledPropertyName] === true || theUrl[DisabledPropertyName] === true;\r\n                }\r\n                else if (!isNullOrUndefined(request)) { // fetch\r\n                    // Look for DisabledPropertyName in either Request or RequestInit\r\n                    isDisabled = (typeof request === \"object\" ? request[DisabledPropertyName] === true : false) ||\r\n                        (init ? init[DisabledPropertyName] === true : false);\r\n                }\r\n                // Also add extra check just in case the XHR or fetch objects where not decorated with the DisableProperty due to sealing or freezing\r\n                if (!isDisabled && theUrl && isInternalApplicationInsightsEndpoint(theUrl)) {\r\n                    isDisabled = true;\r\n                }\r\n                if (isDisabled) {\r\n                    // Add the disabled url if not present\r\n                    if (!_disabledUrls[theUrl]) {\r\n                        _disabledUrls[theUrl] = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    // Check to see if the url is listed as disabled\r\n                    if (_disabledUrls[theUrl]) {\r\n                        isDisabled = true;\r\n                    }\r\n                }\r\n                return isDisabled;\r\n            }\r\n            /// <summary>Verifies that particular instance of XMLHttpRequest needs to be monitored</summary>\r\n            /// <param name=\"excludeAjaxDataValidation\">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n            /// <returns type=\"bool\">True if instance needs to be monitored, otherwise false</returns>\r\n            function _isMonitoredXhrInstance(xhr, ajaxData, excludeAjaxDataValidation) {\r\n                var ajaxValidation = true;\r\n                var initialized = _xhrInitialized;\r\n                if (!isNullOrUndefined(xhr)) {\r\n                    ajaxValidation = excludeAjaxDataValidation === true || !isNullOrUndefined(ajaxData);\r\n                }\r\n                // checking to see that all interested functions on xhr were instrumented\r\n                return initialized\r\n                    // checking on ajaxData to see that it was not removed in user code\r\n                    && ajaxValidation;\r\n            }\r\n            function _getDistributedTraceCtx() {\r\n                var distributedTraceCtx = null;\r\n                if (_self[_DYN_CORE /* @min:%2ecore */] && _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx) {\r\n                    distributedTraceCtx = _self[_DYN_CORE /* @min:%2ecore */].getTraceCtx(false);\r\n                }\r\n                // Fall back\r\n                if (!distributedTraceCtx && _context && _context.telemetryTrace) {\r\n                    distributedTraceCtx = createDistributedTraceContextFromTrace(_context.telemetryTrace);\r\n                }\r\n                return distributedTraceCtx;\r\n            }\r\n            function _openHandler(xhr, method, url, async) {\r\n                var _a;\r\n                var distributedTraceCtx = _getDistributedTraceCtx();\r\n                var traceID = (distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_ID /* @min:%2egetTraceId */]()) || generateW3CId();\r\n                var spanID = strSubstr(generateW3CId(), 0, 16);\r\n                var xhrRequestData = xhr[AJAX_DATA_CONTAINER] = (xhr[AJAX_DATA_CONTAINER] || { xh: [], i: {} });\r\n                var ajaxDataCntr = xhrRequestData.i = (xhrRequestData.i || {});\r\n                var ajaxData = ajaxDataCntr[_ajaxDataId] = (ajaxDataCntr[_ajaxDataId] || new ajaxRecord(traceID, spanID, _self[strDiagLog](), (_a = _self.core) === null || _a === void 0 ? void 0 : _a.getTraceCtx()));\r\n                ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_FLAGS /* @min:%2egetTraceFlags */]();\r\n                ajaxData[_DYN_METHOD /* @min:%2emethod */] = method;\r\n                ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] = url;\r\n                ajaxData.xhrMonitoringState[_DYN_OPEN_DONE /* @min:%2eopenDone */] = true;\r\n                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = {};\r\n                ajaxData.async = async;\r\n                ajaxData[_DYN_ERROR_STATUS_TEXT /* @min:%2eerrorStatusText */] = _enableAjaxErrorStatusText;\r\n                return ajaxData;\r\n            }\r\n            function _attachToOnReadyStateChange(xhr, ajaxData) {\r\n                ajaxData.xhrMonitoringState[_DYN_STATE_CHANGE_ATTACHE13 /* @min:%2estateChangeAttached */] = eventOn(xhr, \"readystatechange\", function () {\r\n                    var _a;\r\n                    try {\r\n                        if (xhr && xhr.readyState === 4 && _isMonitoredXhrInstance(xhr, ajaxData)) {\r\n                            _onAjaxComplete(xhr);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        var exceptionText = dumpObj(e);\r\n                        // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                        if (!exceptionText || _indexOf(exceptionText[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](), \"c00c023f\") === -1) {\r\n                            _throwInternalCritical(_self, 16 /* _eInternalMessageId.FailedMonitorAjaxRSC */, ERROR_HEADER + \" 'readystatechange' event handler\" + ERROR_POSTFIX, (_a = {},\r\n                                _a[_DYN_AJAX_DIAGNOSTICS_MES16 /* @min:ajaxDiagnosticsMessage */] = _getFailedAjaxDiagnosticsMessage(xhr, _ajaxDataId),\r\n                                _a[_DYN_EXCEPTION /* @min:exception */] = exceptionText,\r\n                                _a));\r\n                        }\r\n                    }\r\n                }, _evtNamespace);\r\n            }\r\n            function _getResponseText(xhr) {\r\n                try {\r\n                    var responseType = xhr.responseType;\r\n                    if (responseType === \"\" || responseType === \"text\") {\r\n                        // As per the specification responseText is only valid if the type is an empty string or \"text\"\r\n                        return xhr[_DYN_RESPONSE_TEXT /* @min:%2eresponseText */];\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // This shouldn't happen because of the above check -- but just in case, so just ignore\r\n                }\r\n                return null;\r\n            }\r\n            function _onAjaxComplete(xhr) {\r\n                var ajaxData = _getAjaxData(xhr, _ajaxDataId);\r\n                ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */] = dateTimeUtilsNow();\r\n                ajaxData[_DYN_STATUS /* @min:%2estatus */] = xhr[_DYN_STATUS /* @min:%2estatus */];\r\n                function _reportXhrError(e, failedProps) {\r\n                    var errorProps = failedProps || {};\r\n                    errorProps[\"ajaxDiagnosticsMessage\"] = _getFailedAjaxDiagnosticsMessage(xhr, _ajaxDataId);\r\n                    if (e) {\r\n                        errorProps[\"exception\"] = dumpObj(e);\r\n                    }\r\n                    _throwInternalWarning(_self, 14 /* _eInternalMessageId.FailedMonitorAjaxDur */, FAILED_TO_CALCULATE_DURATION_ERROR + \"ajax call\" + ERROR_NOT_SENT, errorProps);\r\n                }\r\n                _findPerfResourceEntry(\"xmlhttprequest\", ajaxData, function () {\r\n                    try {\r\n                        var dependency = ajaxData[_DYN__CREATE_TRACK_ITEM /* @min:%2eCreateTrackItem */](\"Ajax\", _enableRequestHeaderTracking, function () {\r\n                            var _a;\r\n                            var ajaxResponse = (_a = {\r\n                                    statusText: xhr[_DYN_STATUS_TEXT /* @min:%2estatusText */]\r\n                                },\r\n                                _a[_DYN_HEADER_MAP /* @min:headerMap */] = null,\r\n                                _a[_DYN_CORRELATION_CONTEXT /* @min:correlationContext */] = _getAjaxCorrelationContext(xhr),\r\n                                _a.type = xhr.responseType,\r\n                                _a[_DYN_RESPONSE_TEXT /* @min:responseText */] = _getResponseText(xhr),\r\n                                _a.response = xhr[_DYN_RESPONSE /* @min:%2eresponse */],\r\n                                _a);\r\n                            if (_enableResponseHeaderTracking) {\r\n                                var headers = xhr[_DYN_GET_ALL_RESPONSE_HEA15 /* @min:%2egetAllResponseHeaders */]();\r\n                                if (headers) {\r\n                                    // xhr.getAllResponseHeaders() method returns all the response headers, separated by CRLF, as a string or null\r\n                                    // the regex converts the header string into an array of individual headers\r\n                                    var arr = strTrim(headers).split(/[\\r\\n]+/);\r\n                                    var responseHeaderMap_2 = {};\r\n                                    arrForEach(arr, function (line) {\r\n                                        var parts = line.split(\": \");\r\n                                        var header = parts.shift();\r\n                                        var value = parts.join(\": \");\r\n                                        if (_canIncludeHeaders(header)) {\r\n                                            responseHeaderMap_2[header] = value;\r\n                                        }\r\n                                    });\r\n                                    ajaxResponse[_DYN_HEADER_MAP /* @min:%2eheaderMap */] = responseHeaderMap_2;\r\n                                }\r\n                            }\r\n                            return ajaxResponse;\r\n                        });\r\n                        var properties = void 0;\r\n                        try {\r\n                            if (!!_addRequestContext) {\r\n                                properties = _addRequestContext({ status: xhr[_DYN_STATUS /* @min:%2estatus */], xhr: xhr });\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternalWarning(_self, 104 /* _eInternalMessageId.FailedAddingCustomDefinedRequestContext */, CUSTOM_REQUEST_CONTEXT_ERROR);\r\n                        }\r\n                        if (dependency) {\r\n                            if (properties !== undefined) {\r\n                                dependency[STR_PROPERTIES /* @min:%2eproperties */] = __assign(__assign({}, dependency.properties), properties);\r\n                            }\r\n                            var sysProperties = ajaxData[_DYN_GET_PART_APROPS /* @min:%2egetPartAProps */]();\r\n                            _reportDependencyInternal(_dependencyInitializers, _self[_DYN_CORE /* @min:%2ecore */], ajaxData, dependency, null, sysProperties);\r\n                        }\r\n                        else {\r\n                            _reportXhrError(null, {\r\n                                requestSentTime: ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */],\r\n                                responseFinishedTime: ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */]\r\n                            });\r\n                        }\r\n                    }\r\n                    finally {\r\n                        // cleanup telemetry data\r\n                        try {\r\n                            var xhrRequestData = (xhr[AJAX_DATA_CONTAINER] || { i: {} });\r\n                            var ajaxDataCntr = (xhrRequestData.i || {});\r\n                            if (ajaxDataCntr[_ajaxDataId]) {\r\n                                ajaxDataCntr[_ajaxDataId] = null;\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // May throw in environments that prevent extension or freeze xhr\r\n                        }\r\n                    }\r\n                }, function (e) {\r\n                    _reportXhrError(e, null);\r\n                });\r\n            }\r\n            function _getAjaxCorrelationContext(xhr) {\r\n                var _a;\r\n                try {\r\n                    var responseHeadersString = xhr[_DYN_GET_ALL_RESPONSE_HEA15 /* @min:%2egetAllResponseHeaders */]();\r\n                    if (responseHeadersString !== null) {\r\n                        var index = _indexOf(responseHeadersString[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](), RequestHeaders[8 /* eRequestHeaders.requestContextHeaderLowerCase */]);\r\n                        if (index !== -1) {\r\n                            var responseHeader = xhr.getResponseHeader(RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]);\r\n                            return correlationIdGetCorrelationContext(responseHeader);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternalWarning(_self, 18 /* _eInternalMessageId.FailedMonitorAjaxGetCorrelationHeader */, CORRELATION_HEADER_ERROR, (_a = {},\r\n                        _a[_DYN_AJAX_DIAGNOSTICS_MES16 /* @min:ajaxDiagnosticsMessage */] = _getFailedAjaxDiagnosticsMessage(xhr, _ajaxDataId),\r\n                        _a[_DYN_EXCEPTION /* @min:exception */] = dumpObj(e),\r\n                        _a));\r\n                }\r\n            }\r\n            function _createMarkId(type, ajaxData) {\r\n                if (ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] && _markPrefix && _enableAjaxPerfTracking) {\r\n                    var performance_1 = getPerformance();\r\n                    if (performance_1 && isFunction(performance_1.mark)) {\r\n                        _markCount++;\r\n                        var markId = _markPrefix + type + \"#\" + _markCount;\r\n                        performance_1.mark(markId);\r\n                        var entries = performance_1.getEntriesByName(markId);\r\n                        if (entries && entries[_DYN_LENGTH /* @min:%2elength */] === 1) {\r\n                            ajaxData[_DYN_PERF_MARK /* @min:%2eperfMark */] = entries[0];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _findPerfResourceEntry(initiatorType, ajaxData, trackCallback, reportError) {\r\n                var perfMark = ajaxData[_DYN_PERF_MARK /* @min:%2eperfMark */];\r\n                var performance = getPerformance();\r\n                var maxAttempts = _maxAjaxPerfLookupAttempts;\r\n                var retryDelay = _ajaxPerfLookupDelay;\r\n                var requestUrl = ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */];\r\n                var attempt = 0;\r\n                (function locateResourceTiming() {\r\n                    try {\r\n                        if (performance && perfMark) {\r\n                            attempt++;\r\n                            var perfTiming = null;\r\n                            var entries = performance.getEntries();\r\n                            for (var lp = entries[_DYN_LENGTH /* @min:%2elength */] - 1; lp >= 0; lp--) {\r\n                                var entry = entries[lp];\r\n                                if (entry) {\r\n                                    if (entry.entryType === \"resource\") {\r\n                                        if (entry.initiatorType === initiatorType &&\r\n                                            (_indexOf(entry[_DYN_NAME /* @min:%2ename */], requestUrl) !== -1 || _indexOf(requestUrl, entry[_DYN_NAME /* @min:%2ename */]) !== -1)) {\r\n                                            perfTiming = entry;\r\n                                        }\r\n                                    }\r\n                                    else if (entry.entryType === \"mark\" && entry[_DYN_NAME /* @min:%2ename */] === perfMark[_DYN_NAME /* @min:%2ename */]) {\r\n                                        // We hit the start event\r\n                                        ajaxData[_DYN_PERF_TIMING /* @min:%2eperfTiming */] = perfTiming;\r\n                                        break;\r\n                                    }\r\n                                    if (entry[_DYN_START_TIME /* @min:%2estartTime */] < perfMark[_DYN_START_TIME /* @min:%2estartTime */] - 1000) {\r\n                                        // Fallback to try and reduce the time spent looking for the perf entry\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!perfMark || // - we don't have a perfMark or\r\n                            ajaxData[_DYN_PERF_TIMING /* @min:%2eperfTiming */] || // - we have not found the perf entry or\r\n                            attempt >= maxAttempts || // - we have tried too many attempts or\r\n                            ajaxData.async === false) { // - this is a sync request\r\n                            if (perfMark && isFunction(performance.clearMarks)) {\r\n                                // Remove the mark so we don't fill up the performance resources too much\r\n                                performance.clearMarks(perfMark[_DYN_NAME /* @min:%2ename */]);\r\n                            }\r\n                            ajaxData.perfAttempts = attempt;\r\n                            // just continue and report the track event\r\n                            trackCallback();\r\n                        }\r\n                        else {\r\n                            // We need to wait for the browser to populate the window.performance entry\r\n                            // This needs to be at least 1ms as waiting <= 1 (on firefox) is not enough time for fetch or xhr,\r\n                            // this is a scheduling issue for the browser implementation\r\n                            scheduleTimeout(locateResourceTiming, retryDelay);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reportError(e);\r\n                    }\r\n                })();\r\n            }\r\n            function _createFetchRecord(input, init) {\r\n                var _a;\r\n                var distributedTraceCtx = _getDistributedTraceCtx();\r\n                var traceID = (distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_ID /* @min:%2egetTraceId */]()) || generateW3CId();\r\n                var spanID = strSubstr(generateW3CId(), 0, 16);\r\n                var ajaxData = new ajaxRecord(traceID, spanID, _self[strDiagLog](), (_a = _self.core) === null || _a === void 0 ? void 0 : _a.getTraceCtx());\r\n                ajaxData[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = distributedTraceCtx && distributedTraceCtx[_DYN_GET_TRACE_FLAGS /* @min:%2egetTraceFlags */]();\r\n                ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */] = dateTimeUtilsNow();\r\n                ajaxData[_DYN_ERROR_STATUS_TEXT /* @min:%2eerrorStatusText */] = _enableAjaxErrorStatusText;\r\n                var requestUrl;\r\n                if (input instanceof Request) {\r\n                    requestUrl = (input || {}).url || \"\";\r\n                }\r\n                else {\r\n                    requestUrl = input;\r\n                }\r\n                if (requestUrl === \"\") {\r\n                    var location_1 = getLocation();\r\n                    if (location_1 && location_1.href) {\r\n                        requestUrl = strSplit(location_1.href, \"#\")[0];\r\n                    }\r\n                }\r\n                ajaxData[_DYN_REQUEST_URL /* @min:%2erequestUrl */] = requestUrl;\r\n                var method = \"GET\";\r\n                if (init && init[_DYN_METHOD /* @min:%2emethod */]) {\r\n                    method = init[_DYN_METHOD /* @min:%2emethod */];\r\n                }\r\n                else if (input && input instanceof Request) {\r\n                    method = input[_DYN_METHOD /* @min:%2emethod */];\r\n                }\r\n                ajaxData[_DYN_METHOD /* @min:%2emethod */] = method;\r\n                var requestHeaders = {};\r\n                if (_enableRequestHeaderTracking) {\r\n                    var headers = new Headers((init ? init[_DYN_HEADERS /* @min:%2eheaders */] : 0) || (input instanceof Request ? (input[_DYN_HEADERS /* @min:%2eheaders */] || {}) : {}));\r\n                    headers.forEach(function (value, key) {\r\n                        if (_canIncludeHeaders(key)) {\r\n                            requestHeaders[key] = value;\r\n                        }\r\n                    });\r\n                }\r\n                ajaxData[_DYN_REQUEST_HEADERS /* @min:%2erequestHeaders */] = requestHeaders;\r\n                _createMarkId(STR_FETCH, ajaxData);\r\n                return ajaxData;\r\n            }\r\n            function _getFailedFetchDiagnosticsMessage(input) {\r\n                var result = \"\";\r\n                try {\r\n                    if (!isNullOrUndefined(input)) {\r\n                        if (typeof (input) === \"string\") {\r\n                            result += \"(url: '\".concat(input, \"')\");\r\n                        }\r\n                        else {\r\n                            result += \"(url: '\".concat(input.url, \"')\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternalCritical(_self, 15 /* _eInternalMessageId.FailedMonitorAjaxOpen */, \"Failed to grab failed fetch diagnostics message\", { exception: dumpObj(e) });\r\n                }\r\n                return result;\r\n            }\r\n            function _reportFetchMetrics(callDetails, status, input, response, ajaxData, getResponse, properties) {\r\n                if (!ajaxData) {\r\n                    return;\r\n                }\r\n                function _reportFetchError(msgId, e, failedProps) {\r\n                    var errorProps = failedProps || {};\r\n                    errorProps[\"fetchDiagnosticsMessage\"] = _getFailedFetchDiagnosticsMessage(input);\r\n                    if (e) {\r\n                        errorProps[\"exception\"] = dumpObj(e);\r\n                    }\r\n                    _throwInternalWarning(_self, msgId, FAILED_TO_CALCULATE_DURATION_ERROR + \"fetch call\" + ERROR_NOT_SENT, errorProps);\r\n                }\r\n                ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */] = dateTimeUtilsNow();\r\n                ajaxData[_DYN_STATUS /* @min:%2estatus */] = status;\r\n                _findPerfResourceEntry(STR_FETCH, ajaxData, function () {\r\n                    var dependency = ajaxData[_DYN__CREATE_TRACK_ITEM /* @min:%2eCreateTrackItem */](\"Fetch\", _enableRequestHeaderTracking, getResponse);\r\n                    var properties;\r\n                    try {\r\n                        if (!!_addRequestContext) {\r\n                            properties = _addRequestContext({ status: status, request: input, response: response });\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternalWarning(_self, 104 /* _eInternalMessageId.FailedAddingCustomDefinedRequestContext */, CUSTOM_REQUEST_CONTEXT_ERROR);\r\n                    }\r\n                    if (dependency) {\r\n                        if (properties !== undefined) {\r\n                            dependency[STR_PROPERTIES /* @min:%2eproperties */] = __assign(__assign({}, dependency.properties), properties);\r\n                        }\r\n                        var sysProperties = ajaxData[_DYN_GET_PART_APROPS /* @min:%2egetPartAProps */]();\r\n                        _reportDependencyInternal(_dependencyInitializers, _self[_DYN_CORE /* @min:%2ecore */], ajaxData, dependency, null, sysProperties);\r\n                    }\r\n                    else {\r\n                        _reportFetchError(14 /* _eInternalMessageId.FailedMonitorAjaxDur */, null, {\r\n                            requestSentTime: ajaxData[_DYN_REQUEST_SENT_TIME /* @min:%2erequestSentTime */],\r\n                            responseFinishedTime: ajaxData[_DYN_RESPONSE_FINISHED_TI14 /* @min:%2eresponseFinishedTime */]\r\n                        });\r\n                    }\r\n                }, function (e) {\r\n                    _reportFetchError(18 /* _eInternalMessageId.FailedMonitorAjaxGetCorrelationHeader */, e, null);\r\n                });\r\n            }\r\n            function _getFetchCorrelationContext(response) {\r\n                var _a;\r\n                if (response && response[_DYN_HEADERS /* @min:%2eheaders */]) {\r\n                    try {\r\n                        var responseHeader = response[_DYN_HEADERS /* @min:%2eheaders */].get(RequestHeaders[0 /* eRequestHeaders.requestContextHeader */]);\r\n                        return correlationIdGetCorrelationContext(responseHeader);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternalWarning(_self, 18 /* _eInternalMessageId.FailedMonitorAjaxGetCorrelationHeader */, CORRELATION_HEADER_ERROR, (_a = {\r\n                                fetchDiagnosticsMessage: _getFailedFetchDiagnosticsMessage(response)\r\n                            },\r\n                            _a[_DYN_EXCEPTION /* @min:exception */] = dumpObj(e),\r\n                            _a));\r\n                    }\r\n                }\r\n            }\r\n            function _reportDependencyInternal(initializers, core, ajaxData, dependency, properties, systemProperties) {\r\n                var _a;\r\n                var result = true;\r\n                var initializersCount = initializers[_DYN_LENGTH /* @min:%2elength */];\r\n                if (initializersCount > 0) {\r\n                    var details = (_a = {\r\n                            item: dependency\r\n                        },\r\n                        _a[STR_PROPERTIES /* @min:properties */] = properties,\r\n                        _a.sysProperties = systemProperties,\r\n                        _a.context = ajaxData ? ajaxData[_DYN_CONTEXT /* @min:%2econtext */] : null,\r\n                        _a.aborted = ajaxData ? !!ajaxData[_DYN_ABORTED /* @min:%2eaborted */] : false,\r\n                        _a);\r\n                    result = _processDependencyContainer(core, initializers, details, \"initializer\");\r\n                }\r\n                if (result) {\r\n                    _self[_DYN_TRACK_DEPENDENCY_DAT3 /* @min:%2etrackDependencyDataInternal */](dependency, properties, systemProperties);\r\n                }\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AjaxMonitor.prototype.initialize.\r\n    AjaxMonitor.prototype.processTelemetry = function (item, itemCtx) {\r\n        this.processNext(item, itemCtx);\r\n    };\r\n// Removed Stub for AjaxMonitor.prototype.trackDependencyData.\r\n// Removed Stub for AjaxMonitor.prototype.includeCorrelationHeaders.\r\n// Removed Stub for AjaxMonitor.prototype.addDependencyListener.\r\n    /**\r\n     * Add an dependency telemetry initializer callback function to allow populating additional properties or drop the request.\r\n     * It is called after the dependency call has completed and any available performance details are available. A dependency\r\n     * initializer is similar to the TelemetryInitializer function but it allows you to block the reporting of the dependency\r\n     * request so that it doesn't count against the `maxAjaxCallsPerView`.\r\n     * @param dependencyInitializer - The Dependency Telemetry Initializer function\r\n     * @returns - A IDependencyInitializerHandler to enable the initializer to be removed\r\n     */\r\n    AjaxMonitor.prototype.addDependencyInitializer = function (dependencyInitializer) {\r\n        return null;\r\n    };\r\n// Removed Stub for AjaxMonitor.prototype.trackDependencyDataInternal.\r\n    AjaxMonitor.identifier = \"AjaxDependencyPlugin\";\r\n    return AjaxMonitor;\r\n}(BaseTelemetryPlugin));\r\nexport { AjaxMonitor };\r\n//# sourceMappingURL=ajax.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { onConfigChange } from \"@microsoft/applicationinsights-core-js\";\r\nvar Version = '3.2.1';\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the internal telemetry data class.\r\n     */\r\n    function Internal(config, unloadHookContainer) {\r\n        var _this = this;\r\n        var unloadHook = onConfigChange((config), function () {\r\n            var prefix = config.sdkExtension;\r\n            _this.sdkVersion = (prefix ? prefix + \"_\" : \"\") + \"javascript:\" + Version;\r\n        });\r\n        unloadHookContainer && unloadHookContainer.add(unloadHook);\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SESSION_MANAGER = \"sessionManager\"; // Count: 3\r\nexport var _DYN_UPDATE = \"update\"; // Count: 4\r\nexport var _DYN_IS_USER_COOKIE_SET = \"isUserCookieSet\"; // Count: 4\r\nexport var _DYN_IS_NEW_USER = \"isNewUser\"; // Count: 4\r\nexport var _DYN_GET_TRACE_CTX = \"getTraceCtx\"; // Count: 3\r\nexport var _DYN_TELEMETRY_TRACE = \"telemetryTrace\"; // Count: 3\r\nexport var _DYN_APPLY_SESSION_CONTEX0 = \"applySessionContext\"; // Count: 2\r\nexport var _DYN_APPLY_APPLICATION_CO1 = \"applyApplicationContext\"; // Count: 2\r\nexport var _DYN_APPLY_DEVICE_CONTEXT = \"applyDeviceContext\"; // Count: 2\r\nexport var _DYN_APPLY_OPERATION_CONT2 = \"applyOperationContext\"; // Count: 2\r\nexport var _DYN_APPLY_USER_CONTEXT = \"applyUserContext\"; // Count: 2\r\nexport var _DYN_APPLY_OPERATING_SYST3 = \"applyOperatingSystemContxt\"; // Count: 2\r\nexport var _DYN_APPLY_LOCATION_CONTE4 = \"applyLocationContext\"; // Count: 2\r\nexport var _DYN_APPLY_INTERNAL_CONTE5 = \"applyInternalContext\"; // Count: 2\r\nexport var _DYN_ACCOUNT_ID = \"accountId\"; // Count: 7\r\nexport var _DYN_GET_SESSION_ID = \"getSessionId\"; // Count: 4\r\nexport var _DYN_NAME_PREFIX = \"namePrefix\"; // Count: 3\r\nexport var _DYN_SESSION_COOKIE_POSTF6 = \"sessionCookiePostfix\"; // Count: 2\r\nexport var _DYN_USER_COOKIE_POSTFIX = \"userCookiePostfix\"; // Count: 2\r\nexport var _DYN_ID_LENGTH = \"idLength\"; // Count: 4\r\nexport var _DYN_GET_NEW_ID = \"getNewId\"; // Count: 3\r\nexport var _DYN_LENGTH = \"length\"; // Count: 4\r\nexport var _DYN_AUTOMATIC_SESSION = \"automaticSession\"; // Count: 5\r\nexport var _DYN_AUTHENTICATED_ID = \"authenticatedId\"; // Count: 6\r\nexport var _DYN_ACQUISITION_DATE = \"acquisitionDate\"; // Count: 5\r\nexport var _DYN_RENEWAL_DATE = \"renewalDate\"; // Count: 4\r\nexport var _DYN_JOIN = \"join\"; // Count: 5\r\nexport var _DYN_COOKIE_SEPARATOR = \"cookieSeparator\"; // Count: 5\r\nexport var _DYN_AUTH_USER_COOKIE_NAM7 = \"authUserCookieName\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, dateNow, dumpObj, getExceptionName, isFunction, newId, onConfigChange, safeGetCookieMgr, safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_ACQUISITION_DATE, _DYN_AUTOMATIC_SESSION, _DYN_GET_NEW_ID, _DYN_ID_LENGTH, _DYN_JOIN, _DYN_LENGTH, _DYN_NAME_PREFIX, _DYN_RENEWAL_DATE, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nvar SESSION_COOKIE_NAME = \"ai_session\";\r\nvar ACQUISITION_SPAN = 86400000; // 24 hours in ms\r\nvar RENEWAL_SPAN = 1800000; // 30 minutes in ms\r\nvar COOKIE_UPDATE_INTERVAL = 60000; // 1 minute in ms\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, core, unloadHookContainer) {\r\n        var self = this;\r\n        var _storageNamePrefix;\r\n        var _cookieUpdatedTimestamp;\r\n        var _logger = safeGetLogger(core);\r\n        var _cookieManager = safeGetCookieMgr(core);\r\n        var _sessionExpirationMs;\r\n        var _sessionRenewalMs;\r\n        dynamicProto(_SessionManager, self, function (_self) {\r\n            if (!config) {\r\n                config = {};\r\n            }\r\n            var unloadHook = onConfigChange(config, function (details) {\r\n                _sessionExpirationMs = config.sessionExpirationMs || ACQUISITION_SPAN;\r\n                _sessionRenewalMs = config.sessionRenewalMs || RENEWAL_SPAN;\r\n                // sessionCookiePostfix takes the preference if it is configured, otherwise takes namePrefix if configured.\r\n                var sessionCookiePostfix = config.sessionCookiePostfix || config[_DYN_NAME_PREFIX /* @min:%2enamePrefix */] || \"\";\r\n                _storageNamePrefix = SESSION_COOKIE_NAME + sessionCookiePostfix;\r\n            });\r\n            unloadHookContainer && unloadHookContainer.add(unloadHook);\r\n            _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */] = new Session();\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function () {\r\n                // Always using Date getTime() as there is a bug in older IE instances that causes the performance timings to have the hi-bit set eg 0x800000000 causing\r\n                // the number to be incorrect.\r\n                var nowMs = dateNow();\r\n                var isExpired = false;\r\n                var session = _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */];\r\n                if (!session.id) {\r\n                    isExpired = !_initializeAutomaticSession(session, nowMs);\r\n                }\r\n                if (!isExpired && _sessionExpirationMs > 0) {\r\n                    var timeSinceAcqMs = nowMs - session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */];\r\n                    var timeSinceRenewalMs = nowMs - session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */];\r\n                    isExpired = timeSinceAcqMs < 0 || timeSinceRenewalMs < 0; // expired if the acquisition or last renewal are in the future\r\n                    isExpired = isExpired || timeSinceAcqMs > _sessionExpirationMs; // expired if the time since acquisition is more than session Expiration\r\n                    isExpired = isExpired || timeSinceRenewalMs > _sessionRenewalMs; // expired if the time since last renewal is more than renewal period\r\n                }\r\n                // renew if acquisitionSpan or renewalSpan has elapsed\r\n                if (isExpired) {\r\n                    // update automaticSession so session state has correct id\r\n                    _renew(nowMs);\r\n                }\r\n                else {\r\n                    // do not update the cookie more often than cookieUpdateInterval\r\n                    if (!_cookieUpdatedTimestamp || nowMs - _cookieUpdatedTimestamp > COOKIE_UPDATE_INTERVAL) {\r\n                        _setCookie(session, nowMs);\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             *  Record the current state of the automatic session and store it in our cookie string format\r\n             *  into the browser's local storage. This is used to restore the session data when the cookie\r\n             *  expires.\r\n             */\r\n            _self.backup = function () {\r\n                var session = _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */];\r\n                _setStorage(session.id, session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */], session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */]);\r\n            };\r\n            /**\r\n             * Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n             * initialize the automatic session.\r\n             * @returns true if values set otherwise false\r\n             */\r\n            function _initializeAutomaticSession(session, now) {\r\n                var isValid = false;\r\n                var cookieValue = _cookieManager.get(_storageNamePrefix);\r\n                if (cookieValue && isFunction(cookieValue.split)) {\r\n                    isValid = _initializeAutomaticSessionWithData(session, cookieValue);\r\n                }\r\n                else {\r\n                    // There's no cookie, but we might have session data in local storage\r\n                    // This can happen if the session expired or the user actively deleted the cookie\r\n                    // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n                    // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n                    var storageValue = utlGetLocalStorage(_logger, _storageNamePrefix);\r\n                    if (storageValue) {\r\n                        isValid = _initializeAutomaticSessionWithData(session, storageValue);\r\n                    }\r\n                }\r\n                return isValid || !!session.id;\r\n            }\r\n            /**\r\n             * Extract id, acquisitionDate, and renewalDate from an ai_session payload string and\r\n             * use this data to initialize automaticSession.\r\n             *\r\n             * @param sessionData - The string stored in an ai_session cookie or local storage backup\r\n             * @returns true if values set otherwise false\r\n             */\r\n            function _initializeAutomaticSessionWithData(session, sessionData) {\r\n                var isValid = false;\r\n                var sessionReset = \", session will be reset\";\r\n                var tokens = sessionData.split(\"|\");\r\n                if (tokens[_DYN_LENGTH /* @min:%2elength */] >= 2) {\r\n                    try {\r\n                        var acqMs = +tokens[1] || 0;\r\n                        var renewalMs = +tokens[2] || 0;\r\n                        if (isNaN(acqMs) || acqMs <= 0) {\r\n                            _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 27 /* _eInternalMessageId.SessionRenewalDateIsZero */, \"AI session acquisition date is 0\" + sessionReset);\r\n                        }\r\n                        else if (isNaN(renewalMs) || renewalMs <= 0) {\r\n                            _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 27 /* _eInternalMessageId.SessionRenewalDateIsZero */, \"AI session renewal date is 0\" + sessionReset);\r\n                        }\r\n                        else if (tokens[0]) {\r\n                            // Everything looks valid so set the values\r\n                            session.id = tokens[0];\r\n                            session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */] = acqMs;\r\n                            session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */] = renewalMs;\r\n                            isValid = true;\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 9 /* _eInternalMessageId.ErrorParsingAISessionCookie */, \"Error parsing ai_session value [\" + (sessionData || \"\") + \"]\" + sessionReset + \" - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n                return isValid;\r\n            }\r\n            function _renew(nowMs) {\r\n                var getNewId = config[_DYN_GET_NEW_ID /* @min:%2egetNewId */] || newId;\r\n                _self.automaticSession.id = getNewId(config[_DYN_ID_LENGTH /* @min:%2eidLength */] || 22);\r\n                _self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */][_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */] = nowMs;\r\n                _setCookie(_self[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */], nowMs);\r\n                // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n                if (!utlCanUseLocalStorage()) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 0 /* _eInternalMessageId.BrowserDoesNotSupportLocalStorage */, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n                }\r\n            }\r\n            function _setCookie(session, nowMs) {\r\n                var acq = session[_DYN_ACQUISITION_DATE /* @min:%2eacquisitionDate */];\r\n                session[_DYN_RENEWAL_DATE /* @min:%2erenewalDate */] = nowMs;\r\n                var renewalPeriodMs = _sessionRenewalMs;\r\n                // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n                // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n                var acqTimeLeftMs = (acq + _sessionExpirationMs) - nowMs;\r\n                var cookie = [session.id, acq, nowMs];\r\n                var maxAgeSec = 0;\r\n                if (acqTimeLeftMs < renewalPeriodMs) {\r\n                    maxAgeSec = acqTimeLeftMs / 1000;\r\n                }\r\n                else {\r\n                    maxAgeSec = renewalPeriodMs / 1000;\r\n                }\r\n                var cookieDomain = config.cookieDomain || null;\r\n                // if sessionExpirationMs is set to 0, it means the expiry is set to 0 for this session cookie\r\n                // A cookie with 0 expiry in the session cookie will never expire for that browser session.  If the browser is closed the cookie expires.\r\n                // Depending on the browser, another instance does not inherit this cookie, however, another tab will\r\n                _cookieManager.set(_storageNamePrefix, cookie[_DYN_JOIN /* @min:%2ejoin */](\"|\"), _sessionExpirationMs > 0 ? maxAgeSec : null, cookieDomain);\r\n                _cookieUpdatedTimestamp = nowMs;\r\n            }\r\n            function _setStorage(guid, acq, renewal) {\r\n                // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n                // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n                // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n                utlSetLocalStorage(_logger, _storageNamePrefix, [guid, acq, renewal][_DYN_JOIN /* @min:%2ejoin */](\"|\"));\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for _SessionManager.prototype.update.\r\n// Removed Stub for _SessionManager.prototype.backup.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    _SessionManager.__ieDyn=1;\n\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { generateW3CId, getLocation } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name, logger) {\r\n        var _self = this;\r\n        _self.traceID = id || generateW3CId();\r\n        _self.parentID = parentId;\r\n        var location = getLocation();\r\n        if (!name && location && location.pathname) {\r\n            name = location.pathname;\r\n        }\r\n        _self.name = dataSanitizeString(logger, name);\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlRemoveStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, newId, onConfigChange, safeGetCookieMgr, safeGetLogger, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ACCOUNT_ID, _DYN_AUTHENTICATED_ID, _DYN_AUTH_USER_COOKIE_NAM7, _DYN_COOKIE_SEPARATOR, _DYN_GET_NEW_ID, _DYN_ID_LENGTH, _DYN_IS_NEW_USER, _DYN_IS_USER_COOKIE_SET, _DYN_JOIN, _DYN_LENGTH, _DYN_NAME_PREFIX, _DYN_UPDATE, _DYN_USER_COOKIE_POSTFIX } from \"../__DynamicConstants\";\r\nfunction _validateUserInput(id) {\r\n    // Validate:\r\n    // 1. Id is a non-empty string.\r\n    // 2. It does not contain special characters for cookies.\r\n    if (typeof id !== \"string\" ||\r\n        !id ||\r\n        id.match(/,|;|=| |\\|/)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nvar User = /** @class */ (function () {\r\n    function User(config, core, unloadHookContainer) {\r\n        /**\r\n         * A flag indicating whether this represents a new user\r\n         */\r\n        this.isNewUser = false;\r\n        /**\r\n         * A flag indicating whether the user cookie has been set\r\n         */\r\n        this.isUserCookieSet = false;\r\n        var _logger = safeGetLogger(core);\r\n        var _cookieManager = safeGetCookieMgr(core);\r\n        var _storageNamePrefix;\r\n        dynamicProto(User, this, function (_self) {\r\n            // Define _self.config\r\n            objDefine(_self, \"config\", {\r\n                g: function () { return config; }\r\n            });\r\n            var unloadHook = onConfigChange(config, function () {\r\n                var userCookiePostfix = config[_DYN_USER_COOKIE_POSTFIX /* @min:%2euserCookiePostfix */] || \"\";\r\n                _storageNamePrefix = User.userCookieName + userCookiePostfix;\r\n                // get userId or create new one if none exists\r\n                var cookie = _cookieManager.get(_storageNamePrefix);\r\n                if (cookie) {\r\n                    _self[_DYN_IS_NEW_USER /* @min:%2eisNewUser */] = false;\r\n                    var params = cookie.split(User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]);\r\n                    if (params[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _self.id = params[0];\r\n                        // we already have a cookie\r\n                        _self[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */] = !!_self.id;\r\n                    }\r\n                }\r\n                if (!_self.id) {\r\n                    _self.id = _generateNewId();\r\n                    var newCookie = _generateNewCookie(_self.id);\r\n                    _setUserCookie(newCookie[_DYN_JOIN /* @min:%2ejoin */](User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]));\r\n                    // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n                    // We should respect their wishes and clear ourselves from local storage\r\n                    var name_1 = (config[_DYN_NAME_PREFIX /* @min:%2enamePrefix */] || \"\") + \"ai_session\";\r\n                    utlRemoveStorage(_logger, name_1);\r\n                }\r\n                // We still take the account id from the ctor param for backward compatibility.\r\n                // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n                _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = config[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] || undefined;\r\n                // Get the auth user id and account id from the cookie if exists\r\n                // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n                var authCookie = _cookieManager.get(User[_DYN_AUTH_USER_COOKIE_NAM7 /* @min:%2eauthUserCookieName */]);\r\n                if (authCookie) {\r\n                    authCookie = decodeURI(authCookie);\r\n                    var authCookieString = authCookie.split(User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]);\r\n                    if (authCookieString[0]) {\r\n                        _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */] = authCookieString[0];\r\n                    }\r\n                    if (authCookieString[_DYN_LENGTH /* @min:%2elength */] > 1 && authCookieString[1]) {\r\n                        _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = authCookieString[1];\r\n                    }\r\n                }\r\n            });\r\n            unloadHookContainer && unloadHookContainer.add(unloadHook);\r\n            function _generateNewId() {\r\n                var theConfig = (config || {});\r\n                var getNewId = theConfig[_DYN_GET_NEW_ID /* @min:%2egetNewId */] || newId;\r\n                var id = getNewId(theConfig[_DYN_ID_LENGTH /* @min:%2eidLength */] ? config[_DYN_ID_LENGTH /* @min:%2eidLength */] : 22);\r\n                return id;\r\n            }\r\n            function _generateNewCookie(userId) {\r\n                var acqStr = toISOString(new Date());\r\n                _self.accountAcquisitionDate = acqStr;\r\n                _self[_DYN_IS_NEW_USER /* @min:%2eisNewUser */] = true;\r\n                var newCookie = [userId, acqStr];\r\n                return newCookie;\r\n            }\r\n            function _setUserCookie(cookie) {\r\n                // without expiration, cookies expire at the end of the session\r\n                // set it to 365 days from now\r\n                // 365 * 24 * 60 * 60 = 31536000\r\n                var oneYear = 31536000;\r\n                _self[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */] = _cookieManager.set(_storageNamePrefix, cookie, oneYear);\r\n            }\r\n            _self.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n                if (storeInCookie === void 0) { storeInCookie = false; }\r\n                // Validate inputs to ensure no cookie control characters.\r\n                var isInvalidInput = !_validateUserInput(authenticatedUserId) || (accountId && !_validateUserInput(accountId));\r\n                if (isInvalidInput) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 60 /* _eInternalMessageId.SetAuthContextFailedAccountName */, \"Setting auth user context failed. \" +\r\n                        \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n                    return;\r\n                }\r\n                // Create cookie string.\r\n                _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */] = authenticatedUserId;\r\n                var authCookie = _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */];\r\n                if (accountId) {\r\n                    _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = accountId;\r\n                    authCookie = [_self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */], _self.accountId][_DYN_JOIN /* @min:%2ejoin */](User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]);\r\n                }\r\n                if (storeInCookie) {\r\n                    // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n                    // Encoding the cookie to handle unexpected unicode characters.\r\n                    _cookieManager.set(User[_DYN_AUTH_USER_COOKIE_NAM7 /* @min:%2eauthUserCookieName */], encodeURI(authCookie));\r\n                }\r\n            };\r\n            /**\r\n             * Clears the authenticated user id and the account id from the user context.\r\n             * @returns {}\r\n             */\r\n            _self.clearAuthenticatedUserContext = function () {\r\n                _self[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */] = null;\r\n                _self[_DYN_ACCOUNT_ID /* @min:%2eaccountId */] = null;\r\n                _cookieManager.del(User[_DYN_AUTH_USER_COOKIE_NAM7 /* @min:%2eauthUserCookieName */]);\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (userId) {\r\n                // Optimizations to avoid setting and processing the cookie when not needed\r\n                if (_self.id !== userId || !_self[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */]) {\r\n                    var user_id = userId ? userId : _generateNewId();\r\n                    var user_cookie = _generateNewCookie(user_id);\r\n                    _setUserCookie(user_cookie[_DYN_JOIN /* @min:%2ejoin */](User[_DYN_COOKIE_SEPARATOR /* @min:%2ecookieSeparator */]));\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for User.prototype.setAuthenticatedUserContext.\r\n// Removed Stub for User.prototype.clearAuthenticatedUserContext.\r\n// Removed Stub for User.prototype.update.\r\n    User.cookieSeparator = \"|\";\r\n    User.userCookieName = \"ai_user\";\r\n    User.authUserCookieName = \"ai_authUser\";\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* TelemetryContext.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { CtxTagKeys, Extensions, PageView, dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { _InternalLogMessage, getSetValue, hasWindow, isNullOrUndefined, isString, objKeys, setValue } from \"@microsoft/applicationinsights-core-js\";\r\nimport { Application } from \"./Context/Application\";\r\nimport { Device } from \"./Context/Device\";\r\nimport { Internal } from \"./Context/Internal\";\r\nimport { Location } from \"./Context/Location\";\r\nimport { Session, _SessionManager } from \"./Context/Session\";\r\nimport { TelemetryTrace } from \"./Context/TelemetryTrace\";\r\nimport { User } from \"./Context/User\";\r\nimport { _DYN_ACCOUNT_ID, _DYN_APPLY_APPLICATION_CO1, _DYN_APPLY_DEVICE_CONTEXT, _DYN_APPLY_INTERNAL_CONTE5, _DYN_APPLY_LOCATION_CONTE4, _DYN_APPLY_OPERATING_SYST3, _DYN_APPLY_OPERATION_CONT2, _DYN_APPLY_SESSION_CONTEX0, _DYN_APPLY_USER_CONTEXT, _DYN_AUTHENTICATED_ID, _DYN_AUTOMATIC_SESSION, _DYN_GET_SESSION_ID, _DYN_LENGTH, _DYN_SESSION_MANAGER, _DYN_TELEMETRY_TRACE } from \"./__DynamicConstants\";\r\nvar strExt = \"ext\";\r\nvar strTags = \"tags\";\r\nfunction _removeEmpty(target, name) {\r\n    if (target && target[name] && objKeys(target[name])[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n        delete target[name];\r\n    }\r\n}\r\nfunction _nullResult() {\r\n    return null;\r\n}\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(core, defaultConfig, previousTraceCtx, unloadHookContainer) {\r\n        var _this = this;\r\n        var logger = core.logger;\r\n        dynamicProto(TelemetryContext, this, function (_self) {\r\n            _self.appId = _nullResult;\r\n            _self[_DYN_GET_SESSION_ID /* @min:%2egetSessionId */] = _nullResult;\r\n            _self.application = new Application();\r\n            _self.internal = new Internal(defaultConfig, unloadHookContainer);\r\n            if (hasWindow()) {\r\n                _self[_DYN_SESSION_MANAGER /* @min:%2esessionManager */] = new _SessionManager(defaultConfig, core, unloadHookContainer);\r\n                _self.device = new Device();\r\n                _self.location = new Location();\r\n                _self.user = new User(defaultConfig, core, unloadHookContainer);\r\n                var traceId = void 0;\r\n                var parentId = void 0;\r\n                var name_1;\r\n                if (previousTraceCtx) {\r\n                    traceId = previousTraceCtx.getTraceId();\r\n                    parentId = previousTraceCtx.getSpanId();\r\n                    name_1 = previousTraceCtx.getName();\r\n                }\r\n                _self[_DYN_TELEMETRY_TRACE /* @min:%2etelemetryTrace */] = new TelemetryTrace(traceId, parentId, name_1, logger);\r\n                _self.session = new Session();\r\n            }\r\n            _self[_DYN_GET_SESSION_ID /* @min:%2egetSessionId */] = function () {\r\n                var session = _self.session;\r\n                var sesId = null;\r\n                // If customer set session info, apply their context; otherwise apply context automatically generated\r\n                if (session && isString(session.id)) {\r\n                    sesId = session.id;\r\n                }\r\n                else {\r\n                    // Gets the automatic session if it exists or an empty object\r\n                    var autoSession = (_self[_DYN_SESSION_MANAGER /* @min:%2esessionManager */] || {})[_DYN_AUTOMATIC_SESSION /* @min:%2eautomaticSession */];\r\n                    sesId = autoSession && isString(autoSession.id) ? autoSession.id : null;\r\n                }\r\n                return sesId;\r\n            };\r\n            _self[_DYN_APPLY_SESSION_CONTEX0 /* @min:%2eapplySessionContext */] = function (evt, itemCtx) {\r\n                setValue(getSetValue(evt.ext, Extensions.AppExt), \"sesId\", _self[_DYN_GET_SESSION_ID /* @min:%2egetSessionId */](), isString);\r\n            };\r\n            _self[_DYN_APPLY_OPERATING_SYST3 /* @min:%2eapplyOperatingSystemContxt */] = function (evt, itemCtx) {\r\n                setValue(evt.ext, Extensions.OSExt, _self.os);\r\n            };\r\n            _self[_DYN_APPLY_APPLICATION_CO1 /* @min:%2eapplyApplicationContext */] = function (evt, itemCtx) {\r\n                var application = _self.application;\r\n                if (application) {\r\n                    // evt.ext.app\r\n                    var tags = getSetValue(evt, strTags);\r\n                    setValue(tags, CtxTagKeys.applicationVersion, application.ver, isString);\r\n                    setValue(tags, CtxTagKeys.applicationBuild, application.build, isString);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_DEVICE_CONTEXT /* @min:%2eapplyDeviceContext */] = function (evt, itemCtx) {\r\n                var device = _self.device;\r\n                if (device) {\r\n                    // evt.ext.device\r\n                    var extDevice = getSetValue(getSetValue(evt, strExt), Extensions.DeviceExt);\r\n                    setValue(extDevice, \"localId\", device.id, isString);\r\n                    setValue(extDevice, \"ip\", device.ip, isString);\r\n                    setValue(extDevice, \"model\", device.model, isString);\r\n                    setValue(extDevice, \"deviceClass\", device.deviceClass, isString);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_INTERNAL_CONTE5 /* @min:%2eapplyInternalContext */] = function (evt, itemCtx) {\r\n                var internal = _self.internal;\r\n                if (internal) {\r\n                    var tags = getSetValue(evt, strTags);\r\n                    setValue(tags, CtxTagKeys.internalAgentVersion, internal.agentVersion, isString); // not mapped in CS 4.0\r\n                    setValue(tags, CtxTagKeys.internalSdkVersion, dataSanitizeString(logger, internal.sdkVersion, 64), isString);\r\n                    if (evt.baseType === _InternalLogMessage.dataType || evt.baseType === PageView.dataType) {\r\n                        setValue(tags, CtxTagKeys.internalSnippet, internal.snippetVer, isString);\r\n                        setValue(tags, CtxTagKeys.internalSdkSrc, internal.sdkSrc, isString);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_LOCATION_CONTE4 /* @min:%2eapplyLocationContext */] = function (evt, itemCtx) {\r\n                var location = _this.location;\r\n                if (location) {\r\n                    setValue(getSetValue(evt, strTags, []), CtxTagKeys.locationIp, location.ip, isString);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_OPERATION_CONT2 /* @min:%2eapplyOperationContext */] = function (evt, itemCtx) {\r\n                var telemetryTrace = _self[_DYN_TELEMETRY_TRACE /* @min:%2etelemetryTrace */];\r\n                if (telemetryTrace) {\r\n                    var extTrace = getSetValue(getSetValue(evt, strExt), Extensions.TraceExt, { traceID: undefined, parentID: undefined });\r\n                    setValue(extTrace, \"traceID\", telemetryTrace.traceID, isString, isNullOrUndefined);\r\n                    setValue(extTrace, \"name\", telemetryTrace.name, isString, isNullOrUndefined);\r\n                    setValue(extTrace, \"parentID\", telemetryTrace.parentID, isString, isNullOrUndefined);\r\n                }\r\n            };\r\n            _self.applyWebContext = function (evt, itemCtx) {\r\n                var web = _this.web;\r\n                if (web) {\r\n                    setValue(getSetValue(evt, strExt), Extensions.WebExt, web);\r\n                }\r\n            };\r\n            _self[_DYN_APPLY_USER_CONTEXT /* @min:%2eapplyUserContext */] = function (evt, itemCtx) {\r\n                var user = _self.user;\r\n                if (user) {\r\n                    var tags = getSetValue(evt, strTags, []);\r\n                    // stays in tags\r\n                    setValue(tags, CtxTagKeys.userAccountId, user[_DYN_ACCOUNT_ID /* @min:%2eaccountId */], isString);\r\n                    // CS 4.0\r\n                    var extUser = getSetValue(getSetValue(evt, strExt), Extensions.UserExt);\r\n                    setValue(extUser, \"id\", user.id, isString);\r\n                    setValue(extUser, \"authId\", user[_DYN_AUTHENTICATED_ID /* @min:%2eauthenticatedId */], isString);\r\n                }\r\n            };\r\n            _self.cleanUp = function (evt, itemCtx) {\r\n                var ext = evt.ext;\r\n                if (ext) {\r\n                    _removeEmpty(ext, Extensions.DeviceExt);\r\n                    _removeEmpty(ext, Extensions.UserExt);\r\n                    _removeEmpty(ext, Extensions.WebExt);\r\n                    _removeEmpty(ext, Extensions.OSExt);\r\n                    _removeEmpty(ext, Extensions.AppExt);\r\n                    _removeEmpty(ext, Extensions.TraceExt);\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for TelemetryContext.prototype.applySessionContext.\r\n// Removed Stub for TelemetryContext.prototype.applyOperatingSystemContxt.\r\n// Removed Stub for TelemetryContext.prototype.applyApplicationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyDeviceContext.\r\n// Removed Stub for TelemetryContext.prototype.applyInternalContext.\r\n// Removed Stub for TelemetryContext.prototype.applyLocationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyOperationContext.\r\n// Removed Stub for TelemetryContext.prototype.applyWebContext.\r\n// Removed Stub for TelemetryContext.prototype.applyUserContext.\r\n// Removed Stub for TelemetryContext.prototype.cleanUp.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    TelemetryContext.__ieDyn=1;\n\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Properties Plugin, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* PropertiesPlugin.ts\r\n* @copyright Microsoft 2018\r\n*/\r\nvar _a;\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BreezeChannelIdentifier, PageView, PropertiesPluginIdentifier, createDistributedTraceContextFromTrace, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, _InternalLogMessage, _logInternalMessage, createProcessTelemetryContext, getNavigator, getSetValue, isNullOrUndefined, onConfigChange } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDeepFreeze, objDefine } from \"@nevware21/ts-utils\";\r\nimport { TelemetryContext } from \"./TelemetryContext\";\r\nimport { _DYN_ACCOUNT_ID, _DYN_APPLY_APPLICATION_CO1, _DYN_APPLY_DEVICE_CONTEXT, _DYN_APPLY_INTERNAL_CONTE5, _DYN_APPLY_LOCATION_CONTE4, _DYN_APPLY_OPERATING_SYST3, _DYN_APPLY_OPERATION_CONT2, _DYN_APPLY_SESSION_CONTEX0, _DYN_APPLY_USER_CONTEXT, _DYN_GET_NEW_ID, _DYN_GET_SESSION_ID, _DYN_GET_TRACE_CTX, _DYN_ID_LENGTH, _DYN_IS_NEW_USER, _DYN_IS_USER_COOKIE_SET, _DYN_NAME_PREFIX, _DYN_SESSION_COOKIE_POSTF6, _DYN_SESSION_MANAGER, _DYN_TELEMETRY_TRACE, _DYN_UPDATE, _DYN_USER_COOKIE_POSTFIX } from \"./__DynamicConstants\";\r\nvar undefString;\r\nvar nullValue = null;\r\nvar _defaultConfig = objDeepFreeze((_a = {},\r\n    _a[_DYN_ACCOUNT_ID /* @min:accountId */] = nullValue,\r\n    _a.sessionRenewalMs = 30 * 60 * 1000,\r\n    _a.samplingPercentage = 100,\r\n    _a.sessionExpirationMs = 24 * 60 * 60 * 1000,\r\n    _a.cookieDomain = nullValue,\r\n    _a.sdkExtension = nullValue,\r\n    _a.isBrowserLinkTrackingEnabled = false,\r\n    _a.appId = nullValue,\r\n    _a[_DYN_GET_SESSION_ID /* @min:getSessionId */] = nullValue,\r\n    _a[_DYN_NAME_PREFIX /* @min:namePrefix */] = undefString,\r\n    _a[_DYN_SESSION_COOKIE_POSTF6 /* @min:sessionCookiePostfix */] = undefString,\r\n    _a[_DYN_USER_COOKIE_POSTFIX /* @min:userCookiePostfix */] = undefString,\r\n    _a[_DYN_ID_LENGTH /* @min:idLength */] = 22,\r\n    _a[_DYN_GET_NEW_ID /* @min:getNewId */] = nullValue,\r\n    _a));\r\nvar PropertiesPlugin = /** @class */ (function (_super) {\r\n    __extends(PropertiesPlugin, _super);\r\n    function PropertiesPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 110;\r\n        _this.identifier = PropertiesPluginIdentifier;\r\n        var _extensionConfig;\r\n        var _distributedTraceCtx;\r\n        var _previousTraceCtx;\r\n        var _context;\r\n        var _disableUserInitMessage;\r\n        dynamicProto(PropertiesPlugin, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            objDefine(_self, \"context\", {\r\n                g: function () {\r\n                    return _context;\r\n                }\r\n            });\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                _populateDefaults(config);\r\n            };\r\n            /**\r\n             * Add Part A fields to the event\r\n             * @param event - The event that needs to be processed\r\n             */\r\n            _self.processTelemetry = function (event, itemCtx) {\r\n                if (!isNullOrUndefined(event)) {\r\n                    itemCtx = _self._getTelCtx(itemCtx);\r\n                    // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n                    if (event.name === PageView.envelopeType) {\r\n                        itemCtx.diagLog().resetInternalMessageCount();\r\n                    }\r\n                    var theContext = (_context || {});\r\n                    if (theContext.session) {\r\n                        // If customer did not provide custom session id update the session manager\r\n                        if (typeof _context.session.id !== \"string\" && theContext[_DYN_SESSION_MANAGER /* @min:%2esessionManager */]) {\r\n                            theContext[_DYN_SESSION_MANAGER /* @min:%2esessionManager */][_DYN_UPDATE /* @min:%2eupdate */]();\r\n                        }\r\n                    }\r\n                    var userCtx = theContext.user;\r\n                    if (userCtx && !userCtx[_DYN_IS_USER_COOKIE_SET /* @min:%2eisUserCookieSet */]) {\r\n                        userCtx[_DYN_UPDATE /* @min:%2eupdate */](theContext.user.id);\r\n                    }\r\n                    _processTelemetryInternal(event, itemCtx);\r\n                    if (userCtx && userCtx[_DYN_IS_NEW_USER /* @min:%2eisNewUser */]) {\r\n                        userCtx[_DYN_IS_NEW_USER /* @min:%2eisNewUser */] = false;\r\n                        if (!_disableUserInitMessage) {\r\n                            var message = new _InternalLogMessage(72 /* _eInternalMessageId.SendBrowserInfoOnUserInit */, ((getNavigator() || {}).userAgent || \"\"));\r\n                            _logInternalMessage(itemCtx.diagLog(), 1 /* eLoggingSeverity.CRITICAL */, message);\r\n                        }\r\n                    }\r\n                    _self.processNext(event, itemCtx);\r\n                }\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                var core = (unloadCtx || {}).core();\r\n                if (core && core[_DYN_GET_TRACE_CTX /* @min:%2egetTraceCtx */]) {\r\n                    var traceCtx = core[_DYN_GET_TRACE_CTX /* @min:%2egetTraceCtx */](false);\r\n                    if (traceCtx === _distributedTraceCtx) {\r\n                        core.setTraceCtx(_previousTraceCtx);\r\n                    }\r\n                }\r\n                _initDefaults();\r\n            };\r\n            function _initDefaults() {\r\n                _extensionConfig = null;\r\n                _distributedTraceCtx = null;\r\n                _previousTraceCtx = null;\r\n                _context = null;\r\n                _disableUserInitMessage = true;\r\n            }\r\n            function _populateDefaults(config) {\r\n                var identifier = _self.identifier;\r\n                var core = _self.core;\r\n                // This function will be re-called whenever any referenced configuration is changed\r\n                _self._addHook(onConfigChange(config, function () {\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    _disableUserInitMessage = config.disableUserInitMessage === false ? false : true;\r\n                    _extensionConfig = ctx.getExtCfg(identifier, _defaultConfig);\r\n                    // Test hook to allow accessing the internal values -- explicitly not defined as an available property on the class\r\n                    _self[\"_extConfig\"] = _extensionConfig;\r\n                }));\r\n                // This is outside of the onConfigChange as we don't want to update (replace) these values whenever a referenced config item changes\r\n                _previousTraceCtx = core[_DYN_GET_TRACE_CTX /* @min:%2egetTraceCtx */](false);\r\n                _context = new TelemetryContext(core, _extensionConfig, _previousTraceCtx, _self._unloadHooks);\r\n                _distributedTraceCtx = createDistributedTraceContextFromTrace(_self.context[_DYN_TELEMETRY_TRACE /* @min:%2etelemetryTrace */], _previousTraceCtx);\r\n                core.setTraceCtx(_distributedTraceCtx);\r\n                _self.context.appId = function () {\r\n                    var breezeChannel = core.getPlugin(BreezeChannelIdentifier);\r\n                    return breezeChannel ? breezeChannel.plugin[\"_appId\"] : null;\r\n                };\r\n            }\r\n            function _processTelemetryInternal(evt, itemCtx) {\r\n                // Set Part A fields\r\n                getSetValue(evt, \"tags\", []);\r\n                getSetValue(evt, \"ext\", {});\r\n                var ctx = _self.context;\r\n                ctx[_DYN_APPLY_SESSION_CONTEX0 /* @min:%2eapplySessionContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_APPLICATION_CO1 /* @min:%2eapplyApplicationContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_DEVICE_CONTEXT /* @min:%2eapplyDeviceContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_OPERATION_CONT2 /* @min:%2eapplyOperationContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_USER_CONTEXT /* @min:%2eapplyUserContext */](evt, itemCtx);\r\n                ctx[_DYN_APPLY_OPERATING_SYST3 /* @min:%2eapplyOperatingSystemContxt */](evt, itemCtx);\r\n                ctx.applyWebContext(evt, itemCtx);\r\n                ctx[_DYN_APPLY_LOCATION_CONTE4 /* @min:%2eapplyLocationContext */](evt, itemCtx); // legacy tags\r\n                ctx[_DYN_APPLY_INTERNAL_CONTE5 /* @min:%2eapplyInternalContext */](evt, itemCtx); // legacy tags\r\n                ctx.cleanUp(evt, itemCtx);\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for PropertiesPlugin.prototype.initialize.\r\n// Removed Stub for PropertiesPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PropertiesPlugin.__ieDyn=1;\n\n    return PropertiesPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a, _b, _c, _d;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AnalyticsPlugin } from \"@microsoft/applicationinsights-analytics-js\";\r\nimport { CfgSyncPlugin } from \"@microsoft/applicationinsights-cfgsync-js\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { AnalyticsPluginIdentifier, DEFAULT_BREEZE_PATH, PropertiesPluginIdentifier, ThrottleMgr, parseConnectionString } from \"@microsoft/applicationinsights-common\";\r\nimport { AppInsightsCore, _throwInternal, addPageHideEventListener, addPageUnloadEventListener, cfgDfMerge, cfgDfValidate, createDynamicConfig, createProcessTelemetryContext, createUniqueNamespace, doPerf, hasDocument, hasWindow, isArray, isFeatureEnabled, isFunction, isNullOrUndefined, isReactNative, isString, mergeEvtNamespace, onConfigChange, proxyAssign, proxyFunctions, removePageHideEventListener, removePageUnloadEventListener } from \"@microsoft/applicationinsights-core-js\";\r\nimport { AjaxPlugin as DependenciesPlugin } from \"@microsoft/applicationinsights-dependencies-js\";\r\nimport { PropertiesPlugin } from \"@microsoft/applicationinsights-properties-js\";\r\nimport { createPromise } from \"@nevware21/ts-async\";\r\nimport { arrForEach, arrIndexOf, objDefine, objForEachKey, strIndexOf, throwUnsupported } from \"@nevware21/ts-utils\";\r\nimport { CONFIG_ENDPOINT_URL, STR_ADD_TELEMETRY_INITIALIZER, STR_CLEAR_AUTHENTICATED_USER_CONTEXT, STR_EVT_NAMESPACE, STR_FLUSH, STR_GET_COOKIE_MGR, STR_GET_PLUGIN, STR_POLL_INTERNAL_LOGS, STR_SET_AUTHENTICATED_USER_CONTEXT, STR_SNIPPET, STR_START_TRACK_EVENT, STR_START_TRACK_PAGE, STR_STOP_TRACK_EVENT, STR_STOP_TRACK_PAGE, STR_TRACK_DEPENDENCY_DATA, STR_TRACK_EVENT, STR_TRACK_EXCEPTION, STR_TRACK_METRIC, STR_TRACK_PAGE_VIEW, STR_TRACK_TRACE } from \"./InternalConstants\";\r\nimport { _DYN_ADD_HOUSEKEEPING_BEF1, _DYN_CONNECTION_STRING, _DYN_CONTEXT, _DYN_ENDPOINT_URL, _DYN_INSTRUMENTATION_KEY, _DYN_ONUNLOAD_FLUSH, _DYN_QUEUE, _DYN_SEND_MESSAGE, _DYN_UPDATE_SNIPPET_DEFIN2, _DYN_USER_OVERRIDE_ENDPOI0, _DYN_VERSION } from \"./__DynamicConstants\";\r\nvar _internalSdkSrc;\r\n// This is an exclude list of properties that should not be updated during initialization\r\n// They include a combination of private and internal property names\r\nvar _ignoreUpdateSnippetProperties = [\r\n    STR_SNIPPET, \"dependencies\", \"properties\", \"_snippetVersion\", \"appInsightsNew\", \"getSKUDefaults\"\r\n];\r\nvar IKEY_USAGE = \"iKeyUsage\";\r\nvar CDN_USAGE = \"CdnUsage\";\r\nvar SDK_LOADER_VER = \"SdkLoaderVer\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar default_limit = {\r\n    samplingRate: 100,\r\n    maxSendNumber: 1\r\n};\r\nvar default_interval = {\r\n    monthInterval: 3,\r\n    daysOfMonth: [28]\r\n};\r\nvar default_throttle_config = {\r\n    disabled: true,\r\n    limit: cfgDfMerge(default_limit),\r\n    interval: cfgDfMerge(default_interval)\r\n};\r\n// We need to include all properties that we only reference that we want to be dynamically updatable here\r\n// So they are converted even when not specified in the passed configuration\r\nvar defaultConfigValues = (_a = {},\r\n    _a[_DYN_CONNECTION_STRING /* @min:connectionString */] = UNDEFINED_VALUE,\r\n    _a[_DYN_ENDPOINT_URL /* @min:endpointUrl */] = UNDEFINED_VALUE,\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a[_DYN_USER_OVERRIDE_ENDPOI0 /* @min:userOverrideEndpointUrl */] = UNDEFINED_VALUE,\r\n    _a.diagnosticLogInterval = cfgDfValidate(_chkDiagLevel, 10000),\r\n    _a.featureOptIn = (_b = {},\r\n        _b[IKEY_USAGE] = { mode: 3 /* FeatureOptInMode.enable */ },\r\n        _b[CDN_USAGE] = { mode: 2 /* FeatureOptInMode.disable */ },\r\n        _b[SDK_LOADER_VER] = { mode: 2 /* FeatureOptInMode.disable */ },\r\n        _b),\r\n    _a.throttleMgrCfg = cfgDfMerge((_c = {},\r\n        _c[109 /* _eInternalMessageId.DefaultThrottleMsgKey */] = cfgDfMerge(default_throttle_config),\r\n        _c[106 /* _eInternalMessageId.InstrumentationKeyDeprecation */] = cfgDfMerge(default_throttle_config),\r\n        _c[111 /* _eInternalMessageId.SdkLdrUpdate */] = cfgDfMerge(default_throttle_config),\r\n        _c[110 /* _eInternalMessageId.CdnDeprecation */] = cfgDfMerge(default_throttle_config),\r\n        _c)),\r\n    _a.extensionConfig = cfgDfMerge((_d = {},\r\n        _d[\"AppInsightsCfgSyncPlugin\"] = cfgDfMerge({\r\n            cfgUrl: CONFIG_ENDPOINT_URL,\r\n            syncMode: 2 /* ICfgSyncMode.Receive */\r\n        }),\r\n        _d)),\r\n    _a);\r\nfunction _chkDiagLevel(value) {\r\n    // Make sure we have a value > 0\r\n    return value && value > 0;\r\n}\r\n/**\r\n * Application Insights API\r\n * @group Entrypoint\r\n * @group Classes\r\n * @class Initialization\r\n * @implements {IApplicationInsights}\r\n */\r\nvar AppInsightsSku = /** @class */ (function () {\r\n    function AppInsightsSku(snippet) {\r\n        var _this = this;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var dependencies;\r\n        var properties;\r\n        var _sender;\r\n        var _snippetVersion;\r\n        var _evtNamespace;\r\n        var _houseKeepingNamespace;\r\n        var _core;\r\n        var _config;\r\n        var _analyticsPlugin;\r\n        var _cfgSyncPlugin;\r\n        var _throttleMgr;\r\n        var _iKeySentMessage;\r\n        var _cdnSentMessage;\r\n        var _sdkVerSentMessage;\r\n        dynamicProto(AppInsightsSku, this, function (_self) {\r\n            _initDefaults();\r\n            objDefine(_self, \"config\", {\r\n                g: function () {\r\n                    return _config;\r\n                }\r\n            });\r\n            arrForEach([\"pluginVersionStringArr\", \"pluginVersionString\"], function (key) {\r\n                objDefine(_self, key, {\r\n                    g: function () {\r\n                        if (_core) {\r\n                            return _core[key];\r\n                        }\r\n                        return null;\r\n                    }\r\n                });\r\n            });\r\n            // initialize the queue and config in case they are undefined\r\n            _snippetVersion = \"\" + (snippet.sv || snippet[_DYN_VERSION /* @min:%2eversion */] || \"\");\r\n            snippet[_DYN_QUEUE /* @min:%2equeue */] = snippet[_DYN_QUEUE /* @min:%2equeue */] || [];\r\n            snippet[_DYN_VERSION /* @min:%2eversion */] = snippet[_DYN_VERSION /* @min:%2eversion */] || 2.0; // Default to new version\r\n            var cfgHandler = createDynamicConfig(snippet.config || {}, defaultConfigValues);\r\n            _config = cfgHandler.cfg;\r\n            _analyticsPlugin = new AnalyticsPlugin();\r\n            objDefine(_self, \"appInsights\", {\r\n                g: function () {\r\n                    return _analyticsPlugin;\r\n                }\r\n            });\r\n            properties = new PropertiesPlugin();\r\n            dependencies = new DependenciesPlugin();\r\n            _sender = new Sender();\r\n            _core = new AppInsightsCore();\r\n            objDefine(_self, \"core\", {\r\n                g: function () {\r\n                    return _core;\r\n                }\r\n            });\r\n            // Will get recalled if any referenced values are changed\r\n            _addUnloadHook(onConfigChange(cfgHandler, function () {\r\n                if (_config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */]) {\r\n                    var cs = parseConnectionString(_config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */]);\r\n                    var ingest = cs.ingestionendpoint;\r\n                    _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = _config[_DYN_USER_OVERRIDE_ENDPOI0 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI0 /* @min:%2euserOverrideEndpointUrl */] : ingest + DEFAULT_BREEZE_PATH; // add /v2/track\r\n                    _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = cs.instrumentationkey || _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                }\r\n                // userOverrideEndpointUrl have the highest priority\r\n                _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = _config[_DYN_USER_OVERRIDE_ENDPOI0 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI0 /* @min:%2euserOverrideEndpointUrl */] : _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n            }));\r\n            _self[STR_SNIPPET /* @min:%2esnippet */] = snippet;\r\n            _self[STR_FLUSH /* @min:%2eflush */] = function (async, callBack) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                doPerf(_core, function () { return \"AISKU.flush\"; }, function () {\r\n                    if (async && !callBack) {\r\n                        result = createPromise(function (resolve) {\r\n                            callBack = resolve;\r\n                        });\r\n                    }\r\n                    var waiting = 1;\r\n                    var flushDone = function () {\r\n                        waiting--;\r\n                        if (waiting === 0) {\r\n                            callBack();\r\n                        }\r\n                    };\r\n                    arrForEach(_core.getChannels(), function (channel) {\r\n                        if (channel) {\r\n                            waiting++;\r\n                            channel[STR_FLUSH /* @min:%2eflush */](async, flushDone);\r\n                        }\r\n                    });\r\n                    // decrement the initial \"waiting\"\r\n                    flushDone();\r\n                }, null, async);\r\n                return result;\r\n            };\r\n            _self[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */] = function (async) {\r\n                if (async === void 0) { async = true; }\r\n                arrForEach(_core.getChannels(), function (channel) {\r\n                    if (channel[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */]) {\r\n                        channel[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */]();\r\n                    }\r\n                    else {\r\n                        channel[STR_FLUSH /* @min:%2eflush */](async);\r\n                    }\r\n                });\r\n            };\r\n            _self.loadAppInsights = function (legacyMode, logger, notificationManager) {\r\n                if (legacyMode === void 0) { legacyMode = false; }\r\n                if (legacyMode) {\r\n                    throwUnsupported(\"Legacy Mode is no longer supported\");\r\n                }\r\n                function _updateSnippetProperties(snippet) {\r\n                    if (snippet) {\r\n                        var snippetVer = \"\";\r\n                        if (!isNullOrUndefined(_snippetVersion)) {\r\n                            snippetVer += _snippetVersion;\r\n                        }\r\n                        if (_self[_DYN_CONTEXT /* @min:%2econtext */] && _self[_DYN_CONTEXT /* @min:%2econtext */].internal) {\r\n                            _self[_DYN_CONTEXT /* @min:%2econtext */].internal.snippetVer = snippetVer || \"-\";\r\n                        }\r\n                        // apply updated properties to the global instance (snippet)\r\n                        objForEachKey(_self, function (field, value) {\r\n                            if (isString(field) &&\r\n                                !isFunction(value) &&\r\n                                field && field[0] !== \"_\" && // Don't copy \"internal\" values\r\n                                arrIndexOf(_ignoreUpdateSnippetProperties, field) === -1) {\r\n                                if (snippet[field] !== value) {\r\n                                    snippet[field] = value;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                doPerf(_self.core, function () { return \"AISKU.loadAppInsights\"; }, function () {\r\n                    // initialize core\r\n                    _core.initialize(_config, [_sender, properties, dependencies, _analyticsPlugin, _cfgSyncPlugin], logger, notificationManager);\r\n                    objDefine(_self, \"context\", {\r\n                        g: function () { return properties[_DYN_CONTEXT /* @min:%2econtext */]; }\r\n                    });\r\n                    if (!_throttleMgr) {\r\n                        _throttleMgr = new ThrottleMgr(_core);\r\n                    }\r\n                    var sdkSrc = _findSdkSourceFile();\r\n                    if (sdkSrc && _self[_DYN_CONTEXT /* @min:%2econtext */]) {\r\n                        _self[_DYN_CONTEXT /* @min:%2econtext */].internal.sdkSrc = sdkSrc;\r\n                    }\r\n                    _updateSnippetProperties(_self[STR_SNIPPET /* @min:%2esnippet */]);\r\n                    // Empty queue of all api calls logged prior to sdk download\r\n                    _self.emptyQueue();\r\n                    _self[STR_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */]();\r\n                    _self[_DYN_ADD_HOUSEKEEPING_BEF1 /* @min:%2eaddHousekeepingBeforeUnload */](_self);\r\n                    _addUnloadHook(onConfigChange(cfgHandler, function () {\r\n                        var defaultEnable = false;\r\n                        if (_config.throttleMgrCfg[109 /* _eInternalMessageId.DefaultThrottleMsgKey */]) {\r\n                            defaultEnable = !_config.throttleMgrCfg[109 /* _eInternalMessageId.DefaultThrottleMsgKey */].disabled;\r\n                        }\r\n                        if (!_throttleMgr.isReady() && _config.extensionConfig && _config.extensionConfig[_cfgSyncPlugin.identifier] && defaultEnable) {\r\n                            // set ready state to true will automatically trigger flush()\r\n                            _throttleMgr.onReadyState(true);\r\n                        }\r\n                        var result;\r\n                        if (!_iKeySentMessage && !_config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */] && isFeatureEnabled(IKEY_USAGE, _config)) {\r\n                            result = _throttleMgr[_DYN_SEND_MESSAGE /* @min:%2esendMessage */](106 /* _eInternalMessageId.InstrumentationKeyDeprecation */, \"See Instrumentation key support at aka.ms/IkeyMigrate\");\r\n                            _iKeySentMessage = true;\r\n                        }\r\n                        if (!_cdnSentMessage && _self[_DYN_CONTEXT /* @min:%2econtext */].internal.sdkSrc && _self[_DYN_CONTEXT /* @min:%2econtext */].internal.sdkSrc.indexOf(\"az416426\") != -1 && isFeatureEnabled(CDN_USAGE, _config)) {\r\n                            result = _throttleMgr[_DYN_SEND_MESSAGE /* @min:%2esendMessage */](110 /* _eInternalMessageId.CdnDeprecation */, \"See Cdn support notice at aka.ms/JsActiveCdn\");\r\n                            _cdnSentMessage = true;\r\n                        }\r\n                        if (!_sdkVerSentMessage && parseInt(_snippetVersion) < 6 && isFeatureEnabled(SDK_LOADER_VER, _config)) {\r\n                            result = _throttleMgr[_DYN_SEND_MESSAGE /* @min:%2esendMessage */](111 /* _eInternalMessageId.SdkLdrUpdate */, \"An updated Sdk Loader is available, see aka.ms/SnippetVer\");\r\n                            _sdkVerSentMessage = true;\r\n                        }\r\n                    }));\r\n                });\r\n                return _self;\r\n            };\r\n            _self[_DYN_UPDATE_SNIPPET_DEFIN2 /* @min:%2eupdateSnippetDefinitions */] = function (snippet) {\r\n                // apply full appInsights to the global instance\r\n                // Note: This must be called before loadAppInsights is called\r\n                proxyAssign(snippet, _self, function (name) {\r\n                    // Not excluding names prefixed with \"_\" as we need to proxy some functions like _onError\r\n                    return name && arrIndexOf(_ignoreUpdateSnippetProperties, name) === -1;\r\n                });\r\n            };\r\n            _self.emptyQueue = function () {\r\n                // call functions that were queued before the main script was loaded\r\n                try {\r\n                    if (isArray(_self.snippet[_DYN_QUEUE /* @min:%2equeue */])) {\r\n                        // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                        var length_1 = _self.snippet[_DYN_QUEUE /* @min:%2equeue */].length;\r\n                        for (var i = 0; i < length_1; i++) {\r\n                            var call = _self.snippet[_DYN_QUEUE /* @min:%2equeue */][i];\r\n                            call();\r\n                        }\r\n                        _self.snippet[_DYN_QUEUE /* @min:%2equeue */] = undefined;\r\n                        delete _self.snippet[_DYN_QUEUE /* @min:%2equeue */];\r\n                    }\r\n                }\r\n                catch (exception) {\r\n                    var properties_1 = {};\r\n                    if (exception && isFunction(exception.toString)) {\r\n                        properties_1.exception = exception.toString();\r\n                    }\r\n                    // need from core\r\n                    // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n                    //     eLoggingSeverity.WARNING,\r\n                    //     _eInternalMessageId.FailedToSendQueuedTelemetry,\r\n                    //     \"Failed to send queued telemetry\",\r\n                    //     properties);\r\n                }\r\n            };\r\n            _self[_DYN_ADD_HOUSEKEEPING_BEF1 /* @min:%2eaddHousekeepingBeforeUnload */] = function (appInsightsInstance) {\r\n                // Add callback to push events when the user navigates away\r\n                if (hasWindow() || hasDocument()) {\r\n                    var performHousekeeping_1 = function () {\r\n                        // Adds the ability to flush all data before the page unloads.\r\n                        // Note: This approach tries to push a sync request with all the pending events onbeforeunload.\r\n                        // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                        // Telemetry here will help us analyze how effective this approach is.\r\n                        // Another approach would be to make this call sync with a acceptable timeout to reduce the\r\n                        // impact on user experience.\r\n                        // appInsightsInstance.context._sender.triggerSend();\r\n                        appInsightsInstance[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */](false);\r\n                        // Back up the current session to local storage\r\n                        // This lets us close expired sessions after the cookies themselves expire\r\n                        if (isFunction(_self.core[STR_GET_PLUGIN /* @min:%2egetPlugin */])) {\r\n                            var loadedPlugin = _this.core[STR_GET_PLUGIN /* @min:%2egetPlugin */](PropertiesPluginIdentifier);\r\n                            if (loadedPlugin) {\r\n                                var propertiesPlugin = loadedPlugin.plugin;\r\n                                if (propertiesPlugin && propertiesPlugin[_DYN_CONTEXT /* @min:%2econtext */] && propertiesPlugin[_DYN_CONTEXT /* @min:%2econtext */]._sessionManager) {\r\n                                    propertiesPlugin[_DYN_CONTEXT /* @min:%2econtext */]._sessionManager.backup();\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n                    var added_1 = false;\r\n                    if (!_houseKeepingNamespace) {\r\n                        _houseKeepingNamespace = mergeEvtNamespace(_evtNamespace, _core[STR_EVT_NAMESPACE /* @min:%2eevtNamespace */] && _core[STR_EVT_NAMESPACE /* @min:%2eevtNamespace */]());\r\n                    }\r\n                    // Will be recalled if any referenced config properties change\r\n                    _addUnloadHook(onConfigChange(_config, function (details) {\r\n                        var coreConfig = details.cfg;\r\n                        var analyticsPlugin = appInsightsInstance.appInsights;\r\n                        var ctx = createProcessTelemetryContext(null, coreConfig, analyticsPlugin.core);\r\n                        var extConfig = ctx.getExtCfg(analyticsPlugin.identifier || AnalyticsPluginIdentifier);\r\n                        // As we could get recalled, remove any previously registered event handlers first\r\n                        _removePageEventHandlers();\r\n                        var excludePageUnloadEvents = coreConfig.disablePageUnloadEvents;\r\n                        if (!extConfig.disableFlushOnBeforeUnload) {\r\n                            // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n                            // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n                            if (addPageUnloadEventListener(performHousekeeping_1, excludePageUnloadEvents, _houseKeepingNamespace)) {\r\n                                added_1 = true;\r\n                            }\r\n                            // We also need to hook the pagehide and visibilitychange events as not all versions of Safari support load/unload events.\r\n                            if (addPageHideEventListener(performHousekeeping_1, excludePageUnloadEvents, _houseKeepingNamespace)) {\r\n                                added_1 = true;\r\n                            }\r\n                            // A reactNative app may not have a window and therefore the beforeunload/pagehide events -- so don't\r\n                            // log the failure in this case\r\n                            if (!added_1 && !isReactNative()) {\r\n                                _throwInternal(_core.logger, 1 /* eLoggingSeverity.CRITICAL */, 19 /* _eInternalMessageId.FailedToAddHandlerForOnBeforeUnload */, \"Could not add handler for beforeunload and pagehide\");\r\n                            }\r\n                        }\r\n                        if (!added_1 && !extConfig.disableFlushOnUnload) {\r\n                            // If we didn't add the normal set then attempt to add the pagehide and visibilitychange only\r\n                            addPageHideEventListener(performHousekeeping_1, excludePageUnloadEvents, _houseKeepingNamespace);\r\n                        }\r\n                    }));\r\n                }\r\n            };\r\n            _self.getSender = function () {\r\n                return _sender;\r\n            };\r\n            _self.unload = function (isAsync, unloadComplete, cbTimeout) {\r\n                var unloadDone = false;\r\n                var result;\r\n                if (isAsync && !unloadComplete) {\r\n                    result = createPromise(function (resolve) {\r\n                        // Set the callback to the promise resolve callback\r\n                        unloadComplete = resolve;\r\n                    });\r\n                }\r\n                function _unloadCallback(unloadState) {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _initDefaults();\r\n                        unloadComplete && unloadComplete(unloadState);\r\n                    }\r\n                }\r\n                _self[_DYN_ONUNLOAD_FLUSH /* @min:%2eonunloadFlush */](isAsync);\r\n                _removePageEventHandlers();\r\n                _core.unload && _core.unload(isAsync, _unloadCallback, cbTimeout);\r\n                return result;\r\n            };\r\n            proxyFunctions(_self, _analyticsPlugin, [\r\n                STR_GET_COOKIE_MGR,\r\n                STR_TRACK_EVENT,\r\n                STR_TRACK_PAGE_VIEW,\r\n                \"trackPageViewPerformance\",\r\n                STR_TRACK_EXCEPTION,\r\n                \"_onerror\",\r\n                STR_TRACK_TRACE,\r\n                STR_TRACK_METRIC,\r\n                STR_START_TRACK_PAGE,\r\n                STR_STOP_TRACK_PAGE,\r\n                STR_START_TRACK_EVENT,\r\n                STR_STOP_TRACK_EVENT\r\n            ]);\r\n            proxyFunctions(_self, _getCurrentDependencies, [\r\n                STR_TRACK_DEPENDENCY_DATA,\r\n                \"addDependencyListener\",\r\n                \"addDependencyInitializer\"\r\n            ]);\r\n            proxyFunctions(_self, _core, [\r\n                STR_ADD_TELEMETRY_INITIALIZER,\r\n                STR_POLL_INTERNAL_LOGS,\r\n                \"stopPollingInternalLogs\",\r\n                STR_GET_PLUGIN,\r\n                \"addPlugin\",\r\n                STR_EVT_NAMESPACE,\r\n                \"addUnloadCb\",\r\n                \"getTraceCtx\",\r\n                \"updateCfg\",\r\n                \"onCfgChange\"\r\n            ]);\r\n            proxyFunctions(_self, function () {\r\n                var context = properties[_DYN_CONTEXT /* @min:%2econtext */];\r\n                return context ? context.user : null;\r\n            }, [\r\n                STR_SET_AUTHENTICATED_USER_CONTEXT,\r\n                STR_CLEAR_AUTHENTICATED_USER_CONTEXT\r\n            ]);\r\n            // Using a function to support the dynamic adding / removal of plugins, so this will always return the current value\r\n            function _getCurrentDependencies() {\r\n                return dependencies;\r\n            }\r\n            function _initDefaults() {\r\n                _evtNamespace = createUniqueNamespace(\"AISKU\");\r\n                _houseKeepingNamespace = null;\r\n                dependencies = null;\r\n                properties = null;\r\n                _sender = null;\r\n                _snippetVersion = null;\r\n                _throttleMgr = null;\r\n                _iKeySentMessage = false;\r\n                _cdnSentMessage = false;\r\n                _sdkVerSentMessage = false;\r\n                _cfgSyncPlugin = new CfgSyncPlugin();\r\n            }\r\n            function _removePageEventHandlers() {\r\n                // Remove any registered event handlers\r\n                if (_houseKeepingNamespace) {\r\n                    removePageUnloadEventListener(null, _houseKeepingNamespace);\r\n                    removePageHideEventListener(null, _houseKeepingNamespace);\r\n                }\r\n            }\r\n            function _addUnloadHook(hooks) {\r\n                _core.addUnloadHook(hooks);\r\n            }\r\n        });\r\n    }\r\n    // Analytics Plugin\r\n// Removed Stub for AppInsightsSku.prototype.getCookieMgr.\r\n// Removed Stub for AppInsightsSku.prototype.trackEvent.\r\n// Removed Stub for AppInsightsSku.prototype.trackPageView.\r\n// Removed Stub for AppInsightsSku.prototype.trackPageViewPerformance.\r\n// Removed Stub for AppInsightsSku.prototype.trackException.\r\n// Removed Stub for AppInsightsSku.prototype._onerror.\r\n// Removed Stub for AppInsightsSku.prototype.trackTrace.\r\n// Removed Stub for AppInsightsSku.prototype.trackMetric.\r\n// Removed Stub for AppInsightsSku.prototype.startTrackPage.\r\n// Removed Stub for AppInsightsSku.prototype.stopTrackPage.\r\n// Removed Stub for AppInsightsSku.prototype.startTrackEvent.\r\n// Removed Stub for AppInsightsSku.prototype.stopTrackEvent.\r\n// Removed Stub for AppInsightsSku.prototype.addTelemetryInitializer.\r\n    // Properties Plugin\r\n// Removed Stub for AppInsightsSku.prototype.setAuthenticatedUserContext.\r\n// Removed Stub for AppInsightsSku.prototype.clearAuthenticatedUserContext.\r\n    // Dependencies Plugin\r\n// Removed Stub for AppInsightsSku.prototype.trackDependencyData.\r\n    // Misc\r\n// Removed Stub for AppInsightsSku.prototype.flush.\r\n// Removed Stub for AppInsightsSku.prototype.onunloadFlush.\r\n// Removed Stub for AppInsightsSku.prototype.loadAppInsights.\r\n// Removed Stub for AppInsightsSku.prototype.updateSnippetDefinitions.\r\n// Removed Stub for AppInsightsSku.prototype.emptyQueue.\r\n// Removed Stub for AppInsightsSku.prototype.pollInternalLogs.\r\n// Removed Stub for AppInsightsSku.prototype.stopPollingInternalLogs.\r\n// Removed Stub for AppInsightsSku.prototype.addHousekeepingBeforeUnload.\r\n// Removed Stub for AppInsightsSku.prototype.getSender.\r\n// Removed Stub for AppInsightsSku.prototype.unload.\r\n// Removed Stub for AppInsightsSku.prototype.getPlugin.\r\n// Removed Stub for AppInsightsSku.prototype.addPlugin.\r\n// Removed Stub for AppInsightsSku.prototype.updateCfg.\r\n// Removed Stub for AppInsightsSku.prototype.evtNamespace.\r\n// Removed Stub for AppInsightsSku.prototype.addUnloadCb.\r\n// Removed Stub for AppInsightsSku.prototype.addDependencyListener.\r\n    /**\r\n     * Add an dependency telemetry initializer callback function to allow populating additional properties or drop the request.\r\n     * It is called after the dependency call has completed and any available performance details are available. A dependency\r\n     * initializer is similar to the TelemetryInitializer function but it allows you to block the reporting of the dependency\r\n     * request so that it doesn't count against the `maxAjaxCallsPerView`.\r\n     * @param dependencyInitializer - The Dependency Telemetry Initializer function\r\n     * @returns - A IDependencyInitializerHandler to enable the initializer to be removed\r\n     */\r\n    AppInsightsSku.prototype.addDependencyInitializer = function (dependencyInitializer) {\r\n        return null;\r\n    };\r\n// Removed Stub for AppInsightsSku.prototype.getTraceCtx.\r\n// Removed Stub for AppInsightsSku.prototype.onCfgChange.\r\n    return AppInsightsSku;\r\n}());\r\nexport { AppInsightsSku };\r\n// tslint:disable-next-line\r\nexport function _findSdkSourceFile() {\r\n    if (_internalSdkSrc) {\r\n        // Use the cached value\r\n        return _internalSdkSrc;\r\n    }\r\n    var sdkSrc = null;\r\n    var isModule = false;\r\n    var cdns = [\r\n        \"://js.monitor.azure.com/\",\r\n        \"://az416426.vo.msecnd.net/\"\r\n    ];\r\n    try {\r\n        // Try and determine whether the sdk is being loaded from the CDN\r\n        // currentScript is only valid during initial processing\r\n        var scrpt = (document || {}).currentScript;\r\n        if (scrpt) {\r\n            sdkSrc = scrpt.src;\r\n            // } else {\r\n            //     // We need to update to at least typescript 2.9 for this to work :-(\r\n            //     // Leaving as a stub for now so after we upgrade this breadcrumb is available\r\n            //     let meta = import.meta;\r\n            //     sdkSrc = (meta || {}).url;\r\n            //     isModule = true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    if (sdkSrc) {\r\n        try {\r\n            var url_1 = sdkSrc.toLowerCase();\r\n            if (url_1) {\r\n                var src_1 = \"\";\r\n                arrForEach(cdns, function (value, idx) {\r\n                    if (strIndexOf(url_1, value) !== -1) {\r\n                        src_1 = \"cdn\" + (idx + 1);\r\n                        if (strIndexOf(url_1, \"/scripts/\") === -1) {\r\n                            if (strIndexOf(url_1, \"/next/\") !== -1) {\r\n                                src_1 += \"-next\";\r\n                            }\r\n                            else if (strIndexOf(url_1, \"/beta/\") !== -1) {\r\n                                src_1 += \"-beta\";\r\n                            }\r\n                        }\r\n                        _internalSdkSrc = src_1 + (isModule ? \".mod\" : \"\");\r\n                        return -1;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n        // Cache the found value so we don't have to look it up again\r\n        _internalSdkSrc = sdkSrc;\r\n    }\r\n    return _internalSdkSrc;\r\n}\r\n//# sourceMappingURL=AISku.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nvar _AUTHENTICATED_USER_CONTEXT = \"AuthenticatedUserContext\";\r\nvar _TRACK = \"track\";\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_SNIPPET = \"snippet\";\r\nexport var STR_GET_COOKIE_MGR = \"getCookieMgr\";\r\nexport var STR_START_TRACK_PAGE = \"startTrackPage\";\r\nexport var STR_STOP_TRACK_PAGE = \"stopTrackPage\";\r\nexport var STR_FLUSH = \"flush\";\r\nexport var STR_START_TRACK_EVENT = \"startTrackEvent\";\r\nexport var STR_STOP_TRACK_EVENT = \"stopTrackEvent\";\r\nexport var STR_ADD_TELEMETRY_INITIALIZER = \"addTelemetryInitializer\";\r\nexport var STR_ADD_TELEMETRY_INITIALIZERS = STR_ADD_TELEMETRY_INITIALIZER + \"s\";\r\nexport var STR_POLL_INTERNAL_LOGS = \"pollInternalLogs\";\r\nexport var STR_GET_PLUGIN = \"getPlugin\";\r\nexport var STR_EVT_NAMESPACE = \"evtNamespace\";\r\nexport var STR_TRACK_EVENT = _TRACK + \"Event\";\r\nexport var STR_TRACK_TRACE = _TRACK + \"Trace\";\r\nexport var STR_TRACK_METRIC = _TRACK + \"Metric\";\r\nexport var STR_TRACK_PAGE_VIEW = _TRACK + \"PageView\";\r\nexport var STR_TRACK_EXCEPTION = _TRACK + \"Exception\";\r\nexport var STR_TRACK_DEPENDENCY_DATA = _TRACK + \"DependencyData\";\r\nexport var STR_SET_AUTHENTICATED_USER_CONTEXT = \"set\" + _AUTHENTICATED_USER_CONTEXT;\r\nexport var STR_CLEAR_AUTHENTICATED_USER_CONTEXT = \"clear\" + _AUTHENTICATED_USER_CONTEXT;\r\nexport var CONFIG_ENDPOINT_URL = \"https://js.monitor.azure.com/scripts/b/ai.config.1.cfg.json\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Web, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_QUEUE = \"queue\"; // Count: 6\r\nexport var _DYN_CONNECTION_STRING = \"connectionString\"; // Count: 4\r\nexport var _DYN_ENDPOINT_URL = \"endpointUrl\"; // Count: 4\r\nexport var _DYN_USER_OVERRIDE_ENDPOI0 = \"userOverrideEndpointUrl\"; // Count: 5\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 3\r\nexport var _DYN_ONUNLOAD_FLUSH = \"onunloadFlush\"; // Count: 6\r\nexport var _DYN_CONTEXT = \"context\"; // Count: 5\r\nexport var _DYN_ADD_HOUSEKEEPING_BEF1 = \"addHousekeepingBeforeUnload\"; // Count: 2\r\nexport var _DYN_SEND_MESSAGE = \"sendMessage\"; // Count: 3\r\nexport var _DYN_UPDATE_SNIPPET_DEFIN2 = \"updateSnippetDefinitions\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.2.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrReduce, objKeys, strEndsWith } from \"@microsoft/applicationinsights-core-js\";\r\nimport { DEFAULT_BREEZE_ENDPOINT } from \"./Constants\";\r\nimport { _DYN_INGESTIONENDPOINT, _DYN_LENGTH, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _FIELDS_SEPARATOR = \";\";\r\nvar _FIELD_KEY_VALUE_SEPARATOR = \"=\";\r\nexport function parseConnectionString(connectionString) {\r\n    if (!connectionString) {\r\n        return {};\r\n    }\r\n    var kvPairs = connectionString[_DYN_SPLIT /* @min:%2esplit */](_FIELDS_SEPARATOR);\r\n    var result = arrReduce(kvPairs, function (fields, kv) {\r\n        var kvParts = kv[_DYN_SPLIT /* @min:%2esplit */](_FIELD_KEY_VALUE_SEPARATOR);\r\n        if (kvParts[_DYN_LENGTH /* @min:%2elength */] === 2) { // only save fields with valid formats\r\n            var key = kvParts[0][_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n            var value = kvParts[1];\r\n            fields[key] = value;\r\n        }\r\n        return fields;\r\n    }, {});\r\n    if (objKeys(result)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // this is a valid connection string, so parse the results\r\n        if (result.endpointsuffix) {\r\n            // apply the default endpoints\r\n            var locationPrefix = result.location ? result.location + \".\" : \"\";\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || (\"https://\" + locationPrefix + \"dc.\" + result.endpointsuffix);\r\n        }\r\n        // apply user override endpoint or the default endpoints\r\n        result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || DEFAULT_BREEZE_ENDPOINT;\r\n        if (strEndsWith(result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */], \"/\")) {\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */].slice(0, -1);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport var ConnectionStringParser = {\r\n    parse: parseConnectionString\r\n};\r\n//# sourceMappingURL=ConnectionStringParser.js.map","'use strict';\n\nimport Config from '../config.json' assert { type: 'json' };\nimport { ApplicationInsights } from '@microsoft/applicationinsights-web';\n\nconst ExploreMode = {\n    none: 'None',\n    embeddedViewerMode: 'EmbeddedViewerMode',\n    webAppViewerMode: 'WebAppViewerMode'\n}\n\nconst EventParameter = {\n    title: 'Title',\n    publisher: 'Publisher',\n    version: 'Version',\n    id: 'Id',\n    imageTarget: 'ImageTargetName',\n    enrichmentUid: 'EnrichmentUid',\n    isPublished: 'IsPublished',\n    isARAvailable: 'IsARAvailable',\n    exploreMode: 'ExploreMode',\n    quizQuestion: 'Question',\n    quiz: 'Quiz',\n    labelUid: 'LabelUid',\n    source: 'Source',\n};\n\nconst Event = {\n    startLoadImageTargetsExperience: 'Start Load Image Targets',\n    completeLoadImageTargetsExperience: 'Complete Load Image Targets',\n    enteredScanningExperience: 'Entered Scanning Experience',\n    openExperience: 'Open Experience',\n    deleteExperience: 'Delete Experience',\n    startDownloadExperience: 'Start Download Experience',\n    finishedDownloadExperience: 'Finished Download Experience',\n    openEnrichmentMenu: 'Open Enrichment Menu',\n    videoWatchedToTheEnd: 'Video Watched To End',\n    imageTargetQuizTracked: 'Image Target Quiz Tracked',\n    imageTargetLinkTracked: 'Image Target Link Tracked',\n    imageTargetAudioTracked: 'Image Target Audio Tracked',\n    imageTargetTracked: 'Image Target Tracked',\n    linkTriggered: 'Link Triggered',\n    modelTriggered: 'Model Triggered',\n    audioTriggered: 'Audio Triggered',\n    videoTriggered: 'Video Triggered',\n    modelLabelTriggered: 'Model Label triggered',\n    modelLabelExpanded: 'Model Label Expanded triggered',\n    quizQuestionAnswered: 'Quiz Question Answered',\n    quizStartedTriggered: 'Quiz Started',\n    quizCompletedTriggered: 'Quiz Completed',\n};\n\nexport default class EventTracker {\n    constructor() {\n        this.appInsights = new ApplicationInsights({\n            config: {\n                connectionString: Config.connectionStrings.appInsights\n            }\n        });\n        this.appInsights.loadAppInsights();\n        this.appInsights.trackPageView()\n    }\n\n    openExperience() {\n        this.trackEvent(Event.openExperience);\n    }\n\n    modelTriggered(enrichment) {\n        const properties = {};\n        properties[EventParameter.enrichmentUid] = enrichment.uid;\n        this.trackEvent(Event.modelTriggered, enrichment.experience, properties);\n    }\n\n    modelLabelTriggered(label) {\n        const properties = this.getLabelProperties(label);\n        this.trackEvent(Event.modelLabelTriggered, properties);\n    }\n\n    modelLabelExpanded(label) {\n        const properties = this.getLabelProperties(label);\n        this.trackEvent(Event.modelLabelExpanded, properties);\n    }\n\n    trackEvent(name, experience, properties = {}) {\n        const defaultProperties = this.getDefaultProperties(experience);\n        properties = { ...properties, ...defaultProperties };\n        this.appInsights.trackEvent({ name, properties });\n    }\n\n    getLabelProperties(label) {\n        var properties = {};\n\n        if (label?.uid !== undefined) {\n            properties[EventParameter.labelUid] = label.uid;\n        }\n\n        if (label?.enrichment?.uid !== undefined) {\n            properties[EventParameter.enrichmentUid] = label.enrichment.uid;\n        }\n\n        return properties;\n    }\n\n    getDefaultProperties(experience) {\n        const properties = {};\n\n        if (experience.title !== undefined) {\n            properties[EventParameter.title] = experience.title;\n        }\n\n        if (experience.publisher !== undefined) {\n            properties[EventParameter.publisher] = experience.publisher;\n        }\n\n        if (experience.version !== undefined) {\n            properties[EventParameter.version] = experience.version;\n        }\n\n        if (experience.uid !== undefined) {\n            properties[EventParameter.id] = experience.uid;\n        }\n\n        if (experience.isPublished !== undefined) {\n            properties[EventParameter.isPublished] = experience.isPublished;\n        }\n\n        if (experience.isARAvailable !== undefined) {\n            properties[EventParameter.isARAvailable] = experience.isARAvailable;\n        }\n\n        properties[EventParameter.source] = 'com.ludenso.explore.web';\n        properties[EventParameter.exploreMode] = ExploreMode.embeddedViewerMode;\n\n        return properties;\n    }\n}\n","'use strict';\n\nimport Alpine from 'alpinejs';\nimport screenfull from 'screenfull';\nimport EventTracker from './EventTracker';\n\nexport default class ModelViewer {\n    constructor() {\n        const modelViewer = this;\n\n        [this.enrichment, this.assetBundle, this.labels] = extractEnrichmentDocumentData();\n\n        if (!this.assetBundle && !this.labels) {\n            [this.assetBundle, this.labels] = extractAssetBundleDocumentData();\n        }\n\n        if (!this.assetBundle && !this.labels) {\n            console.error('No asset bundle or labels found in the document');\n        }\n\n        document.addEventListener('alpine:init', () => {\n            Alpine.data('ModelViewer', () => ({\n                widescreen: false,\n                supportsFullscreen: false,\n                isFullscreen: false,\n                eventTracker: null,\n                isLabelExpanded: false,\n                init() {\n                    const self = this;\n                    this.eventTracker = new EventTracker();\n                    if (modelViewer.enrichment) {\n                        this.eventTracker.modelTriggered(modelViewer.enrichment);\n                    }\n                    const updateWidescreen = () => {\n                        this.widescreen = window.innerWidth > 768;\n                        this.isLabelExpanded = this.widescreen;\n                    };\n                    this.supportsFullscreen = screenfull.isEnabled;\n\n                    updateWidescreen();\n                    window.addEventListener('resize', updateWidescreen, false);\n                    window.addEventListener('hashchange', function(event) {\n                        const currentLabel = self.findCurrentLabelElement();\n                        if (currentLabel) {\n                            if (self.isLabelExpanded) {\n                                currentLabel.setAttribute('open', '');\n                            } else {\n                                currentLabel.removeAttribute('open');\n                            }\n                        }\n\n                        self.trackLabelEvent(event);\n                    }, false);\n                },\n                async fullscreen() {\n                    await screenfull.toggle(document.documentElement);\n                    this.isFullscreen = screenfull.isFullscreen;\n                },\n                findCurrentLabelElement() {\n                    const currentLabelID = document.location.hash.split('#')[1];\n                    if (!currentLabelID) {\n                        return null;\n                    }\n\n                    return document.getElementById(currentLabelID);\n                },\n                findCurrentLabelObject() {\n                    const labelUid = document.location.hash.split('#label-')[1];\n                    if (!labelUid) {\n                        return null\n                    }\n\n                    return modelViewer.labels.find(label => label.uid.replaceAll('-', '') === labelUid);\n                },\n                findPreviousAndNextLabelElements() {\n                    const currentLabelID = document.location.hash.split('#')[1];\n                    if (!currentLabelID) {\n                        return { previous: null, next: null };\n                    }\n\n                    const currentLabel = document.getElementById(currentLabelID);\n                    if (!currentLabel) {\n                        return { previous: null, next: null };\n                    }\n\n                    const nextLink = currentLabel.querySelector('a[rel=\"next\"]');\n                    const previousLink = currentLabel.querySelector('a[rel=\"prev\"]');\n                    const next = nextLink ? document.getElementById(nextLink.href.split('#')[1]) : null;\n                    const previous = previousLink ? document.getElementById(previousLink.href.split('#')[1]) : null;\n\n                    return { previous, next };\n                },\n                previousLabel() {\n                    const labels = this.findPreviousAndNextLabelElements();\n                    if (!labels.previous) {\n                        return;\n                    }\n\n                    document.location.hash = labels.previous.id;\n                },\n                nextLabel() {\n                    const labels = this.findPreviousAndNextLabelElements();\n                    if (!labels.next) {\n                        return;\n                    }\n\n                    document.location.hash = labels.next.id;\n                },\n                labelExpanded(event) {\n                    this.isLabelExpanded = event.target?.parentElement?.hasAttribute('open') === false;\n\n                    if (this.isLabelExpanded) {\n                        const label = this.findCurrentLabelObject();\n                        this.eventTracker.modelLabelExpanded(label);\n                    }\n                },\n                trackLabelEvent(event) {\n                    if (event.newURL === event.oldURL) {\n                        return;\n                    }\n\n                    const label = this.findCurrentLabelElement();\n                    if (!label) {\n                        return;\n                    }\n\n                    this.eventTracker.modelLabelTriggered(label);\n\n                    if (this.isLabelExpanded) {\n                        this.eventTracker.modelLabelExpanded(label);\n                    }\n                }\n            }));\n        });\n\n        if (!window.Alpine) {\n            window.Alpine = Alpine;\n            Alpine.start();\n        }\n    }\n}\n\nfunction extractAssetBundleDocumentData() {\n    const assetBundleScript = document.querySelector('script#asset-bundle');\n    if (!assetBundleScript) {\n        return [null, null];\n    }\n\n    const assetBundle = JSON.parse(assetBundleScript.innerHTML);\n    if (!assetBundle) {\n        console.error('The asset bundle JSON is empty or invalid.');\n        return [null, null];\n    }\n\n    const labels = assetBundle.labels;\n\n    for (var label of labels) {\n        label.assetBundle = assetBundle;\n    }\n\n    return [assetBundle, labels];\n}\n\nfunction extractEnrichmentDocumentData() {\n    const enrichmentScript = document.querySelector('script#enrichment');\n    if (!enrichmentScript) {\n        return [null, null];\n    }\n\n    const enrichment = JSON.parse(enrichmentScript.innerHTML);\n    if (!enrichment) {\n        console.error('The enrichment JSON is empty or invalid.');\n        return [null, null];\n    }\n\n    const labels = enrichment.modelLabels;\n\n    for (var label of labels) {\n        label.enrichment = enrichment;\n    }\n\n    return [enrichment, enrichment.assetBundle, labels];\n}\n","import { Cache, Vector3, Clock, Scene, PerspectiveCamera, WebGLRenderer, SRGBColorSpace, PMREMGenerator, AnimationMixer, Vector2, Raycaster } from 'three';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { DRACOLoader } from 'three/addons/loaders/DRACOLoader';\nimport { GainMapLoader } from '@monogrid/gainmap-js';\nimport { update } from '@tweenjs/tween.js';\nimport { createLabel } from './CreateLabel';\nimport { animateCameraMove, resetCamera } from './CameraTransitions';\nimport * as StyleBuilder from './StyleBuilder';\nimport ModelViewer from './ModelViewer';\n\nexport let scene, camera, renderer, controls, mixer;\nexport const center = new Vector3(0,0,0);\nexport const labelPoints = [];\nconst clock = new Clock();\n\n(async function() {\n    StyleBuilder.append();\n    const modelViewer = new ModelViewer();\n\n    const container = document.querySelector('#canvas-container');\n    if (!container) {\n        console.error('No container found');\n        return;\n    }\n\n    const glbUrl = modelViewer.assetBundle?.buildTargets?.glb;\n    if (!glbUrl) {\n        console.error('No GLB found in asset bundle', modelViewer.assetBundle);\n        return;\n    }\n\n    const boundingBox = modelViewer.assetBundle?.boundingBox;\n    if (!boundingBox) {\n        console.error('No bounding box found in asset bundle', modelViewer.assetBundle);\n        return;\n    }\n\n    await renderModel(container, glbUrl, modelViewer.labels, boundingBox);\n})();\n\nasync function renderModel(container, glbUrl, labels, boundingBox) {\n    const initialized = !!renderer;\n    Cache.enabled = true;\n    renderer = await seUpScene(glbUrl);\n\n    container.removeAttribute('aria-busy');\n    container.appendChild(renderer.domElement);\n\n    setUpControls((boundingBox.minY + boundingBox.maxY) * 0.5);\n    await addLabels(labels);\n    window.addEventListener('resize', onWindowResize, false);\n    window.addEventListener('hashchange', visualSelectLabel, false);\n    setUpClickListener(container);\n\n    if (!initialized) {\n        requestAnimationFrame(animate);\n    }\n\n    visualSelectLabel();\n}\n\nfunction setUpControls(height) {\n    controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.25;\n    center.y = height;\n    controls.target.set(center.x,center.y, center.z);\n    controls.maxPolarAngle = 3.14 - 0.4;\n    controls.minPolarAngle = 0.4;\n    controls.maxDistance = 4;\n    controls.minDistance = 0.1;\n}\n\nasync function seUpScene(glbUrl) {\n    scene = new Scene();\n    camera = new PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.01, 100);\n    camera.position.set(-1, 0.7, -1);\n    renderer = new WebGLRenderer({ antialias: true, alpha: true, preserveDrawingBuffer: true });\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.outputEncoding = SRGBColorSpace;\n    scene.environment = await loadHDRTexture(renderer);\n    const gltf = await loadGlb(glbUrl);\n    scene.add(gltf.scene);\n    scene.environmentRotation.y = Math.PI;\n    return renderer;\n}\n\nasync function loadHDRTexture(renderer) {\n    const loader = new GainMapLoader(renderer);\n    const result = await loader.loadAsync(['/img/environment.webp', '/img/environment.gainmap.webp', '/img/environment.metadata.json']);\n    const texture = result.renderTarget.texture;\n    const pmremGenerator = new PMREMGenerator(renderer);\n    const envMap = pmremGenerator.fromEquirectangular(texture).texture;\n\n    texture.dispose();\n    result.dispose();\n\n    return envMap;\n}\n\nasync function loadGlb(glbUrl) {\n    const dracoLoader = new DRACOLoader();\n    dracoLoader.setDecoderPath('https://www.gstatic.com/draco/v1/decoders/');\n\n    const loader = new GLTFLoader();\n    loader.setDRACOLoader(dracoLoader);\n\n    return new Promise(function(resolve, reject) {\n        loader.load(glbUrl, function(gltf) {\n            if (gltf.animations) {\n                mixer = new AnimationMixer(gltf.scene);\n                gltf.animations.forEach((clip) => mixer.clipAction(clip).play());\n            }\n\n            resolve(gltf);\n        }, undefined, reject);\n    });\n}\n\nasync function addLabels(labels) {\n    var labelIndex = 1;\n    for (const label of labels) {\n        const positionX = -label.anchorPosition[\"positionX\"];\n        const positionY = label.anchorPosition[\"positionY\"];\n        const positionZ = label.anchorPosition[\"positionZ\"];\n        const point = new Vector3(positionX, positionY, positionZ);\n        const uid = label.uid.replaceAll('-', '');\n        await createLabel(point, labelIndex, label.title, label.description, uid, camera, scene, labelPoints);\n        labelIndex++;\n    }\n}\n\nfunction selectLabel(labelUid) {\n    const prefixedLabelUid = `label-${labelUid.replaceAll('-', '')}`;\n\n    if (window.location.hash !== prefixedLabelUid) {\n        window.location.hash = prefixedLabelUid;\n    }\n}\n\nfunction visualSelectLabel() {\n    if (!window.location.hash.startsWith('#label-')) {\n        return;\n    }\n\n    visualDeselectAllLabels();\n\n    const selectedLabelUid = window.location.hash.replace('#label-', '').trim().replaceAll('-', '');\n    if (selectedLabelUid === '') {\n        return;\n    }\n\n    const labelPoint = labelPoints.find(labelPoint => {\n        const uid = labelPoint.userData.uid.replaceAll('-', '');\n        return uid === selectedLabelUid;\n    });\n    if (!labelPoint) {\n        console.error('Label not found', { labelUid: selectedLabelUid, labelPoints });\n        return;\n    }\n\n    labelPoint.children[0].material.uniforms.selected.value = true;\n    labelPoint.children[1].material.uniforms.selected.value = true;\n\n    animateCameraMove(labelPoint.position);\n}\n\nfunction animate() {\n    const delta = clock.getDelta();\n\n    if (mixer) {\n        mixer.update(delta);\n    }\n\n    controls.update();\n    labelPoints.forEach(label => label.children[1].material.uniforms.time.value += delta);\n\n    camera.updateMatrixWorld(true);\n    update();\n    renderer.clear(false, true, false);\n    renderer.render(scene, camera);\n    requestAnimationFrame(animate);\n}\n\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    console\n    labelPoints.forEach(label => {\n        label.children[0].material.uniforms.screenHeight.value = window.innerHeight;\n        label.children[1].material.uniforms.screenHeight.value = window.innerHeight;\n    });\n}\n\nfunction visualDeselectAllLabels() {\n    labelPoints.forEach(label => {\n        label.children[0].material.uniforms.selected.value = false;\n        label.children[1].material.uniforms.selected.value = false;\n    });\n\n    resetCamera();\n}\n\nfunction setUpClickListener(container) {\n    let isDragging = false;\n    let startX, startY;\n\n    container.addEventListener('mousedown', (event) => {\n        labelPoints.forEach(label => {\n            const scale = label.position.clone().distanceTo(camera.position) / (window.innerHeight /105.0);\n            label.scale.set(scale, scale, scale);\n        });\n        isDragging = false;\n        startX = event.clientX;\n        startY = event.clientY;\n\n        const onMouseMove = (moveEvent) => {\n            if (Math.abs(moveEvent.clientX - startX) > 5 || Math.abs(moveEvent.clientY - startY) > 5) {\n                isDragging = true;\n            }\n        };\n\n        const onMouseUp = (upEvent) => {\n            if (!isDragging) {\n                onDocumentClicked(upEvent);\n            }\n            container.removeEventListener('mousemove', onMouseMove);\n            container.removeEventListener('mouseup', onMouseUp);\n        };\n\n        container.addEventListener('mousemove', onMouseMove);\n        container.addEventListener('mouseup', onMouseUp);\n    });\n}\n\nfunction onDocumentClicked(event) {\n    const intersects = RaycastForLabel(event);\n\n    if (intersects.length > 0) {\n        const labelUid = intersects[0].object.userData.uid;\n        selectLabel(labelUid);\n    }\n    else\n    {\n        if (window.location.hash !== '') {\n            visualDeselectAllLabels();\n            window.location.hash = '';\n        }\n    }\n}\n\nfunction RaycastForLabel(event) {\n    const canvas = renderer.domElement;\n    const canvasRect = canvas.getBoundingClientRect();\n    const mouse = new Vector2(\n        ((event.clientX - canvasRect.left) / canvasRect.width) * 2 - 1,\n        -((event.clientY - canvasRect.top) / canvasRect.height) * 2 + 1\n    );\n\n    const raycaster = new Raycaster();\n    raycaster.setFromCamera(mouse, camera);\n    return raycaster.intersectObjects(labelPoints);\n}\n"],"names":["async","createLabel","point","labelNumber","title","description","uid","camera","scene","labelPoints","labelMaterial","ShaderMaterial","vertexShader","LabelColliderMaterialVertexShader","fragmentShader","LabelColliderMaterialFragmentShader","createLabelColliderMaterial","labelGeometry","SphereGeometry","labelPoint","Mesh","position","copy","userData","number","texture","canvas","document","createElement","size","width","height","context","getContext","fillStyle","font","textAlign","textBaseline","fillText","Texture","needsUpdate","createLabelTexture","textMesh","PlaneGeometry","cameraRight","Vector3","applyMatrix4","matrixWorld","cameraUp","cameraForward","LabelMaterialVertexShader","LabelMaterialFragmentShader","uniforms","time","value","selected","myTexture","uCameraPosition","uCameraDirection","uCameraRight","uCameraUp","uCameraForward","screenHeight","window","innerHeight","transparent","createTextMaterial","borderCircle","LabelBorderMaterialVertexShader","LabelBorderMaterialFragmentShader","createBorderMaterial","set","scale","add","push","stopAllTweens","getAll","forEach","tween","stop","append","parameters","vars","location","search","substring","split","i","length","pair","key","decodeURIComponent","parseQueryString","Object","keys","lightBackground","darkBackground","css","head","getElementsByTagName","style","setAttribute","styleSheet","cssText","appendChild","createTextNode","methodMap","nativeAPI","unprefixedMethods","returnValue","methodList","index","method","entries","eventNameMap","change","fullscreenchange","error","fullscreenerror","screenfull","request","element","documentElement","options","Promise","resolve","reject","onFullScreenEntered","off","on","returnPromise","requestFullscreen","then","catch","exit","isFullscreen","onFullScreenExit","exitFullscreen","toggle","onchange","callback","onerror","event","eventName","addEventListener","removeEventListener","raw","defineProperties","get","Boolean","fullscreenElement","enumerable","isEnabled","fullscreenEnabled","screenfull$1","_pureAssign","func1","func2","_pureRef","name","_primitiveTypes","UNDEF_VALUE","NULL_VALUE","EMPTY","FUNCTION","OBJECT","PROTOTYPE","__PROTO__","UNDEFINED","CONSTRUCTOR","SYMBOL","POLYFILL_TAG","LENGTH","NAME","CALL","TO_STRING","ObjClass","ObjProto","StrCls","String","StrProto","MathCls","Math","ArrCls","Array","ArrProto","ArrSlice","safe","func","argArray","v","apply","this","e","safeGet","cb","defValue","result","_createIs","theType","_createObjIs","theName","objToString","call","isUndefined","isNullOrUndefined","isStrictNullOrUndefined","isDefined","arg","isPrimitiveType","indexOf","isString","isFunction","isObject","isArray","isDate","isNumber","isBoolean","isError","isPromiseLike","isTruthy","objGetOwnPropertyDescriptor","objHasOwnProperty","obj","prop","hasOwnProperty","objHasOwn","polyObjHasOwn","objForEachKey","theObject","callbackfn","thisArg","_createKeyValueMap","values","keyType","valueType","completeFn","theMap","asString","ERROR_TYPE","dumpObj","object","format","propertyValueDump","objType","stack","message","JSON","stringify","replace","throwError","Error","throwTypeError","TypeError","_objFreeze","_doNothing","_getProto","objAssign","objKeys","objDeepFreeze","objFreeze","objGetPrototypeOf","createEnumKeyMap","createSimpleMap","mapClass","_globalCfg","_wellKnownSymbolMap","asyncIterator","hasInstance","isConcatSpreadable","iterator","match","matchAll","species","toPrimitive","toStringTag","unscopables","GLOBAL_CONFIG_KEY","_getGlobalValue","globalThis","self","global","_getGlobalConfig","gbl","_unwrapFunction","_unwrapFunctionWithPoly","funcName","clsProto","polyFunc","clsFn","theFunc","theArgs","arguments","_unwrapProp","propName","mathMax","strSlice","strSubstring","strSubstr","polyStrSubstr","start","strLeft","count","_polySymbols","_wellKnownSymbolCache","UNIQUE_REGISTRY_ID","_globalSymbolRegistry","gblCfg","gblSym","k","s","polyNewSymbol","theSymbol","toString","polySymbolFor","registry","newSymbol_1","regId_1","polyGetKnownSymbol","knownName","propMap","c","w","g","_createProp","l","desc","newValue","_globalLazyTestHooks","objDefineProp","objDefine","target","propDesc","_initTestHooks","getLazy","lazyValue","b","lzy","configurable","createCachedValue","toJSON","_cachedGlobal","WINDOW","_getGlobalInstFn","getFn","cachedValue","getGlobal","useCached","getInst","getWindow","hasDocument","getDocument","hasWindow","hasNavigator","getNavigator","hasHistory","getHistory","_symbol","_symbolFor","_iterSymbol$1","isNode","process","versions","node","isWebWorker","WorkerGlobalScope","_initSymbol","_getSymbolKey","hasSymbol","getSymbol","getKnownSymbol","noPoly","sym","newSymbol","symbolFor","isIterator","next","isIterable","iterForOf","iter","err","iterResult","done","failed","throw","return","fnApply","fn","arrAppend","elms","elm","arrForEach","theArray","len","idx","arrIndexOf","arrMap","arrSlice","end","_isProtoArray","_unsupportedError","arrReduce","objCreate","polyObjCreate","type","tempFunc","objSetPrototypeOf","proto","d","_a","_createCustomError","__","_setName","baseClass","createCustomError","constructCb","errorBase","theBaseClass","orgName","captureFn","captureStackTrace","_this","_self","orgProto","utcNow","Date","now","polyUtcNow","getTime","_createTrimFn","exp","_fnToString","_objCtrFnString","_gblWindow","strTrim","isPlainObject","Function","ex","_defaultDeepCopyHandler","details","plainObjDeepCopyHandler","defaultDeepCopyHandlers","copyTo","_getSetVisited","visitMap","source","newPath","theEntry","entry","_deepCopy","ctx","userHandler","handler","path","concat","newCtx","src","isPlain","isPrim","origin","newKey","_copyProps","newEntry","objDeepCopy","_doExtend","theArg","objCopyProps","deepExtend","obj1","obj2","obj3","obj4","obj5","obj6","_perf","getLength","getPerformance","strSplit","setValueByKey","parts","lastKey","pop","strEndsWith","polyStrEndsWith","searchString","searchValue","strIndexOf","REF","UNREF","HAS_REF","ENABLED","_createTimerHandler","startTimer","refreshFn","cancelFn","theTimerHandler","ref","timerId","_unref","_cancel","_refresh","cancel","refresh","h","dn","_createTimeoutWith","overrideFn","isArr","setFn","setTimeout","clearFn","clearTimeout","timerFn","scheduleTimeout","timeout","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","DynProtoBaseProto","DynProtoGlobalSettings","DynProtoCurrent","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_objGetOwnProps","_gbl","_gblInst","o","n","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","_getObjProto","newProto","curProto","_forEachProp","props","name_1","lp","_isDynamicCandidate","skipOwn","_throwTypeError","_hasVisited","_populatePrototype","className","baseInstFuncs","setInstanceFunc","_createDynamicPrototype","dynProtoProxy","instFunc","currentDynProtoProxy","instFuncTable","canAddInst","objProto","visited","protoFunc","_getInstFunc","_getProtoFunc","instFuncs_1","_getObjName","unknownValue","dynamicProto","theClass","delegateFunc","classProto","thisTarget","thisProto","_checkPrototype","perfOptions","useBaseInst","instFuncs","_getInstanceFuncs","baseFuncs","_instFuncProxy","funcHost","baseProto","_getBaseFuncs","strShimFunction","strShimObject","strShimUndefined","strShimPrototype","strHasOwnProperty","__assignFn","t","p","extendStaticsFn","__proto__","__extendsFn","constructor","__spreadArrayFn","to","from","il","j","aggregationErrorType","createEnumStyle","createValueMap","_DYN_TO_LOWER_CASE","_DYN_BLK_VAL","_DYN_LENGTH","_DYN_RD_ONLY","_DYN_NOTIFY","_DYN_WARN_TO_CONSOLE","_DYN_THROW_INTERNAL","_DYN_SET_DF","_DYN_WATCH","_DYN_LOGGER","_DYN_APPLY","_DYN_PUSH","_DYN_SPLICE","_DYN_HDLR","_DYN_CANCEL","_DYN_INITIALIZE","_DYN_IDENTIFIER","_DYN_REMOVE_NOTIFICATION_0","_DYN_ADD_NOTIFICATION_LIS1","_DYN_IS_INITIALIZED","_DYN_GET_NOTIFY_MGR","_DYN_GET_PLUGIN","_DYN_POLL_INTERNAL_LOGS","_DYN_NAME","_DYN_TIME","_DYN_PROCESS_NEXT","_DYN_GET_PROCESS_TEL_CONT2","_DYN_ENABLED","_DYN_STOP_POLLING_INTERNA3","_DYN_UNLOAD","_DYN_ON_COMPLETE","_DYN_VERSION","_DYN_LOGGING_LEVEL_CONSOL4","_DYN_CREATE_NEW","_DYN_TEARDOWN","_DYN_MESSAGE_ID","_DYN_MESSAGE","_DYN_IS_ASYNC","_DYN_DIAG_LOG","_DYN__DO_TEARDOWN","_DYN_UPDATE","_DYN_GET_NEXT","_DYN_SET_NEXT_PLUGIN","_DYN_PROTOCOL","_DYN_USER_AGENT","_DYN_SPLIT","_DYN_NODE_TYPE","_DYN_REPLACE","_DYN_LOG_INTERNAL_MESSAGE","_DYN_TYPE","_DYN_HANDLER","_DYN_STATUS","_DYN_GET_RESPONSE_HEADER","_DYN_GET_ALL_RESPONSE_HEA5","_DYN_IS_CHILD_EVT","_DYN_DATA","_DYN_GET_CTX","_DYN_SET_CTX","_DYN_COMPLETE","_DYN_ITEMS_RECEIVED","_DYN_URL_STRING","_DYN_SEND_POST","_DYN_HEADERS","_DYN_TIMEOUT","_DYN_SET_REQUEST_HEADER","_DYN_TRACE_ID","_DYN_SPAN_ID","_DYN_TRACE_FLAGS","STR_PROMISE","REJECTED","doAwaitResponse","doAwait","status","rejected","reason","resolveFn","rejectFn","finallyFn","_hasInitEvent","STRING_STATES","DISPATCH_EVENT","_hasInitEventFn","doc","evt","createEvent","initEvent","_hasPromiseRejectionEvent","_promiseCls","_promiseCreator","NODE_UNHANDLED_REJECTION","UNHANDLED_REJECTION","toLowerCase","_currentPromiseId","_uniquePromiseId","_unhandledRejectionTimeout","dumpFnObj","_createPromise","newPromise","processor","executor","_settledValue","_thePromise","additionalArgs","_state","_hasResolved","_queue","_id","_handled","_unHandledRejectionHandler","_then","onResolved","onRejected","_strState","_processQueue","pending","slice","_createSettleIfFn","newState","allowState","theValue","_notifyUnhandledRejection","emit","evtName","populateEvent","useNewEvent","theEvt","Event","theConsole","emitEvent","finally","onFinally","thenFinally","catchFinally","_rejectFn","_createAllPromise","input","values_1","pending_1","item","timeoutItemProcessor","callbackTimeout","syncItemProcessor","createAsyncPromise","createNativePromise","PrmCls","thePromise","createPromise","createAllPromise","UNDEFINED_VALUE","STR_EMPTY","STR_CHANNELS","STR_CORE","STR_CREATE_PERF_MGR","STR_DISABLED","STR_EXTENSION_CONFIG","STR_EXTENSIONS","STR_PROCESS_TELEMETRY","STR_PRIORITY","STR_EVENTS_SENT","STR_EVENTS_DISCARDED","STR_EVENTS_SEND_REQUEST","STR_PERF_EVENT","STR_OFFLINE_STORE","STR_OFFLINE_SENT","STR_OFFLINE_DROP","STR_GET_PERF_MGR","STR_DOMAIN","STR_PATH","STR_NOT_DYNAMIC_ERROR","rCamelCase","rNormalizeInvalid","rLeadingNumeric","isNotNullOrUndefined","normalizeJsName","_all","letter","toUpperCase","strContains","toISOString","date","getExceptionName","setValue","field","valChk","srcChk","getSetValue","_createProxyFunction","srcFunc","originalArguments","proxyFunctionAs","overwriteTarget","proxyFunctions","functionsToProxy","theFuncName","optimizeObject","ObjAssign","objExtend","extended","argLen","deep","isArgArray","isArgObj","isNewArray","clone","isFeatureEnabled","feature","cfg","rlt","ft","featureOptIn","mode","getResponseText","xhr","responseText","formatErrorMessageXdr","xdr","formatErrorMessageXhr","response","prependTransports","theTransports","newTransports","strWithCredentials","_appendHeader","theHeaders","_getAllResponseHeaders","isOneDs","headersString","headers","headerEntry","header","strDocumentMode","strLocation","strConsole","strJSON","strCrypto","strMsCrypto","strMsie","strTrident","strXMLHttpRequest","_isTrident","_navUserAgentCheck","_enableMocks","_useXDomainRequest","_beaconsSupported","_hasProperty","property","supported","getLocation","checkForMock","mockLocation","hasJSON","getJSON","isIE","nav","userAgent","getIEVersion","userAgentStr","navigator_1","ua","max","parseInt","tridentVer","isBeaconsSupported","sendBeacon","isFetchSupported","withKeepAlive","isSupported","useXDomainRequest","XDomainRequest","isXhrSupported","sendCustomEvent","customDetails","evnt","CustomEvent","detail","initCustomEvent","createCustomDomEvent","dispatchEvent","UInt32Mask","MaxUInt32","SEED1","SEED2","_mwcSeeded","_mwcW","_mwcZ","_autoSeedMwc","seedValue","random","random32","signed","getRandomValues","Uint32Array","mwcRandom32","floor","newId","maxLength","chars","charAt","version","instanceName","_dataUid","_canAcceptData","createUniqueNamespace","includeVersion","createElmNodeData","data","id","accept","addDefault","theCache","_getCache","kill","_isConfigDefaults","isVal","fb","_getDefault","dynamicHandler","theConfig","cfgDefaults","isDefaultValid","dfVal","fallbacks","fallback","fbValue","_resolveDefaultValue","newValue_1","_applyDefaultValue","defaultValue","isValid","mergeDf","reference","readOnly","blkDynamicValue","mrg","usingDefault","cfgValue","dfName","dfValue","CFG_HANDLER_LINK","BLOCK_DYNAMIC","FORCE_DYNAMIC","_cfgDeepCopy","target_1","_canMakeDynamic","getFunc","state","blkVal","throwInvalidAccess","arrayMethodsToPatch","_throwDynamicError","logger","_getOwnPropGetter","_setDynamicProperty","getter","trk","clr","checkDynamic","isObjectOrArray","_getProperty","_makeDynamicObject","activeHandler","act","chng","ro","upd","isReferenced","rf","hdlr","valueState","newIsObjectOrArray","_createDynamicProperty","_setDynamicPropertyState","flags","isDynamic","inPlace","rdOnly","blkProp","blockDynamicConversion","orgMethod","args","_i","_patchArray","symPrefix","symPostfix","_createState","cfgHandler","theState","dynamicPropertySymbol","dynamicPropertyReadOnly","dynamicPropertyReferenced","dynamicPropertyBlockValue","dynamicPropertyDetail","_waitingHandlers","_watcherTimer","_useHandler","prevWatcher","bind","setDf","_notifyWatchers","notifyHandlers","watcherFailures_1","sourceErrors","errors","theMessage","srcError","throwAggregationError","use","_createDynamicHandler","getDynamicConfigHandler","newTarget","defaultValues","configHandler","rm","_createAndUseHandler","_block","allowUpdate","prevUpd","createDynamicConfig","config","defaultConfig","onConfigChange","_logInvalidAccess","runTargetUnload","isAsync","doUnloadAll","targets","resolved","DisabledPropertyName","_stringToBoolOrDefault","cfgDfMerge","cfgDfSet","setter","cfgDfValidate","validator","fallBackName","cfgDfBoolean","_debugListener","listenerFuncs","_aiNamespace","_listenerProxyFunc","dbgExt","getDebugExt","listener","ns","disableDbgExt","STR_WARN_TO_CONSOLE","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","enableDebug","_logFuncs","_sanitizeDiagnosticText","text","_logToConsole","console","logFunc","_InternalLogMessage","msgId","msg","isUserAct","properties","strProps","diagnosticText","dataType","safeGetLogger","core","DiagnosticLogger","_b","identifier","queue","_loggingLevelConsole","_loggingLevelTelemetry","_maxInternalMessageLimit","_enableDebug","_unloadHandler","_messageCount","_messageLogged","_logInternalMessage","severity","logMessage","messageKey","_debugExtMsg","throttleLimitMessage","throttleMessage","errorToConsole","consoleLoggingLevel","debugToConsole","resetInternalMessageCount","__ieDyn","_getLogger","_throwInternal","_warnToConsole","_doc","strToGMTString","strToUTCString","strCookie","strExpires","strIsCookieUseDisabled","strDisableCookiesUsage","strConfigCookieMgr","_supportsCookies","_allowUaSameSite","_parsedCookieValue","_cookieCache","_globalCookieConfig","rootDefaultConfig","cookieCfg","enabled","ignoreCookies","blockedCookies","cookieDomain","cookiePath","_getDoc","_isMgrEnabled","cookieMgr","_isIgnoredCookie","cookieMgrCfg","_isCfgEnabled","rootConfig","cookieMgrConfig","isCfgEnabled","cookieEnabled","safeGetCookieMgr","getCookieMgr","inst","createCookieMgr","_gblCookieMgr","_path","_domain","unloadHandler","_enabled","_getCookieFn","_setCookieFn","_delCookieFn","getCookie","_getCookieValue","setCookie","_setCookieValue","delCookie","areCookiesSupported","gblManager","setEnabled","maxAgeSec","domain","_isBlockedCookie","_extractParts","_isIE","expireMs","expiry","setTime","_formatDate","location_1","uaDisallowsSameSiteNone","_formatCookieValue","del","purge","exception","thePart","theDate","cookieValue","theCookie","perfEvtsSendAll","_runScheduledListeners","asyncNotifications","callbacks","_runListeners","listeners","NotificationManager","_listeners","_asyncNotifications","events","sendReason","perfEvent","batch","cnt","rn_1","waiting","_finishUnload","asyncUnload","strExecutionContextKey","strParentContextKey","strChildrenContextKey","PerfEvent","payloadDetails","theDetails_1","childTime","childEvts","childEvt","exTime","ParentContextKey","ChildrenContextKey","PerfManager","manager","create","fire","doPerfActiveKey","doPerf","mgrSource","getSource","perfMgr","perfEvt","currentActive","children","generateW3CId","tmp","hexValues","oct","a","clockSequenceHi","DEFAULT_VERSION","INVALID_TRACE_ID","INVALID_SPAN_ID","_isValid","invalidValue","_formatValue","createTraceParent","traceId","spanId","isValidTraceId","isValidSpanId","traceFlags","formatTraceParent","isNaN","_formatFlags","pluginStateData","_getPluginState","plugin","initializePlugins","processContext","extensions","pluginState","initPlugins","lastPlugin","proxy","thePlugin","isInitialized","getCfg","sortPlugins","plugins","sort","extA","extB","bHasProcess","strTelemetryPluginChain","strHasRunFlags","strGetTelCtx","_chainId","_createInternalContext","telemetryChain","startAt","_nextProxy","_onComplete","createTelemetryProxyChain","_getNextProxyStart","_next","nextProxy","onComplete","completeDetails","diagLog","getExtCfg","newConfig","_getExtCfg","getConfig","extConfig","hasNext","getNext","setNext","nextPlugin","iterate","that","createIfMissing","idCfg","extCfg","createProcessTelemetryContext","internalContext","env","createProcessTelemetryUnloadContext","unloadState","createProcessTelemetryUpdateContext","updateState","firstProxy","lastProxy_1","newProxy","chainId","hasProcessTelemetry","hasSetNext","proxyChain","getPlugin","processTelemetry","_processTelemetry","unload","_unloadPlugin","update","_updatePlugin","_setNext","_getTelCtx","itemCtx","_processChain","processPluginFn","hasRun","hasRunContext","nextId","hasNextRun","_callProcessTelemetry","sync","unloadCtx","_callTeardown","pluginCore","updateCtx","_callUpdate","createTelemetryPluginProxy","createUnloadHandlerContainer","handlers","run","createUnloadHookContainer","_hooks","oldHooks","remove","hooks","strGetPlugin","BaseTelemetryPlugin","_isinitialized","_rootCtx","_nextPlugin","_unloadHandlerContainer","_hookContainer","currentCtx","rootCtx","_setDefaults","pluginChain","_initDefaults","unloadDone","theUnloadCtx","theUnloadState","_unloadCallback","updateDone","theUpdateCtx","theUpdateState","_doUpdate","_updateCallback","setInitialized","TelemetryInitializerPlugin","_super","_initializers","priority","_base","addTelemetryInitializer","telemetryInitializer","theInitializer","initializer","_addInitializer","doNotSendItem","telemetryInitializersCount","_runInitializers","__extends","strValidationError","strSdkUnloadingError","diagnosticLogInterval","_createPerfManager","notificationMgr","_isPluginPresent","exists","_deepMergeConfig","newValues","merge","_findWatcher","newWatcher","theListener","_initDebugListener","unloadContainer","notificationManager","debugListener","getDebugListener","AppInsightsCore","_configHandler","_isInitialized","_logger","_eventQueue","_notificationManager","_perfManager","_cfgPerfManager","_cookieManager","_pluginChain","_configExtensions","_channelConfig","_channels","_isUnloading","_telemetryInitializerPlugin","_internalLogsEventName","_evtNamespace","_unloadHandlers","_traceCtx","_instrumentationKey","_cfgListeners","_extensions","_pluginVersionStringArr","_pluginVersionString","_internalLogPoller","_internalLogPollerListening","_forceStopInternalLogPoller","_startLogPoller","alwaysStart","_addUnloadHook","interval","isRunning","createTimeout","_flushInternalLogs","unref","_setPluginVersions","thePlugins","_addPluginVersions","ver","channels","updateCfg","join","newLogger","cfgExtensions","splice","_createTelCtx","theCtx","_getPluginChain","_initPluginChain","theExtensions","channelPriority","allExtensions","coreExtensions","extPriorities","ext","extPriority","_validateExtensions","_getPlugin","pluginIdentifier","theExt","channelHosts","getChannel","host","removeCb","pluginsToRemove","_removePlugins","removed","removeComplete","newConfigExtensions","newChannelConfig","newQueue","channel","iKey","baseType","baseData","track","_flushChannels","callBack","cbTimeout","doneIterating","cbTimer","doCallback","flush","handled_1","_updateHook","_logOrThrowError","_notifyInvalidEvent","telemetryItem","prevCfgPerfMgr","instrumentationKey","enablePerfMgr","createPerfMgr","__spreadArray","teeController","unloadHdl","_registerDelayedCfgListener","releaseQueue","getChannels","controls","getNotifyMgr","setCookieMgr","setPerfMgr","eventCnt","eventQueue","unloadComplete","flushComplete","processUnloadCtx","addPlugin","replaceExisting","addCb","existingPlugin","_addPlugin","added","removedPlugins_1","mergeExisting","oldCfg","evtNamespace","getTraceCtx","createNew","trace","getName","setName","getTraceId","setTraceId","getSpanId","setSpanId","getTraceFlags","setTraceFlags","newTraceFlags","setTraceCtx","traceCtx","addUnloadHook","onCfgChange","unloadHook","fnd","_createUnloadHook","getWParam","enableWParam","parseResponse","parse","itemsAccepted","itemsReceived","_noResponseQs","STR_POST_METHOD","SenderPostManager","_enableSendPromise","_diagLog","_isOneDs","_onCompleteFuncs","_disableCredentials","_fallbackInst","_disableXhr","_disableBeacon","_disableBeaconSync","_disableFetchKeepAlive","_addNoResponse","_timeoutWrapper","_syncFetchPayload","_sendCredentials","_onError","_doOnComplete","_onNoPayloadUrl","oncomplete","_doBeaconSend","payload","url","plainTextBatch","Blob","_beaconSender","onRetry","beaconOnRetry","_xhrSender","resolveFunc","rejectFunc","disableXhrSync","endPointUrl","urlString","withCredentials","disabled","isSync","_wrapSetXhrProp","XMLHttpRequest","open","openXhr","_doOnReadyFunc","onReadyFunc","xhrOnComplete","headerName","onreadystatechange","readyState","onload","ontimeout","send","_doFetchSender","requestHeaders","Headers","batchLength","ignoreResponse","responseHandled","init","body","credentials","keepalive","Request","_handleError","res","_onFetchComplete","onCompleteFunc","fetchOnComplete","fetch","response_1","ok","resp","statusText","_xdrSender","_window","onloadFunc","xdrOnComplete","onprogress","hostingProtocol","endpoint","lastIndexOf","endpointUrl","SetConfig","senderOnCompleteCallBack","disableCredentials","enableSendPromise","disableXhr","disableBeacon","disableBeaconSync","timeWrapper","addNoResponse","disableFetchKeepAlive","sendPOST","protocol","getSyncFetchPayload","getSenderInst","transports","syncSupport","transportType","sendPostFunc","_transport","_isSync","_getSenderInterface","getFallbackInst","strOnPrefix","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","strEvents","strVisibilityChangeEvt","strPageHide","strUnload","strBeforeUnload","strPageHideNamespace","rRemoveEmptyNs","rRemoveTrailingEmptyNs","_guid","elmNodeData","eventNamespace","_normalizeNamespace","_getEvtNamespace","theNamespace_1","parsedEvent","exec","_getRegisteredEvents","aiEvts","registeredEvents","_doDetach","handlerRef","useCapture","_doUnregister","unRegFn","theEvent","capture","mergeEvtNamespace","theNamespace","namespaces","eventOn","_doAttach","registeredEvent","guid","eventOff","evtName_1","found_1","eventCache","evtType","_unregisterEvents","regEvent","_addEventListeners","excludeEvents","addEventHandler","removeEventListeners","removeEventHandler","addPageUnloadEventListener","addEventListeners","addPageHideEventListener","newNamespaces","pageUnloadAdded","visibilityState","aiInstrumentHooks","cbNames","_arrLoop","arr","_doCallbacks","callDetails","cbArgs","hookCtx","hook","cbks","orgEx","hookErrorCb","_getOwner","checkPrototype","checkParentProto","owner","_createInstrumentHook","aiHook","newFunc","orgArgs","funcArgs","_createArgs","f","rslt","_createFunctionHook","theHook","InstrumentFunc","InstrumentEvent","SampleRate","ProcessLegacy","HttpMethod","DEFAULT_BREEZE_ENDPOINT","DEFAULT_BREEZE_PATH","strNotSpecified","strIkey","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","traceStateHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","_DYN_INGESTIONENDPOINT","_DYN_TO_STRING","_DYN_REMOVE_ITEM","_DYN_COUNT","_DYN_PRE_TRIGGER_DATE","_DYN_DISABLED","_DYN_INTERVAL","_DYN_DAYS_OF_MONTH","_DYN_DATE","_DYN_GET_UTCDATE","_DYN_STRINGIFY","_DYN_PATHNAME","_DYN_CORRELATION_HEADER_E0","_DYN_EXCEPTIONS","_DYN_PARSED_STACK","_DYN_PROPERTIES","_DYN_MEASUREMENTS","_DYN_SIZE_IN_BYTES","_DYN_TYPE_NAME","_DYN_SEVERITY_LEVEL","_DYN_PROBLEM_GROUP","_DYN_IS_MANUAL","_DYN__CREATE_FROM_INTERFA1","_DYN_ASSEMBLY","_DYN_FILE_NAME","_DYN_HAS_FULL_STACK","_DYN_LEVEL","_DYN_METHOD","_DYN_LINE","_DYN_DURATION","_DYN_RECEIVED_RESPONSE","dataSanitizeKeyAndAddUniqueness","map","origLength","nameTrunc","dataSanitizeKey","uniqueField","dataSanitizeString","valueTrunc","dataSanitizeUrl","dataSanitizeInput","dataSanitizeMessage","messageTrunc","dataSanitizeProperties","tempProps_1","dataSanitizeMeasurements","measurements","tempMeasurements_1","measure","_msgId","inputTrunc","_document","_htmlAnchorIdx","_htmlAnchorElement","urlParseUrl","anchorIdx","anchorCache","tempAnchor","urlParseHost","href","inclPort","fullHost","urlParseFullHost","port","_internalEndpoints","isInternalApplicationInsightsEndpoint","correlationIdCanIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","correlationHeaderExcludePatterns","test","requestHost","enableCorsCorrelation","matchExists_1","includedDomains","correlationHeaderDomains","regex","RegExp","excludedDomains","correlationHeaderExcludedDomains","correlationIdGetCorrelationContext","responseHeader","correlationId","keyValues","keyValue","correlationIdGetCorrelationContextValue","dateTimeUtilsNow","perf","timing","navigationStart","dateTimeUtilsDuration","createDistributedTraceContextFromTrace","telemetryTrace","parentCtx","traceID","parentID","StorageType","LocalStorage","SessionStorage","_canUseLocalStorage","_canUseSessionStorage","_storagePrefix","_getLocalStorageObject","utlCanUseLocalStorage","_getVerifiedStorageObject","storageType","storage","setItem","fail","getItem","_getSessionStorageObject","utlCanUseSessionStorage","utlSetStoragePrefix","storagePrefix","reset","utlGetLocalStorage","utlSetLocalStorage","utlGetSessionStorage","utlSetSessionStorage","utlRemoveSessionStorage","ThrottleMgr","namePrefix","_config","_localStorageObj","_isTriggered","_namePrefix","_isReady","_isSpecificDaysGiven","_flushMessage","msgID","saveUnsentMsg","isSampledIn","_getCfgByKey","maxValue","limit","samplingRate","_canSampledIn","localStorageObj","_getLocalStorageObjByKey","canThrottle","_canThrottle","throttled","isTriggered","_isTrigger","min","maxSendNumber","localStorageName","_getLocalStorageName","_resetLocalStorage","_sendMessage","isThrottled","throttleNum","_getQueueByKey","_setCfgByKey","curCfg","configInterval","daysOfMonth","monthInterval","dayInterval","_getIntervalConfig","canUseLocalStorage","curDate","_getThrottleDate","monthCheck","monthExpand","getUTCFullYear","getUTCMonth","_checkInterval","dayCheck","daySpan","msgKey","prefix","fix","dateStr","getDate","storageName","current","curObj","storageObj","preTriggerDate","_getLocalStorageObj","isTrigger","_isTriggeredOnCurDate","coreConfig","throttleMgrCfg","localObj","isReady","items","flushAll","result_1","isFlushed","onReadyState","sendMessage","Envelope","sampleRate","tags","aiDataContract","envelopeType","strError","strStack","strStackDetails","strErrorSrc","strMessage","strDescription","_stringify","convertToString","_formatMessage","errorType","evtMessage","_isStackDetails","_convertStackObj","errorStack","_getStackFromErrorObj","errorObj","errorMessage","lines","_getOperaStack","_getErrorType","typeName","results","_formatErrorCode","Exception","severityLevel","exceptions","_isExceptionInternal","_ExceptionDetails","CreateAutoException","lineNumber","columnNumber","errorSrc","stackDetails","CreateFromInterface","__assign","prototype","toInterface","problemGroup","isManual","exceptionDetailsInterface","CreateSimpleException","assembly","fileName","line","formatError","outerId","hasFullStack","parsedStack","_isExceptionDetailsInternal","frames","level_1","totalSizeInBytes_1","frame","theFrame","_StackFrame","parsedFrame","left","right","acceptedLeft","acceptedRight","howMany","_parseStack","exceptionTrunc","dataSanitizeException","_formatStackTrace","sourceFrame","level","matches","sizeInBytes","baseSize","DataPoint","kind","stdDev","Metric","metrics","dataPoint","strEmpty","msToTimeSpan","totalms","round","ms","sec","hour","days","PageView","durationMs","duration","dataSanitizeId","RemoteDependencyData","absoluteUrl","commandName","success","resultCode","requestAPI","correlationContext","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","parsedUrl","pathName","pathname","AjaxHelperParseDependencyPath","Trace","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","Data","_aiNameFunc","baseName","aiName","defaults","_aiApplication","_aiDevice","_aiLocation","_aiOperation","_aiSession","_aiUser","_aiCloud","_aiInternal","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","internalSnippet","internalSdkSrc","createTelemetryItem","envelopeName","customProperties","systemProperties","Extensions","CtxTagKeys","createDomEvent","_disableEvents","PropertiesPluginIdentifier","BreezeChannelIdentifier","AnalyticsPluginIdentifier","_DYN_IS_STORAGE_USE_DISAB0","_DYN__ADD_HOOK","_DYN_CORE","_DYN_DATA_TYPE","_DYN_ENVELOPE_TYPE","_DYN_TRACK","_DYN_TRACK_PAGE_VIEW","_DYN_TRACK_PREVIOUS_PAGE_1","_DYN_SEND_PAGE_VIEW_INTER2","_DYN_START_TIME","_DYN_SEND_PAGE_VIEW_PERFO3","_DYN_POPULATE_PAGE_VIEW_P4","_DYN_HREF","_DYN_SEND_EXCEPTION_INTER5","_DYN_EXCEPTION","_DYN_ERROR","_DYN__ONERROR","_DYN_ERROR_SRC","_DYN_LINE_NUMBER","_DYN_COLUMN_NUMBER","_DYN__CREATE_AUTO_EXCEPTI6","_DYN_ADD_TELEMETRY_INITIA7","_DYN_AUTO_TRACK_PAGE_VISI9","_DYN_IS_BROWSER_LINK_TRAC10","_DYN_ENABLE_AUTO_ROUTE_TR11","_DYN_ENABLE_UNHANDLED_PRO12","_DYN_AUTO_UNHANDLED_PROMI13","_DYN_GET_ENTRIES_BY_TYPE","_DYN_IS_PERFORMANCE_TIMIN14","_DYN_GET_PERFORMANCE_TIMI15","_DYN_NAVIGATION_START","_DYN_SHOULD_COLLECT_DURAT16","_DYN_IS_PERFORMANCE_TIMIN17","_DYN_RESPONSE_START","_DYN_LOAD_EVENT_END","_DYN_RESPONSE_END","_DYN_CONNECT_END","_DYN_PAGE_VISIT_START_TIM18","PageViewManager","appInsights","overridePageViewDuration","pageViewPerformanceManager","queueTimer","itemQueue","pageViewPerformanceSent","firstPageViewSent","_startTimer","allItems","doFlush","_addQueue","pageView","uri","navigationEntries","timeOrigin","loadEventStart","duration_1","customDuration","pageViewSent","processed","pageViewPerformance","teardown","botAgentNames","_isPerformanceTimingSupported","_isPerformanceTimingDataReady","domainLookupStart","domLoading","_getPerformanceTiming","_getPerformanceNavigationTiming","getEntriesByType","_shouldCollectDuration","durations","isGoogleBot","PageViewPerformanceManager","navigationTiming","total","network","dom","requestStart","responseEnd","PageVisitTimeManager","pageVisitTimeTrackingHandler","prevPageVisitDataKeyName","currentPageName","currentPageUrl","prevPageVisitTimeData","pageName","pageUrl","prevPageVisitData","pageVisitEndTime","pageVisitDataJsonStr","pageVisitTime","stopPageVisitTimer","currPageVisitDataStr","PageVisitData","restartPageVisitTimer","Timing","_events","action","_dispatchEvent","sessionRenewalMs","_chkConfigMilliseconds","sessionExpirationMs","disableExceptionTracking","samplingPercentage","disableFlushOnBeforeUnload","disableFlushOnUnload","_updateStorageUsage","AnalyticsPlugin","_eventTracking","_pageTracking","_pageViewManager","_pageViewPerformanceManager","_pageVisitTimeManager","_preInitTelemetryInitializers","_isBrowserLinkTrackingEnabled","_browserLinkInitializerAdded","_enableAutoRouteTracking","_historyListenerAdded","_disableExceptionTracking","_autoExceptionInstrumented","_enableUnhandledPromiseRejectionTracking","_autoUnhandledPromiseInstrumented","_extConfig","_autoTrackPageVisitTime","_prevUri","_currUri","autoRoutePVDelay","_addHook","throwInternal","processNext","trackEvent","EventTelemetry","startTrackEvent","stopTrackEvent","trackTrace","trackMetric","metric","inPv","refUri","referrer","trackPageViewPerformance","inPvp","startTrackPage","stopTrackPage","measurement","loc","theError","trackException","URL","isCrossOriginError","_sendCORSException","errorString","initialize","browserLinkPaths_1","dropBrowserLinkRequests","envelope","remoteData","_populateDefaults","PageName","PageUrl","average","sampleCount","trackPageVisitTime","pageViewItem","locn","autoExceptionInstrumented","rsp","_location","_getReason","_addUnhandledPromiseRejectionTracking","win","_history","pushState","replaceState","strUndefined","history","_popstateHandler","_locationChangeHandler","distributedTraceCtx","_getDistributedTraceCtx","traceLocationName","hash","_addHistoryListener","_doTeardown","Version","_DYN_FEATURE_OPT_IN","_DYN_ON_CFG_CHANGE_RECEIV0","_DYN_NON_OVERRIDE_CONFIGS","_DYN_SCHEDULE_FETCH_TIMEO1","replaceByNonOverrideCfg","nonOverrideConfigs","curLevel","maxLevel","exceedMaxLevel","curCfg_1","nonOverrideVal","F","M","ON","OFF","applyCdnfeatureCfg","cdnCfg","optInMap","cdnConfig_1","featureVal","userOptInDetails","cdnFt","cdnM","cdnOnV","onCfg","cdnOffV","offCfg","userFt","userM","userOnV","userOffV","blockCdn","blockCdnCfg","onFld","offFld","onV","offV","resolveCdnFeatureCfg","val","ftVal","dVal","_overrideCdnCfgByFeature","EVENT_NAME","udfVal","_defaultConfig","syncMode","blkCdnCfg","customEvtName","cfgUrl","overrideSyncFn","overrideFetchFn","connectionString","CfgSyncPlugin","_extensionConfig","_mainConfig","_evtName","_cfgUrl","_timeoutHandle","_receiveChanges","_broadcastChanges","_blkCdnCfg","_fetchTimeout","_retryCnt","_onCfgChangeReceive","_nonOverrideConfigs","_fetchFn","_overrideFetchFn","_overrideSyncFn","_paused","_setCfg","isAutoSync","_sendCfgsyncEvents","_eventOff","global_1","_updateEventListenerName","global_2","cfgEvent","newCfg","_replaceTartgetByKeys","_fetchSender","fetchFn","xhr_1","DONE","JSON_1","_cfg","_setupTimer","_clearScheduledTimer","preBlkCdn","newEvtName","_getFetchFnInterface","pause","resume","setCfg","updateEventListenerName","STR_DURATION","_DYN_TAGS","_DYN_DEVICE_TYPE","_DYN__GET","_DYN_ENQUEUE","_DYN_EVENTS_LIMIT_IN_MEM","_DYN_ITEM","_DYN_EMIT_LINE_DELIMITED_0","_DYN_CLEAR","_DYN_MARK_AS_SENT","_DYN_CLEAR_SENT","_DYN_BUFFER_OVERRIDE","_DYN__BUFFER__KEY","_DYN__SENT__BUFFER__KEY","_DYN_CONCAT","_DYN__MAX__BUFFER__SIZE","_DYN_TRIGGER_SEND","_DYN__SENDER","_DYN_CUSTOM_HEADERS","_DYN_MAX_BATCH_SIZE_IN_BY1","_DYN_ONUNLOAD_DISABLE_BEA2","_DYN_IS_BEACON_API_DISABL3","_DYN_ALWAYS_USE_XHR_OVERR4","_DYN_DISABLE_XHR","_DYN_ENABLE_SESSION_STORA5","_DYN__BUFFER","_DYN_ONUNLOAD_DISABLE_FET6","_DYN_DISABLE_SEND_BEACON_7","_DYN_INSTRUMENTATION_KEY","_DYN_ENABLE_SEND_PROMISE","_DYN_GET_SENDER_INST","_DYN_UNLOAD_TRANSPORTS","_DYN_CONVERT_UNDEFINED","_DYN_MAX_BATCH_INTERVAL","_DYN_SERIALIZE","_DYN__ON_ERROR","_DYN__ON_PARTIAL_SUCCESS","_DYN__ON_SUCCESS","_DYN_ITEMS_ACCEPTED","_DYN_ORI_PAYLOAD","_DYN_BASE_TYPE","_DYN_SAMPLE_RATE","_DYN_EVENTS_SEND_REQUEST","_DYN_GET_SAMPLING_SCORE","strBaseType","strBaseData","strProperties","strTrue","_setValueIf","_extractPropsAndMeasurements","_convertPropsUndefinedToCustomDefinedValue","customUndefinedValue","_createEnvelope","startTime","iKeyNoDashes","envTags","itmExt","itmTags","extUser","user","authId","localId","extApp","app","sesId","extDevice","device","deviceClass","ip","model","web","browserLang","browserVer","browser","envData","envBaseData","envProps","screenRes","userConsent","extOs","os","osVer","extTrace","tgs","tg","theTags","EnvelopeCreator","_extractPartAExtensions","EnvelopeCreatorInit","EventEnvelopeCreator","customMeasurements","eventData","BaseSendBuffer","_buffer","_bufferFullMessageSent","_maxRetryCnt","maxRetryCnt","_set","buffer","getItems","batchPayloads","payloads","payloadStr_1","canUseSessionStorage","newBuffer","SessionStorageSendBuffer","ArraySendBuffer","PREVIOUS_KEYS","bufferItems","_getBuffer","itemsInSentBuffer","previousItems","_getItemsFromPreviousKey","prefixEvents","_getPreviousEvents","notDeliveredItems","_removePayloadsFromBuffer","remaining","payloadStr","prefixedKey","_getBufferBase","bufferJson","buffer_1","_setBuffer","transFormedItems_1","internalItem","BUFFER_KEY","sentElements","unsentItems","sentItems","VERSION","SENT_BUFFER_KEY","MAX_BUFFER_SIZE","Serializer","_serializeObject","circularReferenceCheck","output","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","isObj","sources","expectedType","num","parseFloat","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","charCodeAt","abs","SamplingScoreGenerator","hashCodeGenerator","Sample","samplingScoreGenerator","_getResponseText","defaultAppInsightsChannelConfig","disableTelemetry","isRetryDisabled","httpXHROverride","retryCodes","EnvelopeTypeCreator","currentContextId","bd","pageType","isLoggedIn","pageViewData","exData","baseMetricData","remoteDepData","responseCode","Sender","_consecutiveErrors","_retryAt","_serializer","_stamp_specific_redirects","_headers","_syncUnloadSender","_offlineListener","_endpointUrl","_orgEndpointUrl","_maxBatchSizeInBytes","_beaconSupported","_beaconOnUnloadSupported","_beaconNormalSupported","_customHeaders","_disableTelemetry","_convertUndefined","_isRetryDisabled","_maxBatchInterval","_sessionStorageUsed","_bufferOverrideUsed","_alwaysUseCustomSend","_fetchKeepAlive","_xhrSend","_fallbackSend","_disableBeaconSplit","_sendPostMgr","_retryCodes","_xdrOnLoad","_xhrReadyStateChange","countOfItemsInPayload","_checkResponsStatus","responseURL","_getPayloadArr","_validate","diagLogger","_sample","_getEnvelope","defaultEnvelopeIkey","aiEnvelope","constructEnvelope","_serialize","valid","_batch","_createPayload","_getHeaders","_doSend","sendInterface","markAsSent","payloadData","_getPayload","_onSuccess","_getOnComplete","_checkMaxSize","incomingPayload","incomingSize","isOnline","responseUrl","_appId","appId","_checkAndUpdateEndPointUrl","_isRetriable","_resendPayload","_doUnloadSend","_isStringArr","_fetchKeepAliveSender","transport","payloadSize","linearFactor","payload_1","delayInSeconds","SlotDelayInSeconds","backOffSlot","pow","backOffDelay","_setRetryTime","retryInterval","dateNow","timerValue","statusCode","onunloadFlush","addHeader","parentEvtNamespace","_navigator","_isListening","listenerList","rState","onLine","uState","_currentState","calCurrentState","_enableEvents","ononline","_setOnline","_setOffline","listnerNoticeCheck","offlineState","isListening","addListener","setOnlineState","createOfflineListener","senderConfig","customHeader","bufferOverride","shouldUpdate","disableValidation","disableInstrumentationKeyValidation","_validateInstrumentationKey","sendPostConfig","onCompleteFuncs","resValue","canSend","internalPayload","droppedPayload","thePayload","_onBeaconRetry","_getSendPostMgrConfig","customInterface","httpInterface","syncInterface","xhrInterface","syncTransports","filter","payloadItem","isCompletelyIdle","forcedSender","sendRequest","_getNotifyMgr","_notifySendRequest","ieVer","getOfflineSupport","getUrl","createPayload","shouldProcess","retry","reverse","errors_1","extracted","_onPartialSuccess","orig","convertUndefined","STR_PROPERTIES","_DYN_REQUEST_URL","_DYN_INST","_DYN_CONTEXT","_DYN_ABORTED","_DYN_TRACE_ID0","_DYN_SPAN_ID1","_DYN_INCLUDE_CORRELATION_2","_DYN_GET_ABSOLUTE_URL","_DYN_REQUEST_HEADERS","_DYN_TRACK_DEPENDENCY_DAT3","_DYN_ENABLE_REQUEST_HEADE4","_DYN_ENABLE_AJAX_ERROR_ST5","_DYN_ENABLE_AJAX_PERF_TRA6","_DYN_MAX_AJAX_CALLS_PER_V7","_DYN_EXCLUDE_REQUEST_FROM8","_DYN_ADD_REQUEST_CONTEXT","_DYN_DISABLE_AJAX_TRACKIN9","_DYN_AJAX_PERF_LOOKUP_DEL10","_DYN_DISABLE_FETCH_TRACKI11","_DYN_ENABLE_RESPONSE_HEAD12","_DYN_STATUS_TEXT","_DYN_HEADER_MAP","_DYN_OPEN_DONE","_DYN_SEND_DONE","_DYN_REQUEST_SENT_TIME","_DYN_ABORT_DONE","_DYN_GET_TRACE_ID","_DYN_GET_TRACE_FLAGS","_DYN_ERROR_STATUS_TEXT","_DYN_STATE_CHANGE_ATTACHE13","_DYN_RESPONSE_TEXT","_DYN_RESPONSE_FINISHED_TI14","_DYN__CREATE_TRACK_ITEM","_DYN_RESPONSE","_DYN_GET_ALL_RESPONSE_HEA15","_DYN_GET_PART_APROPS","_DYN_PERF_MARK","_DYN_PERF_TIMING","_DYN_AJAX_DIAGNOSTICS_MES16","_DYN_CORRELATION_CONTEXT","_DYN_AJAX_TOTAL_DURATION","_DYN_EVENT_TRACE_CTX","_calcPerfDuration","resourceEntry","_setPerfDuration","_setPerfValue","strPerf","XHRMonitoringState","setRequestHeaderDone","ajaxRecord","completed","requestHeadersSize","responseReceivingDuration","callbackDuration","requestSize","responseStartedTime","callbackFinishedTime","endTime","xhrMonitoringState","clientFailure","getAbsoluteUrl","getPathName","ajaxType","enableRequestHeaderTracking","getResponse","ajaxTotalDuration","requestSentTime","responseFinishedTime","dependency","ajaxData","propsSet","strName","strStart","strEnd","strDomainLookup","strConnect","strRedirect","strRequest","strResponse","strStartTime","strDomainLookupStart","strDomainLookupEnd","strConnectStart","strConnectEnd","strRequestStart","strRequestEnd","strResponseStart","strResponseEnd","strRedirectStart","strRedirectEnd","strTransferSize","strEncodedBodySize","strDecodedBodySize","strServerTiming","serverTiming","server_1","perfAttempts","_populatePerfData","headerMap","responseHeaders","responseType","partA","traceExt","AJAX_MONITOR_PREFIX","strDiagLog","AJAX_DATA_CONTAINER","STR_FETCH","ERROR_HEADER","ERROR_PREFIX","ERROR_POSTFIX","ERROR_NOT_SENT","CORRELATION_HEADER_ERROR","CUSTOM_REQUEST_CONTEXT_ERROR","FAILED_TO_CALCULATE_DURATION_ERROR","_markCount","_getAjaxData","ajaxDataId","_isHeaderSet","xh","_getFailedAjaxDiagnosticsMessage","_throwInternalCritical","ajaxMonitorInstance","_throwInternalWarning","_createErrorCallbackFunc","internalMessage","ajaxDiagnosticsMessage","_ajaxDataId","_indexOf","_addHandler","container","theHandler","_processDependencyContainer","BLOB_CORE","DfltAjaxCorrelationHeaderExDomains","_internalExcludeEndpoints","distributedTracingMode","maxAjaxPerfLookupAttempts","ignoreHeaders","addIntEndpoints","AjaxMonitor","_fetchInitialized","_xhrInitialized","_currentWindowHost","_enableRequestHeaderTracking","_enableAjaxErrorStatusText","_trackAjaxAttempts","_context","_isUsingW3CHeaders","_isUsingAIHeaders","_markPrefix","_enableAjaxPerfTracking","_maxAjaxCallsPerView","_enableResponseHeaderTracking","_disabledUrls","_disableAjaxTracking","_disableFetchTracking","_excludeRequestFromAutoTrackingPatterns","_addRequestContext","_dependencyHandlerId","_dependencyListeners","_dependencyInitializers","_ignoreHeaders","_maxAjaxPerfLookupAttempts","_ajaxPerfLookupDelay","_distributedTracingMode","_polyfillInitialized","_canIncludeHeaders","_hookProto","InstrumentProto","_isDisabledRequest","isDisabled","theUrl","theRegex","idx2","_isMonitoredXhrInstance","excludeAjaxDataValidation","ajaxValidation","initialized","_createMarkId","performance_1","mark","markId","getEntriesByName","_findPerfResourceEntry","initiatorType","trackCallback","reportError","perfMark","performance","maxAttempts","retryDelay","attempt","locateResourceTiming","perfTiming","getEntries","entryType","clearMarks","_getFailedFetchDiagnosticsMessage","_reportFetchMetrics","_reportFetchError","failedProps","errorProps","sysProperties","_reportDependencyInternal","initializers","aborted","propExt","strPrototype","abort","xhrData","theOpen","_supportsAjaxMonitoring","req","spanID","xhrRequestData","ajaxDataCntr","_openHandler","_reportXhrError","ajaxResponse","responseHeadersString","getResponseHeader","_getAjaxCorrelationContext","responseHeaderMap_2","shift","_onAjaxComplete","exceptionText","_attachToOnReadyStateChange","hkErr","_addSharedXhrHeaders","_global","isPolyfill","polyfill","fetchData","_createFetchRecord","newInit","fetchData_1","fetchDiagnosticsMessage","_getFetchCorrelationContext","responseHeaderMap_1","trackDependencyData","currentWindowHost","_processDependencyListeners","traceParent","addDependencyListener","dependencyListener","addDependencyInitializer","dependencyInitializer","Application","Device","Internal","unloadHookContainer","sdkExtension","sdkVersion","Location","_DYN_SESSION_MANAGER","_DYN_IS_USER_COOKIE_SET","_DYN_IS_NEW_USER","_DYN_GET_TRACE_CTX","_DYN_TELEMETRY_TRACE","_DYN_APPLY_SESSION_CONTEX0","_DYN_APPLY_APPLICATION_CO1","_DYN_APPLY_DEVICE_CONTEXT","_DYN_APPLY_OPERATION_CONT2","_DYN_APPLY_USER_CONTEXT","_DYN_APPLY_OPERATING_SYST3","_DYN_APPLY_LOCATION_CONTE4","_DYN_APPLY_INTERNAL_CONTE5","_DYN_ACCOUNT_ID","_DYN_GET_SESSION_ID","_DYN_NAME_PREFIX","_DYN_USER_COOKIE_POSTFIX","_DYN_ID_LENGTH","_DYN_GET_NEW_ID","_DYN_AUTOMATIC_SESSION","_DYN_AUTHENTICATED_ID","_DYN_ACQUISITION_DATE","_DYN_RENEWAL_DATE","_DYN_JOIN","_DYN_COOKIE_SEPARATOR","_DYN_AUTH_USER_COOKIE_NAM7","Session","_SessionManager","_storageNamePrefix","_cookieUpdatedTimestamp","_sessionExpirationMs","_sessionRenewalMs","sessionCookiePostfix","_initializeAutomaticSessionWithData","session","sessionData","sessionReset","tokens","acqMs","renewalMs","_setCookie","nowMs","acq","renewalPeriodMs","acqTimeLeftMs","cookie","isExpired","storageValue","_initializeAutomaticSession","timeSinceAcqMs","timeSinceRenewalMs","getNewId","automaticSession","_renew","backup","renewal","TelemetryTrace","parentId","_validateUserInput","User","isNewUser","isUserCookieSet","userCookiePostfix","userCookieName","params","_generateNewId","_setUserCookie","_generateNewCookie","utlRemoveStorage","authCookie","authCookieString","decodeURI","acqStr","accountAcquisitionDate","setAuthenticatedUserContext","authenticatedUserId","accountId","storeInCookie","encodeURI","clearAuthenticatedUserContext","cookieSeparator","authUserCookieName","strExt","strTags","_removeEmpty","_nullResult","undefString","_c","_d","_internalSdkSrc","TelemetryContext","previousTraceCtx","application","internal","autoSession","build","agentVersion","snippetVer","sdkSrc","applyWebContext","cleanUp","nullValue","isBrowserLinkTrackingEnabled","PropertiesPlugin","_distributedTraceCtx","_previousTraceCtx","_disableUserInitMessage","disableUserInitMessage","_unloadHooks","breezeChannel","theContext","userCtx","_processTelemetryInternal","_AUTHENTICATED_USER_CONTEXT","_TRACK","STR_SNIPPET","STR_FLUSH","STR_POLL_INTERNAL_LOGS","STR_GET_PLUGIN","STR_EVT_NAMESPACE","STR_TRACK_EVENT","STR_TRACK_TRACE","STR_TRACK_METRIC","STR_TRACK_PAGE_VIEW","STR_TRACK_EXCEPTION","STR_TRACK_DEPENDENCY_DATA","STR_SET_AUTHENTICATED_USER_CONTEXT","STR_CLEAR_AUTHENTICATED_USER_CONTEXT","_DYN_QUEUE","_DYN_CONNECTION_STRING","_DYN_ENDPOINT_URL","_DYN_USER_OVERRIDE_ENDPOI0","_DYN_ONUNLOAD_FLUSH","_DYN_ADD_HOUSEKEEPING_BEF1","_DYN_SEND_MESSAGE","_ignoreUpdateSnippetProperties","IKEY_USAGE","CDN_USAGE","SDK_LOADER_VER","default_throttle_config","defaultConfigValues","extensionConfig","AppInsightsSku","snippet","dependencies","_sender","_snippetVersion","_houseKeepingNamespace","_core","_analyticsPlugin","_cfgSyncPlugin","_throttleMgr","_iKeySentMessage","_cdnSentMessage","_sdkVerSentMessage","sv","_removePageEventHandlers","removePageHideEventListener","DependenciesPlugin","cs","kvPairs","fields","kv","kvParts","endpointsuffix","locationPrefix","parseConnectionString","ingest","ingestionendpoint","instrumentationkey","flushDone","loadAppInsights","legacyMode","throwUnsupported","isModule","cdns","scrpt","currentScript","url_1","src_1","_findSdkSourceFile","_updateSnippetProperties","emptyQueue","defaultEnable","chkSet","_loop_1","length_1","appInsightsInstance","performHousekeeping_1","loadedPlugin","propertiesPlugin","_sessionManager","added_1","analyticsPlugin","excludePageUnloadEvents","disablePageUnloadEvents","product","getSender","ExploreMode","EventParameter","EventTracker","ApplicationInsights","Config","trackPageView","openExperience","modelTriggered","enrichment","experience","modelLabelTriggered","label","getLabelProperties","modelLabelExpanded","defaultProperties","getDefaultProperties","publisher","isPublished","isARAvailable","ModelViewer","modelViewer","assetBundle","labels","enrichmentScript","querySelector","innerHTML","modelLabels","extractEnrichmentDocumentData","assetBundleScript","extractAssetBundleDocumentData","module_default","widescreen","supportsFullscreen","eventTracker","isLabelExpanded","updateWidescreen","innerWidth","currentLabel","findCurrentLabelElement","removeAttribute","trackLabelEvent","fullscreen","currentLabelID","getElementById","findCurrentLabelObject","labelUid","find","replaceAll","findPreviousAndNextLabelElements","previous","nextLink","previousLink","previousLabel","nextLabel","labelExpanded","parentElement","hasAttribute","newURL","oldURL","Alpine","renderer","mixer","center","clock","Clock","visualSelectLabel","startsWith","selectedLabelUid","trim","material","targetPosition","initialPosition","initialTarget","initialDistance","distanceTo","zoomOutDistance","zoomInDistance","direction","sub","normalize","zoomOutPosition","multiplyScalar","zoomInPosition","createZoomTween","Tween","x","y","z","easing","Easing","Quadratic","InOut","onUpdate","zoomOutTween","zoomInTween","zoomTween","animateCameraMove","animate","delta","getDelta","updateMatrixWorld","clear","render","requestAnimationFrame","onWindowResize","aspect","updateProjectionMatrix","setSize","visualDeselectAllLabels","panTween","cameraZoomReset","glbUrl","buildTargets","glb","boundingBox","Cache","Scene","PerspectiveCamera","WebGLRenderer","antialias","alpha","preserveDrawingBuffer","setClearColor","setPixelRatio","devicePixelRatio","outputEncoding","SRGBColorSpace","environment","loader","GainMapLoader","loadAsync","renderTarget","envMap","PMREMGenerator","fromEquirectangular","dispose","loadHDRTexture","gltf","dracoLoader","DRACOLoader","setDecoderPath","GLTFLoader","setDRACOLoader","load","animations","AnimationMixer","clip","clipAction","play","loadGlb","environmentRotation","PI","seUpScene","domElement","minY","maxY","OrbitControls","enableDamping","dampingFactor","maxPolarAngle","minPolarAngle","maxDistance","minDistance","labelIndex","positionX","anchorPosition","positionY","positionZ","addLabels","startX","startY","isDragging","clientX","clientY","onMouseMove","moveEvent","onMouseUp","upEvent","intersects","canvasRect","getBoundingClientRect","mouse","Vector2","top","raycaster","Raycaster","setFromCamera","intersectObjects","RaycastForLabel","prefixedLabelUid","selectLabel","onDocumentClicked","setUpClickListener","renderModel"],"mappings":"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","x_google_ignoreList":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104]}