{"version":3,"file":"index-Mrp6P90n.js","sources":["../../../_site/scripts/ModelNavigation.js","../../../_site/scripts/search.js"],"sourcesContent":["import Alpine from 'alpinejs';\n\n(function() {\n    document.addEventListener('alpine:init', () => {\n        Alpine.data('ModelNavigation', () => ({\n            getBareModelUid(prefixedModelUid) {\n                return prefixedModelUid?.replace('#model-', '').replace('model-', '');\n            },\n            findPreviousAndNextModel() {\n                const currentModelUid = this.getBareModelUid(document.location.hash);\n                if (!currentModelUid) {\n                    return { previous: null, next: null };\n                }\n\n                const models = [...document.querySelectorAll('ul.cards li.visible dialog')].sort((left, right) => {\n                    const findOrder = (element) => {\n                        while (element !== null) {\n                            if (element.style.order) {\n                                return parseInt(element.style.order);\n                            }\n\n                            element = element.parentElement;\n                        }\n\n                        return 0;\n                    };\n                    const leftOrder = findOrder(left);\n                    const rightOrder = findOrder(right);\n                    return leftOrder - rightOrder;\n                });\n\n                if (!models || models.length === 0) {\n                    return { previous: null, next: null };\n                }\n\n                let previous = null;\n                let next = null;\n                let foundCurrentModel = false;\n\n                for (const model of models) {\n                    const modelUid = this.getBareModelUid(model.id);\n\n                    if (modelUid === currentModelUid) {\n                        foundCurrentModel = true;\n                    }\n\n                    if (foundCurrentModel && !next && modelUid !== currentModelUid) {\n                        next = model;\n                    }\n\n                    if (!foundCurrentModel && modelUid !== currentModelUid) {\n                        previous = model;\n                    }\n\n                    if (previous && next) {\n                        break;\n                    }\n                }\n\n                return { previous, next };\n            },\n            close() {\n                document.location.hash = '';\n            },\n            navigate(event) {\n                switch (event.keyCode) {\n                    case 33: // PageUp\n                        this.previous();\n                        break;\n                    case 34: // PageDown\n                        this.next();\n                        break;\n                }\n            },\n            previous() {\n                const models = this.findPreviousAndNextModel();\n                if (!models.previous) {\n                    return;\n                }\n\n                document.location.hash = models.previous.id;\n            },\n            next() {\n                const models = this.findPreviousAndNextModel();\n                if (!models.next) {\n                    return;\n                }\n\n                document.location.hash = models.next.id;\n            }\n        }))\n    });\n\n    if (!window.Alpine) {\n        window.Alpine = Alpine;\n        Alpine.start();\n    }\n})();\n","'use strict';\n\n(function() {\n    const searchScore = function(searchString, name, tags) {\n        const nameRelevanceFactor = 5;\n        const tagRelevanceFactor = 1;\n        const nameScore = name?.includes(searchString)\n            ? nameRelevanceFactor * (searchString.length / name.length)\n            : 0;\n        const tagScores = tags\n            ?.filter(tag => tag?.includes(searchString))\n            ?.map(tag => tagRelevanceFactor * (searchString.length / tag.length));\n        const tagScore = Math.max(tagScores) || 0;\n\n        return Math.max(nameScore, tagScore) || 0;\n    };\n\n    const findName = function(element) {\n        const nameElement = element.querySelector('.name');\n        return (nameElement?.textContent || nameElement?.innerText)?.trim()?.toUpperCase();\n    };\n\n    const findTags = function(element) {\n        const tags = element.querySelectorAll('.tags > li');\n        if (!tags || tags.length === 0) {\n            return [];\n        }\n\n        return [...tags].map(tag => tag?.innerText?.trim()?.toUpperCase());\n    };\n\n    const search = function(event) {\n        const targetSelector = event.target.dataset.target;\n        if (!targetSelector) {\n            targetSelector.error('No data-target specified');\n            return;\n        }\n\n        const targetElements = document.querySelectorAll(targetSelector);\n        if (!targetElements || targetElements.length === 0) {\n            console.error(`'${targetSelector}' matches no elements`);\n            return;\n        }\n\n        const searchString = event.target.value.toUpperCase();\n\n        for (const element of targetElements) {\n            for (const child of element.children) {\n                if (searchString?.trim().length === 0) {\n                    child.style.order = 0;\n                    child.classList.remove('visible', 'hidden');\n                    child.classList.add('visible');\n                    continue;\n                }\n\n                const name = findName(child);\n                const tags = findTags(child);\n                const score = searchScore(searchString, name, tags);\n                const order = Math.round(score * 100_000) * -1;\n\n                child.style.order = order;\n                child.classList.remove('visible', 'hidden');\n\n                if (score > 0) {\n                    child.classList.add('visible');\n                } else {\n                    child.classList.add('hidden');\n                }\n            }\n        }\n    };\n\n    document.addEventListener('DOMContentLoaded', function() {\n        const searchFields = document.querySelectorAll('input[type=\"search\"]');\n        for (const searchField of searchFields) {\n            searchField.addEventListener('keyup', search);\n        }\n    });\n})();\n"],"names":["module_default","document","addEventListener","data","getBareModelUid","prefixedModelUid","replace","findPreviousAndNextModel","currentModelUid","this","location","hash","previous","next","models","querySelectorAll","sort","left","right","findOrder","element","style","order","parseInt","parentElement","length","foundCurrentModel","model","modelUid","id","close","navigate","event","keyCode","window","Alpine","start","searchScore","searchString","name","tags","_a","nameScore","includes","tagScores","filter","tag","map","tagScore","Math","max","findName","_b","nameElement","querySelector","textContent","innerText","trim","toUpperCase","findTags","search","targetSelector","target","dataset","error","targetElements","console","value","child","children","classList","remove","add","score","round","searchFields","searchField"],"mappings":"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"}